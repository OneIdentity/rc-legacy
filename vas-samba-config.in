#!/bin/sh
# (c) 2008 Quest Software, Inc. All rights reserved.

. "@pkgdatadir@/vasidmap-common.sh"

PWDCHGCONF="@sysconfdir@/vas-set-samba-password.conf"
PWDCHGSCRIPT="@libexecdir@/vas-set-samba-password"

DEBUG=false
QUIET=false

FORCE=false	    # -f option
RESTART_SAMBA=true  # -n option

# Process command line arguments
opterr=false
samba_prefix=
samba_configfile=
while test $# -gt 0; do
    case "$1" in
	-d) DEBUG=true; shift;;
	-f) FORCE=true; shift;;
	-n) RESTART_SAMBA=false; shift;;
	-q) QUIET=true; shift;;
	-s) samba_configfile="$2"; shift; shift;;
	-S) samba_prefix="$2"; shift; shift;;
	-V) echo "@VERSION@"; exit 0;;
	--) shift; break;;
	-*) echo "Unknown option '$1'" >&2; shift; opterr=true;;
	*)  break;;
    esac
done
if test $# -ne 0; then	    # Expect no extra arguments
    opterr=true
fi
if $opterr; then	    # Show usage on option error
    echo "Usage: $0 [-dfnqV] [-s /path/smb.conf] [-S samba-prefix]" >&2
    exit 1
fi

if test -n "$samba_prefix"; then
    smbd=$samba_prefix/sbin/smbd
else
    smbd=`search_for_smbd`
fi

debug_echo "using smbd at $smbd"
test -n "$smbd" || die "Cannot find a working smbd. Please use -S option"
detect_samba_settings "$smbd" "$samba_configfile" || die_cat <<-.
	Cannot obtain settings from samba server $smbd
	or from configuration file $samba_configfile
	Please check these files or specify different configuration
	with the -s and -S options to this script.
.

##########################
#          MAIN          #
##########################

verbose_echo "Checking for VAS..."
detect_vas || die "Cannot find VAS installed"

is_lt $VAS_VERSION 3 && 
    die "Requires VAS version 3 or later (current VAS version is $VERSION)"

# First of all check if we are joined
$VASTOOL -u host/ auth -S host/ > /dev/null || die_cat <<-.
	ERROR: The machine does not appear to be joined to any domain
	or this script is not being run as root.
	Please verify the machine is correctly joined and then re-run
	$0 to complete the installation
	and configuration of both SAMBA and VAS.
.

#Gather configuration data
# Find the REALM
DOMAIN=`$VASTOOL -u host/ info domain`
test -n "$DOMAIN" || die_cat <<-.
        ERROR: Unable to determine the current domain (realm).
	Is this machine properly joined to the domain?
.
REALM=`echo "$DOMAIN" | tr '[a-z]' '[A-Z]'`

# Find the pre-Windows 2000 Domain Name (Workgroup)
WORKGROUP=`vas_workgroup -u host/` || die_cat <<-.
        ERROR: Unable to determine the domain's pre-Windows 2000 name.
	Is this machine properly joined to the domain?
.

test -f "$SAMBA_CONFIGFILE" || die <<-.
	ERROR: $SAMBA_CONFIGFILE is missing.
	Please verify that the Samba package is installed.
.

TODAY=`date +"%Y%m%d"`

######################
# Samba service control

#-- bug 254: this may need updating when porting
detect_opsys
case $OPSYS in
	HP-UX)  initdir=/sbin/init.d   SAMBASVC=samba ;;
	SunOS)  initdir=/etc/init.d    SAMBASVC=samba-csw ;;
	AIX)    initdir=SRC            SAMBASVC=samba ;;
        *)      initdir=/etc/init.d    SAMBASVC=samba ;;  # Linux!
esac

#-- stops a service
stopsvc () {
    if [ $initdir = SRC ]; then
	stopsrc -s $1
    else
	test -x $initdir/$1 && $initdir/$1 stop
    fi
}

#-- starts a service
startsvc () {
    if [ $initdir = SRC ]; then
	startsrc -s $1
    else
	test -x $initdir/$1 && $initdir/$1 start
    fi
}


# stop the samba and vasidmap services
verbose_echo "Stopping services..."
$RESTART_SAMBA && stopsvc $SAMBASVC
stopsvc vasidmapd


##########################
# Modify smb.conf 

verbose_echo "Checking $SAMBA_CONFIGFILE..."

CONFMOD="$SAMBA_CONFIGFILE.mod"
NEWTEXT=/tmp/newtext$$.tmp

#Must do this before calling any check_* function
cp "$SAMBA_CONFIGFILE" "$CONFMOD"
: >$NEWTEXT

PAMOPT=undefined
if $FORCE; then
    PAMOPT=yes
elif check_parm "obey pam restrictions" "$CONFMOD"; then
    debug_echo "'obey pam restrictions' is already in place"
else
    cat <<-.

	  Samba can use PAM for user access control. This works
	  by calling the PAM account and session stacks whenever
	  a Samba share is mounted. This is a recommended option.
.
    yesorno "Enable 'obey pam restrictions' option?" yes \
	&& PAMOPT=yes || PAMOPT=no
fi
debug_echo "PAMOPT=$PAMOPT"

check_and_fix_add () { check_and_fix "$1" "$2" "$3" || echo "$1 = $2" >> $4; }

# The following are Samba 3.0 parameters
check_and_fix_add "workgroup" "$WORKGROUP"	    "$CONFMOD" $NEWTEXT
check_and_fix_add "realm" "$REALM"		    "$CONFMOD" $NEWTEXT 
check_and_fix_add "security" "ads"		    "$CONFMOD" $NEWTEXT
check_parm "use spnego" "$CONFMOD" &&
    check_and_fix_add "use spnego" "yes"	    "$CONFMOD" $NEWTEXT
check_and_fix_add "domain master" "no"		    "$CONFMOD" $NEWTEXT
check_and_fix_add "domain logons" "no"		    "$CONFMOD" $NEWTEXT
check_and_fix_add "use kerberos keytab" "yes"	    "$CONFMOD" $NEWTEXT
check_and_fix_add "machine password timeout" "0"    "$CONFMOD" $NEWTEXT
check_and_fix_add "winbind nested groups" "no"	    "$CONFMOD" $NEWTEXT
test "$PAMOPT" = "yes" &&
    check_and_fix_add "obey pam restrictions" "yes" "$CONFMOD" $NEWTEXT

#check_parm "username map script" && cat <<-. >&2
#	Warning: username map script is OK only in VAS Unix Personality Mode
#.

# Attach vasidmap as an idmap backend
check_and_fix_add "ldap admin dn" "CN=VasIdmapAdmin" "$CONFMOD" $NEWTEXT
check_and_fix_add "idmap backend" "ldap:ldap://localhost" "$CONFMOD" $NEWTEXT
check_parm "idmap uid" "$CONFMOD" ||
 check_and_fix_add "idmap uid" "1-2147483647"	     "$CONFMOD" $NEWTEXT
check_parm "idmap gid" "$CONFMOD" ||
 check_and_fix_add "idmap gid" "1-2147483647"	     "$CONFMOD" $NEWTEXT

if is_lt $SAMBA_VERSION 3.0.25; then
 check_and_fix_add "idmap expire time" "300"	     "$CONFMOD" $NEWTEXT
else
 check_and_rename "idmap expire time" "idmap cache time" "$CONFMOD"
 check_and_rename "idmap negative time" "idmap negative cache time" "$CONFMOD"
 check_parm "idmap cache time" "$CONFMOD" ||
  check_and_fix_add "idmap cache time" "300"	     "$CONFMOD" $NEWTEXT
fi


#-- insert the new text at the end of the [global] section
if test -s $NEWTEXT; then
    SAVEIFS="$IFS"
    IFS=""
    INGLOBAL=false
    while read ILINE; do
        if echo "$ILINE" | grep -i "^$SP*\[global\]" >/dev/null; then
            INGLOBAL=true
        elif $INGLOBAL && echo "$ILINE" | grep -i "^$SP*\[.*\]" >/dev/null; then
            echo
            echo "  ;--- begin options added by vas-samba-config ($TODAY) ---"
            cat $NEWTEXT
            echo "  ;--- end options added by vas-samba-config ($TODAY) ---"
            echo
            echo "$ILINE"
            cat
            break
        fi
        echo "$ILINE"
    done < "$CONFMOD" > "$CONFMOD.new"
    IFS="$SAVEIFS"
    mv "$SAMBA_CONFIGFILE" "$SAMBA_CONFIGFILE.$TODAY.$$"
    mv "$CONFMOD.new" "$SAMBA_CONFIGFILE"
    rm -f "$CONFMOD"
    verbose_echo "  $SAMBA_CONFIGFILE: updated"
elif cmp "$CONFMOD" "$SAMBA_CONFIGFILE" >/dev/null; then
    verbose_echo "  $SAMBA_CONFIGFILE: no changes required"
else
    verbose_echo "  $SAMBA_CONFIGFILE: updated"
    mv "$SAMBA_CONFIGFILE" "$SAMBA_CONFIGFILE.$TODAY.$$"
    mv "$CONFMOD" "$SAMBA_CONFIGFILE"
fi
rm -f $NEWTEXT


##########################
# Modify vas.conf

verbose_echo "Checking $VAS_CONF..."

FIXFILE=/tmp/fix$$
cp $VAS_CONF $FIXFILE
fix_put () {
    ini_put "$1" "$2" "$3" $FIXFILE > $FIXFILE.new &&
	mv $FIXFILE.new $FIXFILE
}

case "$VAS_VERSION" in
  3.0.*|3.1.1.39|3.1.1.4[0123456])
    # VAS 3.0.x and 3.1.1.39 thru .46 need the make password permanent
    # because vastool cannot emit a random password
    fix_put vasd password-change-interval 0
    vastool_generates_random_password=false
    ;;
  *)
    fix_put vasd password-change-script "$PWDCHGSCRIPT"
    fix_put vasd password-change-interval "30"
    vastool_generates_random_password=true
    ;;
esac

if cmp $VAS_CONF $FIXFILE > /dev/null; then
    verbose_echo "  no changes to $VAS_CONF"
else
    backup=$VAS_CONF.$TODAY.$$
    cp $VAS_CONF $backup
    verbose_echo "  made backup $backup"
    cat $FIXFILE > $VAS_CONF
    verbose_echo "  updated $VAS_CONF"
fi

rm -f $FIXFILE

##########################
# Reset machine secret

if $FORCE; then
    PWDCHANGE="yes"
else
    cat <<-.

	  Samba can support NTLM (non-Kerberos) authentication for users,
	  but this requires that the local host password be renewed (set to
	  a new random string) during installation. Renewing the host
	  password is a normal operation that is performed periodically
	  by vasd.
.
    yesorno "Reset the local host key now for NTLM support?" yes \
        && PWDCHANGE="yes" || PWDCHANGE="no"
fi

# Set domain SID
verbose_echo "Detecting domain SID..."
DOMUSER=`$VASTOOL list users | awk -F: '{print $1;exit}'`
DOMSID=`@bindir@/vasidmap -u -n "$DOMUSER" | cut -d '-' -f 1-7`
test -n "$DOMSID" || die_cat <<-.
	There was a problem obtaining the domain SID from VAS.
	Please check that VAS is properly configured, and that
	domain controllers are available.
.
verbose_echo "  $DOMSID"

$SAMBA_BINDIR/net -s "$SAMBA_CONFIGFILE" setdomainsid "$DOMSID"

# Configure the change password script
if is_lt $SAMBA_VERSION 3.0.23; then
    PWDCHG_METHOD=tdb	# use tdbtool to directly update the secrets.tdb
else
    PWDCHG_METHOD=net	# use 'net -i'
fi
debug_echo "  password change METHOD = $PWDCHG_METHOD"

# Create a config file for the vas-set-samba-password script
test -f "$PWDCHGCONF" && mv $PWDCHGCONF $PWDCHGCONF.$TODAY.$$ # back-up
mkdir -p "@sysconfdir@"
cat <<-. >"$PWDCHGCONF"
	# Configured by $0 at $TODAY
	# for use with $PWDCHGSCRIPT
	SAMBA_BINDIR='$SAMBA_BINDIR'
	SAMBA_CONFIGFILE='$SAMBA_CONFIGFILE'
	METHOD=$PWDCHG_METHOD
.

if [ "$PWDCHANGE" = "yes" ]; then

    verbose_echo "Renewing the computer account password..."

    if $vastool_generates_random_password; then
	# Generate a new machine secret and set directly.
	$VASTOOL -u host/ -q passwd -r -o | $PWDCHGSCRIPT 
    else
	# Generate a secret key from the hex form of current key material
	SECRET='X!'`$VASTOOL ktutil list --keys | 
	    awk 'NR == 4 { print substr($4,0,16); exit }'`
	# Change the machine password using vastool
	(echo "$SECRET"; echo "$SECRET") | $VASTOOL -s -u host/ passwd
	# Set the new machine password in secrets.tdb
	echo "$SECRET" | $PWDCHGSCRIPT -s "$SAMBA_CONFIGFILE"
    fi

    # Test that the join worked ok
    verbose_echo "Testing SAMBA is joined to Active Directory..."
    $SAMBA_BINDIR/net -s "$SAMBA_CONFIGFILE" ads testjoin ||
	die "Samba not joined: 'net ads testjoin' failed"
fi

### Finally restart samba services
verbose_echo "Restarting services...."
startsvc vasidmapd
$RESTART_SAMBA && startsvc $SAMBASVC

exit 0
