Setup:
Modify ./test.conf and set:
username = <user to test groups and authentication with>
password = <user's password>
user_in_group = <name of a group that exists and the user is in>
user_not_in_group = <name of a group that exists and the user is not in>
bad_group = <group name that does not exist on the system>
bad_user = <user name that does not exist on the system>
show_groups = <Set to true if you want an output of the groups found for user tested>

Leave the other entries at the beginning, those are for testing the conf file parser. 

The user can VAS or local, though if local the test should be run as sudo to be able to do a proper auth. 
Otherwise the testAuthGood will fail. 

Running:
./test_all <name of library, defaults to ./sys-auth32.so>
or
make check

On certain OSes this will run calling sudo. If that isn't desired, modify Makefile. 
This is set up right now as a unit test to be run as it is being built, so it calls sudo as needed based on our internal build machine setup. 

Results:
There will be ouput showing the name of the test that filed. Should be fairly self-explanity, if not open test_all.c and read what it tried. 

Notes:
If DB2INSTANCE is not set, or the instance does not have sys-auth32, pamAuth32 will be looked for in the current directory.
This can cause issue on AIX if pam.conf is not set up. Thinking of ways to make it then try lamAuth32, not quite there yet. 
And the AIX boxes I test on just use pam anyways :). 

This currently has 90% code coverage, need to add two more functions for 100%, and got a few more edge cases as well. 
Once done, this will be much quicker and probably more effictive then a real setup ( as this tests some federated and multiple instance issues as well ). 
It tests at least right and rwong info for each relevent call, and where possible, different info ( usually case-ness of the input name ). 
