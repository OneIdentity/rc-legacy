#!/bin/ksh
# (c) 2007 Quest Software, Inc. All rights reserved.

# Uncomment for debug info.
# set -x

if [ -z "$1" ] || [ -n "$3" ]
then
	echo "Usage: $0 <Instance owner, i.e. db2inst1> [LAM]"
	exit 1
fi

if [ "`id | sed 's/uid=\([0-9]*\).*/\1/'`" -ne 0 ] ; then
    echo "Must be root to run."
    exit 1
fi

INSTANCEHOME="`eval echo ~${1}`"
PLUGINPATH32="${INSTANCEHOME}/sqllib/security32/plugin"
PLUGINPATH64="${INSTANCEHOME}/sqllib/security64/plugin"
LIBFILE=sys-auth.so
LIBFILE32=sys-auth32.so.@VERSION@
LIBFILE64=sys-auth64.so.@VERSION@
AUTHFILE=sys-auth
CHPWFILE=sys-chpw

if [ ! -f ${LIBFILE32} ]
then
	echo "Library ${LIBFILE32} not found!"
	exit 1
fi

if [ -f ${LIBFILE64} ]
then
    echo "64-bit library found, installing both 32 and 64 libraries/auth programs."
    TYPE=64
else 
    echo "64-bit library not found, installing only 32 library and auth program."
    TYPE=32
fi

if [ "$2" != "LAM" ] && [ -n "$2" ]
then
	echo "Second argument can only be LAM."
	exit 1
fi

uname -a | awk '{print $1}' | grep AIX >/dev/null
if [ "$2" = "LAM" -a $? -eq 0  ]; then 
        AUTH=lamAuth
        CHPW=lamChPw
else
    AUTH=pamAuth
    CHPW=pamChPw
fi

if [ ! -x "${AUTH}" ]
then
	echo "Auth program ${AUTH} not found."
	exit 1
fi

if [ ! -x "${CHPW}" ]
then
	echo "Password change program ${CHPW} not found."
	exit 1
fi

if [ ! -d ${PLUGINPATH32} -a ! -d ${PLUGINPATH64} ]
then
        echo "Directory $PLUGINPATH32 or $PLUGINPATH64 not found!"
        echo "Do you have the right name for an instance owner?"
        exit 1
fi

if [ -d ${PLUGINPATH32} ] ; then
    echo "Everything checks out, installing the 32-bit files."

    echo "First the cleanup, delete the old versions if they exist."
    rm -f ${PLUGINPATH32}/server/${LIBFILE}
    rm -f ${PLUGINPATH32}/client/${LIBFILE}
    rm -f ${PLUGINPATH32}/group/${LIBFILE}
    rm -f ${PLUGINPATH32}/${AUTHFILE}
    rm -f ${PLUGINPATH32}/${CHPWFILE}
# Clean up old files/links as well.
    rm -f ${PLUGINPATH32}/*/${LIBFILE32}

    echo "Now copy over the ${LIBFILE32} to ${PLUGINPATH32}/server&client&group/${LIBFILE}."
    cp ${LIBFILE32} ${PLUGINPATH32}/${LIBFILE32}
    ln -s ${PLUGINPATH32}/${LIBFILE32} ${PLUGINPATH32}/server/${LIBFILE}
    ln -s ${PLUGINPATH32}/${LIBFILE32} ${PLUGINPATH32}/client/${LIBFILE}
    ln -s ${PLUGINPATH32}/${LIBFILE32} ${PLUGINPATH32}/group/${LIBFILE}
    echo "Copy ${AUTH} to ${PLUGINPATH32}/${AUTHFILE}"
    cp ${AUTH} ${PLUGINPATH32}/${AUTHFILE}
    echo "Copy ${CHPW} to ${PLUGINPATH32}/${CHPWFILE}"
    cp ${CHPW} ${PLUGINPATH32}/${CHPWFILE}
    echo "And fix the ownerships/permissions. WARNING!!! ${PLUGINPATH32}/${AUTHFILE} and ${PLUGINPATH32}/${CHPWFILE} are setuid root because they have to be to do authentications/password changes. Just so you know."
    chown ${1} ${PLUGINPATH32}/${LIBFILE32}
    chmod 0555 ${PLUGINPATH32}/${LIBFILE32}
    chown root ${PLUGINPATH32}/${AUTHFILE} 
    chmod 4555 ${PLUGINPATH32}/${AUTHFILE} 
    chown root ${PLUGINPATH32}/${CHPWFILE} 
    chmod 4555 ${PLUGINPATH32}/${CHPWFILE} 
fi

if [ "${TYPE}" = "64" ]
then
    echo "Now the 64-bit files."
    echo "First the cleanup, delete the old versions if they exist."
	rm -f ${PLUGINPATH64}/server/${LIBFILE}
	rm -f ${PLUGINPATH64}/client/${LIBFILE}
	rm -f ${PLUGINPATH64}/group/${LIBFILE}
	rm -f ${PLUGINPATH64}/${AUTHFILE}
	rm -f ${PLUGINPATH64}/${CHPWFILE}
    # Clean up old files as well.
    rm -f ${PLUGINPATH64}/*/${LIBFILE64}
	
    echo "Now copy over the ${LIBFILE64} to ${PLUGINPATH64}/server&client&group/${LIBFILE}."
	cp ${LIBFILE64} ${PLUGINPATH64}/${LIBFILE64}
    ln -s ${PLUGINPATH64}/${LIBFILE64} ${PLUGINPATH64}/server/${LIBFILE}
    ln -s ${PLUGINPATH64}/${LIBFILE64} ${PLUGINPATH64}/client/${LIBFILE}
    ln -s ${PLUGINPATH64}/${LIBFILE64} ${PLUGINPATH64}/group/${LIBFILE}
    echo "Copy ${AUTH} to ${PLUGINPATH64}/${AUTHFILE}"
	cp ${AUTH} ${PLUGINPATH64}/${AUTHFILE}
    echo "Copy ${CHPW} to ${PLUGINPATH64}/${CHPWFILE}"
	cp ${CHPW} ${PLUGINPATH64}/${CHPWFILE}
    echo "And fix the ownerships/permissions. WARNING!!! ${PLUGINPATH64}/${AUTHFILE} and ${PLUGINPATH64}/${CHPWFILE} are setuid root because they have to be to do authentications/password changes. Just so you know."
	chown ${1} ${PLUGINPATH64}/${LIBFILE64}
	chmod 0555 ${PLUGINPATH64}/${LIBFILE64}
	chown root ${PLUGINPATH64}/${AUTHFILE} 
	chmod 4555 ${PLUGINPATH64}/${AUTHFILE} 
	chown root ${PLUGINPATH64}/${CHPWFILE} 
	chmod 4555 ${PLUGINPATH64}/${CHPWFILE} 
fi

echo ""
echo ""
echo ""
echo "The plug-in is now installed."
echo ""
echo ""
echo ""
echo "To make the instance use it, 3 more steps. "
echo "As the instance owner or user with admin, run the 3 following commands:"
echo ""
echo "db2 update dbm cfg using SRVCON_PW_PLUGIN sys-auth"
echo "db2 update dbm cfg using GROUP_PLUGIN sys-auth"
echo "db2 update dbm cfg using CLNT_PW_PLUGIN sys-auth"
echo ""
echo "Then restart the instance."
echo ""
echo ""
echo ""
echo "If the instance partitioned the install script will needs to be run on each machine that hosts a partition."
echo ""
echo "If on Linux or AIX 5.3, might need to make a specific sys-auth PAM service entry in pam.conf or /etc/pam.d/"
echo "For Linux: cp /etc/pam.d/sshd /etc/pam.d/sys-auth might do it."
echo "If you need help with this step, or any part of the process, contact Quest Support"
echo ""
