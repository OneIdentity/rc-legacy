diff -urN subversion-1.0.9.orig/build-outputs.mk subversion-1.0.9.dev/build-outputs.mk
--- subversion-1.0.9.orig/build-outputs.mk	2005-03-24 23:39:58.000000000 +1000
+++ subversion-1.0.9.dev/build-outputs.mk	2005-03-25 00:22:47.000000000 +1000
@@ -184,8 +184,8 @@
 subversion/libsvn_ra_local/libsvn_ra_local-1.la: $(libsvn_ra_local_DEPS)
 	cd subversion/libsvn_ra_local && $(LINK) -o libsvn_ra_local-1.la $(libsvn_ra_local_OBJECTS) ../../subversion/libsvn_repos/libsvn_repos-1.la ../../subversion/libsvn_fs/libsvn_fs-1.la ../../subversion/libsvn_delta/libsvn_delta-1.la ../../subversion/libsvn_subr/libsvn_subr-1.la $(SVN_APRUTIL_LIBS) $(SVN_APR_LIBS) $(LIBS)
 
-libsvn_ra_svn_DEPS =  subversion/libsvn_ra_svn/client.lo subversion/libsvn_ra_svn/cram.lo subversion/libsvn_ra_svn/editor.lo subversion/libsvn_ra_svn/editorp.lo subversion/libsvn_ra_svn/marshal.lo subversion/libsvn_delta/libsvn_delta-1.la subversion/libsvn_subr/libsvn_subr-1.la
-libsvn_ra_svn_OBJECTS = client.lo cram.lo editor.lo editorp.lo marshal.lo
+libsvn_ra_svn_DEPS =  subversion/libsvn_ra_svn/client.lo subversion/libsvn_ra_svn/cram.lo subversion/libsvn_ra_svn/gssapi.lo subversion/libsvn_ra_svn/editor.lo subversion/libsvn_ra_svn/editorp.lo subversion/libsvn_ra_svn/marshal.lo subversion/libsvn_delta/libsvn_delta-1.la subversion/libsvn_subr/libsvn_subr-1.la
+libsvn_ra_svn_OBJECTS = client.lo cram.lo gssapi.lo editor.lo editorp.lo marshal.lo
 subversion/libsvn_ra_svn/libsvn_ra_svn-1.la: $(libsvn_ra_svn_DEPS)
 	cd subversion/libsvn_ra_svn && $(LINK) -o libsvn_ra_svn-1.la $(libsvn_ra_svn_OBJECTS) ../../subversion/libsvn_delta/libsvn_delta-1.la ../../subversion/libsvn_subr/libsvn_subr-1.la $(SVN_APRUTIL_LIBS) $(SVN_APR_LIBS) $(LIBS)
 
diff -urN subversion-1.0.9.orig/subversion/include/svn_ra_svn.h subversion-1.0.9.dev/subversion/include/svn_ra_svn.h
--- subversion-1.0.9.orig/subversion/include/svn_ra_svn.h	2005-03-24 23:39:58.000000000 +1000
+++ subversion-1.0.9.dev/subversion/include/svn_ra_svn.h	2005-03-26 12:04:19.000000000 +1000
@@ -323,6 +323,21 @@
                                     svn_config_t *pwdb, const char **user,
                                     svn_boolean_t *success);
 
+#if HAVE_GSSAPI
+/** This function is only intended for use by svnserve.
+ *
+ * Perform GSSAPI password authentication.  On success, return
+ * SVN_NO_ERROR with *user set to the UPN and *success set to
+ * TRUE.  On an error which can be reported to the client, report the
+ * error and return SVN_NO_ERROR with *success set to FALSE.  On
+ * communications failure, return an error.
+ */
+svn_error_t *svn_ra_svn_gssapi_server(svn_ra_svn_conn_t *conn, apr_pool_t *pool,
+                                      const char *realm, const char *mecharg,
+				      const char **user, 
+				      svn_boolean_t *success);
+#endif
+
 #ifdef __cplusplus
 }
 #endif /* __cplusplus */
diff -urN subversion-1.0.9.orig/subversion/libsvn_ra_svn/client.c subversion-1.0.9.dev/subversion/libsvn_ra_svn/client.c
--- subversion-1.0.9.orig/subversion/libsvn_ra_svn/client.c	2005-03-24 23:39:58.000000000 +1000
+++ subversion-1.0.9.dev/subversion/libsvn_ra_svn/client.c	2005-03-26 21:40:26.000000000 +1000
@@ -18,6 +18,8 @@
 
 
 
+#include <assert.h>
+
 #define APR_WANT_STRFUNC
 #include <apr_want.h>
 #include <apr_general.h>
@@ -247,6 +249,7 @@
 {
   svn_ra_svn_conn_t *conn = sess->conn;
   const char *realmstring, *user, *password, *msg;
+  const char *hostname;
   svn_auth_iterstate_t *iterstate;
   void *creds;
   svn_boolean_t compat = (realm == NULL);
@@ -265,6 +268,38 @@
       SVN_ERR(auth_response(conn, pool, "ANONYMOUS", "", compat));
       return read_success(conn, pool);
     }
+#if HAVE_GSSAPI
+  else if (find_mech(mechlist, "GSSAPI"))
+    {
+      /* Extract the hostname from the realm prefix */
+      assert(memcmp(sess->realm_prefix, "<svn://", 7) == 0);
+      hostname = sess->realm_prefix + 7;
+      hostname = apr_pstrmemdup(pool, hostname,
+	     			strchr(hostname, ':') - hostname);
+
+      SVN_ERR(svn_auth_first_credentials(&creds, &iterstate,
+                                         SVN_AUTH_CRED_USERNAME, realmstring,
+                                         sess->auth_baton, pool));
+      if (!creds)
+        return svn_error_create(SVN_ERR_RA_NOT_AUTHORIZED, NULL,
+                                "Can't determine username");
+      while (creds)
+	{
+	  user = ((svn_auth_cred_username_t *) creds)->username;
+          SVN_ERR(auth_response(conn, pool, "GSSAPI", NULL, compat));
+          SVN_ERR(svn_ra_svn__gssapi_client(conn, pool, hostname,
+		      			    user, &msg));
+	  if (!msg)
+	    break;
+          SVN_ERR(svn_auth_next_credentials(&creds, iterstate, pool));
+	}
+      if (!creds)
+        return svn_error_createf(SVN_ERR_RA_NOT_AUTHORIZED, NULL,
+                                 "Authentication error from server: %s", msg);
+      SVN_ERR(svn_auth_save_credentials(iterstate, pool));
+      return SVN_NO_ERROR;
+    }
+#endif
   else if (find_mech(mechlist, "CRAM-MD5"))
     {
       SVN_ERR(svn_auth_first_credentials(&creds, &iterstate,
diff -urN subversion-1.0.9.orig/subversion/libsvn_ra_svn/gssapi.c subversion-1.0.9.dev/subversion/libsvn_ra_svn/gssapi.c
--- subversion-1.0.9.orig/subversion/libsvn_ra_svn/gssapi.c	1970-01-01 10:00:00.000000000 +1000
+++ subversion-1.0.9.dev/subversion/libsvn_ra_svn/gssapi.c	2005-03-27 01:42:06.000000000 +1000
@@ -0,0 +1,523 @@
+/*
+ * gssapi.c :  GSSAPI authentication
+ * David Leonard, Vintela Inc., 2005.
+ */
+
+
+
+#define APR_WANT_STRFUNC
+#define APR_WANT_STDIO
+#include <apr_want.h>
+#include <apr_general.h>
+#include <apr_lib.h>
+#include <apr_strings.h>
+#include <apr_network_io.h>
+
+#include <svn_types.h>
+#include <svn_string.h>
+#include <svn_pools.h>
+#include <svn_error.h>
+#include <svn_ra_svn.h>
+#include <svn_config.h>
+#include <svn_auth.h>
+
+#include "ra_svn.h"
+
+#define SERVICE_NAME		"host"	/* XXX should be "SVN" */
+
+#if HAVE_GSSAPI
+#include <gssapi.h>
+
+/* Prototypes */
+static svn_error_t *set_gssapi_filter(svn_ra_svn_conn_t *conn, gss_ctx_id_t context);
+static svn_error_t *svn_gssapi_wrap(svn_ra_svn_conn_t *conn,
+       			            struct svn_ra_conn_filter_st *filter, apr_pool_t *pool,
+				    const char *inner, apr_size_t innerlen,
+				    char **outer, apr_size_t *outerlen);
+static svn_error_t *svn_gssapi_unwrap(svn_ra_svn_conn_t *conn,
+       				      struct svn_ra_conn_filter_st *filter,
+				      apr_pool_t *pool, const char *src, apr_size_t srclen,
+				      char *dst, apr_size_t *dstszlen);
+
+#undef  svn_error_createf
+
+/*------------------------------------------------------------
+ * Generic GSS error handling
+ */
+
+/* Writes a "failure()" token to the peer containing message text, 
+ * and returns an authorization failure value */
+static svn_error_t *fail(svn_ra_svn_conn_t *conn, apr_pool_t *pool,
+                         const char *msg)
+{
+  fprintf(stderr, "fail: %s\n", msg);
+  SVN_ERR(svn_ra_svn_write_tuple(conn, pool, "w(c)", "failure", msg));
+  SVN_ERR(svn_ra_svn_flush(conn, pool));
+  return svn_error_createf(SVN_ERR_RA_NOT_AUTHORIZED, NULL, 
+	  		   "GSSAPI local failure: %s", msg);
+}
+
+/* Returns a string containing the displayable GSSAPI error */
+static char *display_error(apr_pool_t *pool, const char *src, 
+			   OM_uint32 major_err, OM_uint32 minor_err)
+{
+    OM_uint32 major, minor, ctx;
+    gss_buffer_desc buf;
+    char *msg;
+
+    msg = apr_pstrdup(pool, src);
+    ctx = 0;
+    do 
+      {
+        gss_display_status(&minor, major_err, GSS_C_GSS_CODE,
+	    	GSS_C_NO_OID, &ctx, &buf);
+	msg = apr_psprintf(pool, "%s; %.*s", msg, buf.length, buf.value);
+        gss_release_buffer(&minor, &buf);
+      } while (ctx != 0);
+    do 
+      {
+        gss_display_status(&minor, minor_err, GSS_C_MECH_CODE,
+	    	GSS_C_NO_OID, &ctx, &buf);
+	msg = apr_psprintf(pool, "%s; %.*s", msg, buf.length, buf.value);
+        gss_release_buffer(&minor, &buf);
+      } while (ctx != 0);
+
+    return msg;
+}
+
+/* Generates a failure token and error from GSSAPI error values */
+static svn_error_t *gss_fail(svn_ra_svn_conn_t *conn, apr_pool_t *pool,
+	const char *src, OM_uint32 major_err, OM_uint32 minor_err)
+{
+    return fail(conn, pool, display_error(pool, src, major_err, minor_err));
+}
+
+/* Record line numbers for debugging */
+#define gss_fail	    (svn_error__locate(__FILE__,__LINE__), (gss_fail))
+#define fail	 	    (svn_error__locate(__FILE__,__LINE__), (fail))
+#define svn_error_createf   (svn_error__locate(__FILE__,__LINE__), (svn_error_createf))
+
+/* Reads a token() or failure() message. On a token(), msg is set to NULL
+ * and content is placed in a gss_buffer. On failures() the gssbuf is
+ * not modified, but msg is set to the failure text. */
+static svn_error_t *read_token(svn_ra_svn_conn_t *conn, apr_pool_t *pool, 
+		               gss_buffer_t gssbuf, const char **msg)
+{
+  const char *status;
+  const svn_string_t *str = NULL;
+
+  SVN_ERR(svn_ra_svn_read_tuple(conn, pool, "w(?s)", &status, &str));
+  if (strcmp(status, "failure") == 0)
+    {
+      if (str == NULL)
+	return svn_error_create(SVN_ERR_RA_SVN_MALFORMED_DATA, NULL,
+                                "gssapi failure missing text");
+      *msg = str->data;
+      return SVN_NO_ERROR;
+    }
+  if (strcmp(status, "token") == 0) 
+    {
+      gssbuf->value = (char *) str->data;
+      gssbuf->length = str->len;
+      *msg = NULL;
+      return SVN_NO_ERROR;
+    }
+  return svn_error_create(SVN_ERR_RA_SVN_MALFORMED_DATA, NULL,
+			  "expected gssapi token or failure");
+}
+
+/* Writes a token() containing a gss_buffer */
+static svn_error_t *write_token(svn_ra_svn_conn_t *conn, apr_pool_t *pool, 
+		                gss_buffer_t gssbuf)
+{
+  svn_string_t str;
+  str.data = gssbuf->value;
+  str.len = gssbuf->length;
+  return svn_ra_svn_write_tuple(conn, pool, "w(s)", "token", &str);
+}
+
+/* Convert a GSS name to a displayable name */
+static const char *display_name(apr_pool_t *pool, const gss_name_t name)
+{
+  OM_uint32 major, minor;
+  gss_buffer_desc buffer;
+  char *str;
+
+  if (name == NULL)
+    return "[null]";
+  major = gss_display_name(&minor, name, &buffer, NULL);
+  if (GSS_ERROR(major)) 
+    return "[error]";
+  return apr_pstrndup(pool, buffer.value, buffer.length);
+}
+
+/* Server GSSAPI authentication. On success, sets *success to TRUE,
+ * fills in *user and sets a connection filter. */
+svn_error_t *svn_ra_svn_gssapi_server(svn_ra_svn_conn_t *conn, apr_pool_t *pool,
+				      const char *realm, const char *mecharg,
+				      const char **user, svn_boolean_t *success)
+{
+  OM_uint32 major, minor, flags;
+  gss_buffer_desc input_token, output_token, name_buf, svc_buf;
+  gss_name_t user_name, context_name, svc_name;
+  gss_ctx_id_t context;
+  gss_cred_id_t cred;
+  svn_error_t *error;
+  char *p;
+  int name_equal;
+  const char *msg;
+
+  *success = FALSE;
+
+  fprintf(stderr, "gssapi_server realm=%s mecharg=%s\n",
+	  realm ? realm : "(null)", mecharg ? mecharg : "(null)");
+
+  cred = GSS_C_NO_CREDENTIAL;
+  svc_name = GSS_C_NO_NAME;
+
+  /* Obtain credentials for this service */
+  svc_buf.value = SERVICE_NAME;
+  svc_buf.length = strlen(SERVICE_NAME);
+  major = gss_import_name(&minor, &svc_name, GSS_C_NT_HOSTBASED_SERVICE, 
+			  &svc_buf);
+  if (GSS_ERROR(major))
+    fprintf(stderr, "%s\n", 
+	    display_error(pool, "gss_import_name", major, minor));
+  else
+    {
+      major = gss_acquire_cred(&minor, svc_name, GSS_C_INDEFINITE,
+			       GSS_C_NO_OID_SET, GSS_C_ACCEPT, &cred,
+			       NULL, NULL);
+      if (GSS_ERROR(major))
+	fprintf(stderr, "%s\n", 
+		display_error(pool, "gss_acquire_cred", major, minor));
+      gss_release_name(&minor, &svc_name);
+    }
+
+  /* Exchange tokens to construct an authentication context */
+  context = GSS_C_NO_CONTEXT;
+  do
+    {
+      SVN_ERR(read_token(conn, pool, &input_token, &msg));
+
+      /* Check for initiator failure */
+      if (msg != NULL)
+        {
+	  fprintf(stderr, "GSSAPI client error: %s\n", msg);
+	  if (context != GSS_C_NO_CONTEXT)
+	    gss_delete_sec_context(&minor, &context, GSS_C_NO_BUFFER);
+	  return SVN_NO_ERROR;
+        }
+
+      major = gss_accept_sec_context(&minor, &context, cred,
+				     &input_token, GSS_C_NO_CHANNEL_BINDINGS,
+				     &context_name, NULL, &output_token, 
+				     &flags, NULL, NULL);
+      if (GSS_ERROR(major))
+	{
+	  gss_fail(conn, pool, "gss_accept_sec_context", major, minor);
+	  if (context != GSS_C_NO_CONTEXT)
+	    gss_delete_sec_context(&minor, &context, GSS_C_NO_BUFFER);
+	  if (cred != GSS_C_NO_CREDENTIAL)
+	    gss_release_cred(&minor, &cred);
+	  return SVN_NO_ERROR;
+	}
+      if (output_token.length != 0) 
+        {
+	  SVN_ERR(write_token(conn, pool, &output_token));
+	  gss_release_buffer(&minor, &output_token);
+	}
+    } while (major & GSS_S_CONTINUE_NEEDED);
+
+  /* Do not authenticate if the context failed */
+  if (major != GSS_S_COMPLETE)
+    {
+      gss_fail(conn, pool, "gss_accept_sec_context", major, minor);
+      if (cred != GSS_C_NO_CREDENTIAL)
+	gss_release_cred(&minor, &cred);
+      return SVN_NO_ERROR;
+    }
+
+  if (cred != GSS_C_NO_CREDENTIAL)
+    gss_release_cred(&minor, &cred);
+
+  /* Reject anonymous authentication (prefer svn ANONYMOUS mech) */
+  if (flags & GSS_C_ANON_FLAG) 
+    {
+      gss_release_name(&minor, &context_name);
+      gss_delete_sec_context(&minor, &context, GSS_C_NO_BUFFER);
+      fail(conn, pool, "anonymous gssapi not allowed");
+      return SVN_NO_ERROR;
+    }
+
+  if (mecharg == NULL || *mecharg == '\0')
+    {
+      /* If the client doesn't provide a username, derive one from context */
+      *user = display_name(pool, context_name);
+    }
+  else
+    {
+      /* Convert the client-provided username to a gss name to check it */
+      name_buf.value = (char *)mecharg;
+      name_buf.length = strlen(mecharg);
+      major = gss_import_name(&minor, &name_buf, GSS_C_NT_USER_NAME, 
+	  		      &user_name);
+      if (GSS_ERROR(major))
+	{
+	  gss_fail(conn, pool, "gss_import_name", major, minor);
+	  gss_release_name(&minor, &context_name);
+	  gss_delete_sec_context(&minor, &context, GSS_C_NO_BUFFER);
+	  return SVN_NO_ERROR;
+	}
+
+      /* Compare the provided username with the authenticated name */
+      major = gss_compare_name(&minor, user_name, context_name, &name_equal);
+      if (GSS_ERROR(major))
+	{
+	  gss_fail(conn, pool, "gss_compare_name", major, minor);
+	  gss_release_name(&minor, &context_name);
+	  gss_release_name(&minor, &user_name);
+	  gss_delete_sec_context(&minor, &context, GSS_C_NO_BUFFER);
+	  return SVN_NO_ERROR;
+	}
+
+      /* (Debugging) */
+      fprintf(stderr, "GSSAPI: context_name=%s user_name=%s name_equal=%s\n",
+	      display_name(pool, context_name), display_name(pool, user_name),
+	      name_equal ? "true" : "false");
+
+      gss_release_name(&minor, &context_name);
+      gss_release_name(&minor, &user_name);
+
+      /* Reject authentication if it doesn't match the given username */
+      if (!name_equal)
+	{
+	  fail(conn, pool, "name mismatch");
+	  gss_delete_sec_context(&minor, &context, GSS_C_NO_BUFFER);
+	  return SVN_NO_ERROR;
+	}
+
+      /* Use the client-provided username which may be simpler */
+      *user = apr_pstrdup(pool, mecharg);
+    }
+
+  /* Authentication succeeded */
+  *success = TRUE;
+
+  /* Send success() to tell client to begin filtering */
+  SVN_ERR(svn_ra_svn_write_tuple(conn, pool, "w()", "success"));
+  SVN_ERR(set_gssapi_filter(conn, context));
+
+  return SVN_NO_ERROR;
+}
+
+/*
+ * Exchange GSSAPI tokens, authenticating as a user, or with default
+ * credentials if user is NULL. Sets msg to NULL on success, otherwise
+ * sets msg to point to an error message.
+ */
+svn_error_t *svn_ra_svn__gssapi_client(svn_ra_svn_conn_t *conn, 
+				       apr_pool_t *pool,
+				       const char *host, const char *user,
+				       const char **msg)
+{
+  OM_uint32 major, minor, minor2;
+  gss_buffer_desc input_token, output_token, exported_name, buf;
+  gss_name_t service_name, user_name;
+  gss_ctx_id_t context;
+  gss_cred_id_t cred;
+  svn_error_t *error;
+  const char *status, *str;
+
+  fprintf(stderr, "gssapi_client host=%s user=%s\n",
+	  host ? host : "(null)", user ? user : "(null)");
+
+  /* Convert the target hostname into a target service name */
+  str = apr_psprintf(pool, "%s@%s", SERVICE_NAME, host);
+  buf.value = (char *) str;
+  buf.length = strlen(str);
+  major = gss_import_name(&minor, &buf, GSS_C_NT_HOSTBASED_SERVICE, 
+	  		  &service_name);
+  if (GSS_ERROR(major))
+    {
+      *msg = display_error(pool, "gss_import_name", major, minor);
+      fail(conn, pool, *msg);
+      return SVN_NO_ERROR;
+    }
+
+  /* Debugging */
+  fprintf(stderr, "GSSAPI: service_name='%s'\n", 
+	  display_name(pool, service_name));
+
+  /* If a username is given, acquire credentials for it */
+  if (user != NULL)
+    {
+      major = gss_import_name(&minor, &buf, GSS_C_NT_USER_NAME, &user_name);
+      if (GSS_ERROR(major)) 
+        {
+	  *msg = display_error(pool, "gss_import_name", major, minor);
+	  fail(conn, pool, *msg);
+	  return SVN_NO_ERROR;
+	}
+      major = gss_acquire_cred(&minor, user_name, GSS_C_INDEFINITE,
+			       GSS_C_NO_OID_SET, GSS_C_INITIATE, &cred, 
+			       NULL, NULL);
+      if (GSS_ERROR(major)) 
+        {
+	  *msg = display_error(pool, "gss_acquire_cred", major, minor);
+	  fail(conn, pool, *msg);
+	  gss_release_name(&minor, &user_name);
+	  return SVN_NO_ERROR;
+	}
+      gss_release_name(&minor, &user_name);
+    }
+  else
+    cred = GSS_C_NO_CREDENTIAL;
+
+  /* Exchange tokens to establish authentication */
+  input_token.length = 0;
+  context = GSS_C_NO_CONTEXT;
+  do 
+    {
+      output_token.length = 0;
+      major = gss_init_sec_context(&minor, cred, &context,
+	         service_name, GSS_C_NO_OID, 
+		 GSS_C_MUTUAL_FLAG | GSS_C_CONF_FLAG | GSS_C_INTEG_FLAG,
+		 0, GSS_C_NO_CHANNEL_BINDINGS, 
+		 &input_token, NULL, &output_token, NULL, NULL);
+      if (output_token.length != 0)
+	{
+	  SVN_ERR(write_token(conn, pool, &output_token));
+	  gss_release_buffer(&minor2, &output_token);
+	}
+      if (GSS_ERROR(major))
+	{
+	  *msg = display_error(pool, "gss_init_sec_context", major, minor);
+	  fail(conn, pool, *msg);
+	  if (context != GSS_C_NO_CONTEXT)
+	    gss_delete_sec_context(&minor, &context, GSS_C_NO_BUFFER);
+	  if (cred != GSS_C_NO_CREDENTIAL)
+	    gss_release_cred(&minor, &cred);
+	  return SVN_NO_ERROR;
+	}
+      if (major & GSS_S_CONTINUE_NEEDED)
+	{
+	  SVN_ERR(read_token(conn, pool, &input_token, msg));
+	  if (*msg)
+	    {
+	      if (context != GSS_C_NO_CONTEXT)
+		gss_delete_sec_context(&minor, &context, GSS_C_NO_BUFFER);
+	      if (cred != GSS_C_NO_CREDENTIAL)
+		gss_release_cred(&minor, &cred);
+	      return SVN_NO_ERROR;
+	    }
+	}
+    } while (major & GSS_S_CONTINUE_NEEDED);
+
+  if (cred != GSS_C_NO_CREDENTIAL)
+    gss_release_cred(&minor, &cred);
+
+  /* Expect a final success message before starting wrap/unwrap. */
+  SVN_ERR(svn_ra_svn_read_tuple(conn, pool, "w(?c)", &status, &str));
+  if (strcmp(status, "failure") == 0 && str != NULL)
+    {
+      /* Server failure */
+      if (context != GSS_C_NO_CONTEXT)
+	gss_delete_sec_context(&minor, &context, GSS_C_NO_BUFFER);
+      *msg = str;
+      return SVN_NO_ERROR;
+    }
+  else if (strcmp(status, "success") == 0 && str == NULL)
+    {
+      /* Successfully authenticated; set up filter */
+      SVN_ERR(set_gssapi_filter(conn, context));
+      *msg = NULL;
+      return SVN_NO_ERROR;
+    }
+  else
+    {
+      if (context != GSS_C_NO_CONTEXT)
+	gss_delete_sec_context(&minor, &context, GSS_C_NO_BUFFER);
+      return svn_error_create(SVN_ERR_RA_SVN_MALFORMED_DATA, NULL,
+                              "Unexpected server response");
+    }
+}
+
+/*------------------------------------------------------------
+ * GSS filter
+ */
+
+struct gssapi_filter {
+    struct svn_ra_conn_filter_st filter;
+    gss_ctx_id_t context;
+};
+
+/* Sets the connection filter to use gssapi */
+static svn_error_t *set_gssapi_filter(svn_ra_svn_conn_t *conn, gss_ctx_id_t context)
+{
+  struct gssapi_filter *filter;
+  filter = apr_palloc(conn->pool, sizeof (struct gssapi_filter));
+  filter->context = context;
+  filter->filter.wrap = svn_gssapi_wrap;
+  filter->filter.unwrap = svn_gssapi_unwrap;
+  return svn_ra_svn__conn_set_filter(conn, conn->pool, 
+	  			     (struct svn_ra_conn_filter_st *) filter);
+}
+
+/* Wraps some inner data and allocates storage for outer from pool */
+static svn_error_t *svn_gssapi_wrap(svn_ra_svn_conn_t *conn,
+       			            struct svn_ra_conn_filter_st *filter, apr_pool_t *pool,
+				    const char *inner, apr_size_t innerlen,
+				    char **outer, apr_size_t *outerlen)
+{
+  struct gssapi_filter *f = (struct gssapi_filter *) filter;
+  OM_uint32 major, minor;
+  gss_buffer_desc inner_buf, outer_buf;
+
+  inner_buf.value = (char *) inner;
+  inner_buf.length = innerlen;
+  major = gss_wrap(&minor, f->context, 1, GSS_C_QOP_DEFAULT, &inner_buf, NULL, 
+	  	   &outer_buf);
+  if (GSS_ERROR(major))
+    return gss_fail(conn, pool, "gss_wrap", major, minor);
+  *outer = apr_pmemdup(pool, outer_buf.value, outer_buf.length);
+  *outerlen = outer_buf.length;
+  gss_release_buffer(&minor, &outer_buf);
+  return SVN_NO_ERROR;
+}
+
+/* Unwraps the source data, storing into dst (or preallocated size *dstszlen) */
+static svn_error_t *svn_gssapi_unwrap(svn_ra_svn_conn_t *conn,
+       				      struct svn_ra_conn_filter_st *filter,
+				      apr_pool_t *pool, const char *src, apr_size_t srclen,
+				      char *dst, apr_size_t *dstszlen)
+{
+  struct gssapi_filter *f = (struct gssapi_filter *) filter;
+  OM_uint32 major, minor;
+  gss_buffer_desc inner_buf, outer_buf;
+  int conf_state;
+
+  outer_buf.value = (char *) src;
+  outer_buf.length = srclen;
+  major = gss_unwrap(&minor, f->context, &outer_buf, &inner_buf, &conf_state, NULL);
+  if (GSS_ERROR(major))
+    return gss_fail(conn, pool, "gss_unwrap", major, minor);
+  if (conf_state == 0) /* Must have confidentiality protection */
+    {
+      gss_release_buffer(&minor, &inner_buf);
+      return svn_error_create(SVN_ERR_RA_SVN_MALFORMED_DATA, NULL,
+                              "GSS confidentiality missing");
+    }
+  if (inner_buf.length > *dstszlen)
+    {
+      gss_release_buffer(&minor, &inner_buf);
+      return svn_error_create(SVN_ERR_RA_SVN_MALFORMED_DATA, NULL,
+                              "GSS frame too big");
+    }
+  memcpy(dst, inner_buf.value, inner_buf.length);
+  *dstszlen = inner_buf.length;
+  gss_release_buffer(&minor, &inner_buf);
+  return SVN_NO_ERROR;
+}
+
+#endif /* HAVE_GSSAPI */
diff -urN subversion-1.0.9.orig/subversion/libsvn_ra_svn/marshal.c subversion-1.0.9.dev/subversion/libsvn_ra_svn/marshal.c
--- subversion-1.0.9.orig/subversion/libsvn_ra_svn/marshal.c	2005-03-24 23:39:58.000000000 +1000
+++ subversion-1.0.9.dev/subversion/libsvn_ra_svn/marshal.c	2005-03-26 16:56:58.000000000 +1000
@@ -22,6 +22,7 @@
 #include <stdlib.h>
 
 #define APR_WANT_STRFUNC
+#define APR_WANT_BYTEFUNC
 #include <apr_want.h>
 #include <apr_general.h>
 #include <apr_lib.h>
@@ -59,6 +60,7 @@
   conn->block_baton = NULL;
   conn->capabilities = apr_hash_make(pool);
   conn->pool = pool;
+  conn->filter = NULL;
   return conn;
 }
 
@@ -180,7 +182,22 @@
 
   /* Clear conn->write_pos first in case the block handler does a read. */
   conn->write_pos = 0;
-  SVN_ERR(writebuf_output(conn, pool, conn->write_buf, write_pos));
+
+  if (conn->filter) 
+    {
+      struct { apr_uint32_t size; } header;
+      char *wrapped_data;
+      apr_size_t wrapped_len;
+
+      /* Wrap data and precede with a frame header */
+      SVN_ERR((*conn->filter->wrap)(conn, conn->filter, pool,
+	conn->write_buf, write_pos, &wrapped_data, &wrapped_len));
+      header.size = htonl(wrapped_len);
+      SVN_ERR(writebuf_output(conn, pool, (char *)&header, sizeof header));
+      SVN_ERR(writebuf_output(conn, pool, wrapped_data, wrapped_len));
+    }
+  else
+    SVN_ERR(writebuf_output(conn, pool, conn->write_buf, write_pos));
   return SVN_NO_ERROR;
 }
 
@@ -253,6 +270,59 @@
   return SVN_NO_ERROR;
 }
 
+static svn_error_t *readbuf_filtered(svn_ra_svn_conn_t *conn, apr_pool_t *pool,
+				     char *buffer, apr_size_t *buffer_len)
+{
+  if (conn->filter)
+    {
+      struct { apr_uint32_t size; } header;
+      char *data;
+      apr_size_t remain, count, dlen;
+      apr_pool_t *subpool = NULL;
+      char smallbuf[2 * sizeof conn->read_buf];
+
+      /* Read the frame header */
+      data = (char *)&header;
+      for (dlen = 0, remain = sizeof header - dlen; remain > 0; )
+        {
+          count = remain;
+          SVN_ERR(readbuf_input(conn, data + dlen, &count));
+	  dlen += count;
+	  remain -= count;
+	}
+
+      /* Create a subpool for large frames, or use stack for small ones */
+      /* XXX should use svn_stringbuf to stop huge mem allocs */
+      remain = ntohl(header.size);
+      if (remain <= sizeof smallbuf)
+	data = smallbuf;
+      else
+	{
+	  subpool = svn_pool_create(pool);
+	  data = apr_palloc(subpool, remain);
+	}
+
+      /* Read the frame body */
+      for (dlen = 0; remain > 0; )
+	{
+	  count = remain;
+	  SVN_ERR(readbuf_input(conn, data + dlen, &count));
+	  dlen += count;
+	  remain -= count;
+	}
+
+      /* Unwrap the frame */
+      assert(*buffer_len >= sizeof conn->write_buf);
+      SVN_ERR((*conn->filter->unwrap)(conn, conn->filter, pool, data, dlen,
+	  buffer, buffer_len));
+      if (subpool)
+	apr_pool_destroy(subpool);
+    }
+  else
+    SVN_ERR(readbuf_input(conn, buffer, buffer_len));
+  return SVN_NO_ERROR;
+}
+
 /* Read data from the socket into the read buffer, which must be empty. */
 static svn_error_t *readbuf_fill(svn_ra_svn_conn_t *conn, apr_pool_t *pool)
 {
@@ -261,7 +331,7 @@
   assert(conn->read_ptr == conn->read_end);
   writebuf_flush(conn, pool);
   len = sizeof(conn->read_buf);
-  SVN_ERR(readbuf_input(conn, conn->read_buf, &len));
+  SVN_ERR(readbuf_filtered(conn, pool, conn->read_buf, &len));
   conn->read_ptr = conn->read_buf;
   conn->read_end = conn->read_buf + len;
   return SVN_NO_ERROR;
@@ -300,7 +370,7 @@
     {
       writebuf_flush(conn, pool);
       count = end - data;
-      SVN_ERR(readbuf_input(conn, data, &count));
+      SVN_ERR(readbuf_filtered(conn, pool, data, &count));
       data += count;
     }
 
@@ -323,6 +393,7 @@
   svn_boolean_t lparen = FALSE;
 
   assert(conn->read_ptr == conn->read_end);
+  assert(!conn->filter);
   while (1)
     {
       /* Read some data directly from the connection input source. */
@@ -879,3 +950,19 @@
   SVN_ERR(svn_ra_svn_end_list(conn, pool));
   return SVN_NO_ERROR;
 }
+
+/*
+ * Sets a filter on the connection. Once set, the filter cannot
+ * be removed. Read buffer must be empty.
+ */
+svn_error_t *svn_ra_svn__conn_set_filter(svn_ra_svn_conn_t *conn,
+				    apr_pool_t *pool,
+				    struct svn_ra_conn_filter_st *filter)
+{
+  assert(!conn->filter);
+  assert(conn->read_ptr == conn->read_end);	/*XXX must drain */
+
+  SVN_ERR(writebuf_flush(conn, pool));
+  conn->filter = filter;
+  return SVN_NO_ERROR;
+}
diff -urN subversion-1.0.9.orig/subversion/libsvn_ra_svn/ra_svn.h subversion-1.0.9.dev/subversion/libsvn_ra_svn/ra_svn.h
--- subversion-1.0.9.orig/subversion/libsvn_ra_svn/ra_svn.h	2005-03-24 23:39:58.000000000 +1000
+++ subversion-1.0.9.dev/subversion/libsvn_ra_svn/ra_svn.h	2005-03-26 11:59:44.000000000 +1000
@@ -35,6 +35,19 @@
                                                apr_pool_t *pool,
                                                void *baton);
 
+/* A connection filter that sends and receives expects *framed* tokens */
+struct svn_ra_conn_filter_st {
+  svn_error_t *(*wrap)(svn_ra_svn_conn_t *conn, 
+	  struct svn_ra_conn_filter_st *filter,
+	  apr_pool_t *pool,
+	  const char *inner, apr_size_t innerlen, 
+	  char **outer, apr_size_t *outerlen);
+  svn_error_t *(*unwrap)(svn_ra_svn_conn_t *conn,
+	  struct svn_ra_conn_filter_st *filter,
+	  apr_pool_t *pool,
+	  const char *src, apr_size_t srclen, 
+	  char *dst, apr_size_t *dstszlen);
+};
 
 /* This structure is opaque to the server.  The client pokes at the
  * first few fields during setup and cleanup. */
@@ -54,6 +67,7 @@
   void *block_baton;
   apr_hash_t *capabilities;
   apr_pool_t *pool;
+  struct svn_ra_conn_filter_st *filter;
 };
 
 /* Set a callback for blocked writes on conn.  This handler may
@@ -87,6 +101,18 @@
                                      const char *user, const char *password,
                                      const char **message);
 
+#if HAVE_GSSAPI
+/* GSSAPI client authentication implementation. */
+svn_error_t *svn_ra_svn__gssapi_client(svn_ra_svn_conn_t *conn,
+       				       apr_pool_t *pool, const char *username,
+				       const char *hostname, const char **message);
+#endif
+
+/* Adds a framing filter to the connection (for encryption) */
+svn_error_t *svn_ra_svn__conn_set_filter(svn_ra_svn_conn_t *conn, 
+					 apr_pool_t *pool, 
+					 struct svn_ra_conn_filter_st *filter);
+
 #ifdef __cplusplus
 }
 #endif /* __cplusplus */
diff -urN subversion-1.0.9.orig/subversion/svnserve/serve.c subversion-1.0.9.dev/subversion/svnserve/serve.c
--- subversion-1.0.9.orig/subversion/svnserve/serve.c	2005-03-24 23:39:58.000000000 +1000
+++ subversion-1.0.9.dev/subversion/svnserve/serve.c	2005-03-26 12:03:39.000000000 +1000
@@ -122,6 +122,10 @@
   if (b->tunnel && get_access(b, AUTHENTICATED) >= required)
     SVN_ERR(svn_ra_svn_write_word(conn, pool, "EXTERNAL"));
 #endif
+#if HAVE_GSSAPI
+  if (get_access(b, AUTHENTICATED) >= required)
+    SVN_ERR(svn_ra_svn_write_word(conn, pool, "GSSAPI"));
+#endif
   if (b->pwdb && get_access(b, AUTHENTICATED) >= required)
     SVN_ERR(svn_ra_svn_write_word(conn, pool, "CRAM-MD5"));
   return SVN_NO_ERROR;
@@ -170,6 +174,13 @@
       return SVN_NO_ERROR;
     }
 
+#if HAVE_GSSAPI
+  if (get_access(b, AUTHENTICATED) >= required
+      && strcmp(mech, "GSSAPI") == 0)
+    return svn_ra_svn_gssapi_server(conn, pool, b->realm, mecharg, 
+	   			    &b->user, success);
+#endif
+
   if (get_access(b, AUTHENTICATED) >= required
       && b->pwdb && strcmp(mech, "CRAM-MD5") == 0)
     return svn_ra_svn_cram_server(conn, pool, b->pwdb, &b->user, success);
diff -urN subversion-1.0.9.orig/tags subversion-1.0.9.dev/tags
--- subversion-1.0.9.orig/tags	1970-01-01 10:00:00.000000000 +1000
+++ subversion-1.0.9.dev/tags	2005-03-26 11:54:36.000000000 +1000
@@ -0,0 +1,6523 @@
+!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
+!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
+!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
+!_TAG_PROGRAM_NAME	Exuberant Ctags	//
+!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
+!_TAG_PROGRAM_VERSION	5.5.2	//
+ACCEPT	./subversion/libsvn_subr/date.c	/^  ACCEPT    \/* Accept the value *\/$/;"	e	enum:rule_action	file:
+ACCUM	./subversion/libsvn_subr/date.c	/^  ACCUM,    \/* Accumulate a decimal value *\/$/;"	e	enum:rule_action	file:
+ACQUIRE_PYTHON_LOCK	./subversion/bindings/swig/swigutil_py.c	55;"	d	file:
+ACTIVITY_DB	./subversion/mod_dav_svn/activity.c	33;"	d	file:
+ADLER_MOD_BASE	./subversion/libsvn_diff/util.c	43;"	d	file:
+ADLER_MOD_BLOCK_SIZE	./subversion/libsvn_diff/util.c	49;"	d	file:
+AFX_BLAMECALLBACK_H__3BBF3F0F_C80C_45C9_8AC3_E1AF07E5B810__INCLUDED_	./subversion/bindings/java/javahl/native/BlameCallback.h	23;"	d
+AFX_DLLDATAX_H__281C69AC_6B7B_4FA8_9B5A_84546EFB391A__INCLUDED_	./subversion/bindings/com/dlldatax.h	18;"	d
+AFX_JNIBYTEARRAY_H__FB74054F_CD5E_41D5_A4B0_25DE9A8574CF__INCLUDED_	./subversion/bindings/java/javahl/native/JNIByteArray.h	23;"	d
+AFX_JNICRITICALSECTION_H__601F33CC_3378_4B09_9917_6242857EF2B7__INCLUDED_	./subversion/bindings/java/javahl/native/JNICriticalSection.h	23;"	d
+AFX_JNIMUTEX_H__958B52A6_00A3_458F_981F_0A3095D39EE8__INCLUDED_	./subversion/bindings/java/javahl/native/JNIMutex.h	24;"	d
+AFX_JNISTACKELEMENT_H__81945F80_D56F_4782_B8E7_6A82483E6463__INCLUDED_	./subversion/bindings/java/javahl/native/JNIStackElement.h	23;"	d
+AFX_JNISTRINGHOLDER_H__66F98D96_0371_471D_9E5C_EE5D45954C75__INCLUDED_	./subversion/bindings/java/javahl/native/JNIStringHolder.h	23;"	d
+AFX_JNITHREADDATA_H__2BF37407_7EA8_4F74_9080_C86696617F7F__INCLUDED_	./subversion/bindings/java/javahl/native/JNIThreadData.h	23;"	d
+AFX_JNIUTIL_H__82301908_C6CB_4A77_8A28_899E72FBEEFF__INCLUDED_	./subversion/bindings/java/javahl/native/JNIUtil.h	23;"	d
+AFX_NOTIFY_H__10E278E8_EA8C_4BD1_AF10_4DB1C0608F65__INCLUDED_	./subversion/bindings/java/javahl/native/Notify.h	23;"	d
+AFX_PATH_H__A143CB2A_1115_4770_8CD5_AA33CCD285FA__INCLUDED_	./subversion/bindings/java/javahl/native/Path.h	23;"	d
+AFX_POOL_H__4755FB06_B88C_451D_A0EE_91F5A547C30B__INCLUDED_	./subversion/bindings/java/javahl/native/Pool.h	23;"	d
+AFX_PROMPTER_H__6833BB77_DDCC_4BF8_A995_5A5CBC48DF4C__INCLUDED_	./subversion/bindings/java/javahl/native/Prompter.h	23;"	d
+AFX_REVISION_H__BEAA0788_C9D9_4A67_B94E_761ABC68ACFE__INCLUDED_	./subversion/bindings/java/javahl/native/Revision.h	23;"	d
+AFX_STDAFX_H__C6D9D561_DBA4_4B5F_B745_EEE2067A9253__INCLUDED_	./subversion/bindings/com/StdAfx.h	22;"	d
+AFX_SVNCLIENT_H__B5A135CD_3D7C_4ABC_8D75_643B14507979__INCLUDED_	./subversion/bindings/java/javahl/native/SVNClient.h	23;"	d
+AFX_TARGETS_H__61202731_41A4_43FF_97C4_7E26DC255BF1__INCLUDED_	./subversion/bindings/java/javahl/native/Targets.h	23;"	d
+APR_ARRAY_IDX	./subversion/include/svn_types.h	70;"	d
+APR_ARRAY_PUSH	./subversion/include/svn_types.h	73;"	d
+APR_WANT_BYTEFUNC	./subversion/libsvn_ra_svn/marshal.c	25;"	d	file:
+APR_WANT_MEMFUNC	./subversion/libsvn_subr/config.c	22;"	d	file:
+APR_WANT_STDIO	./subversion/clients/cmdline/add-cmd.c	24;"	d	file:
+APR_WANT_STDIO	./subversion/clients/cmdline/notify.c	27;"	d	file:
+APR_WANT_STDIO	./subversion/clients/cmdline/resolved-cmd.c	24;"	d	file:
+APR_WANT_STDIO	./subversion/include/svn_cmdline.h	29;"	d
+APR_WANT_STDIO	./subversion/include/svn_error.h	33;"	d
+APR_WANT_STDIO	./subversion/libsvn_ra_dav/commit.c	26;"	d	file:
+APR_WANT_STDIO	./subversion/libsvn_ra_svn/cram.c	22;"	d	file:
+APR_WANT_STDIO	./subversion/libsvn_ra_svn/gssapi.c	9;"	d	file:
+APR_WANT_STDIO	./subversion/libsvn_subr/config_impl.h	24;"	d
+APR_WANT_STDIO	./subversion/svnlook/main.c	28;"	d	file:
+APR_WANT_STDIO	./subversion/tests/libsvn_delta/delta-window-test.h	21;"	d
+APR_WANT_STDIO	./subversion/tests/libsvn_delta/random-test.c	22;"	d	file:
+APR_WANT_STDIO	./subversion/tests/libsvn_delta/vdelta-test.c	18;"	d	file:
+APR_WANT_STDIO	./subversion/tests/libsvn_subr/target-test.c	19;"	d	file:
+APR_WANT_STRFUNC	./subversion/clients/cmdline/log-cmd.c	25;"	d	file:
+APR_WANT_STRFUNC	./subversion/clients/cmdline/notify.c	28;"	d	file:
+APR_WANT_STRFUNC	./subversion/libsvn_client/log.c	25;"	d	file:
+APR_WANT_STRFUNC	./subversion/libsvn_client/prop_commands.c	27;"	d	file:
+APR_WANT_STRFUNC	./subversion/libsvn_fs/key-gen.c	21;"	d	file:
+APR_WANT_STRFUNC	./subversion/libsvn_ra_dav/commit.c	27;"	d	file:
+APR_WANT_STRFUNC	./subversion/libsvn_ra_dav/fetch.c	21;"	d	file:
+APR_WANT_STRFUNC	./subversion/libsvn_ra_dav/log.c	21;"	d	file:
+APR_WANT_STRFUNC	./subversion/libsvn_ra_dav/merge.c	23;"	d	file:
+APR_WANT_STRFUNC	./subversion/libsvn_ra_dav/props.c	24;"	d	file:
+APR_WANT_STRFUNC	./subversion/libsvn_ra_dav/session.c	24;"	d	file:
+APR_WANT_STRFUNC	./subversion/libsvn_ra_dav/util.c	21;"	d	file:
+APR_WANT_STRFUNC	./subversion/libsvn_ra_local/ra_plugin.c	27;"	d	file:
+APR_WANT_STRFUNC	./subversion/libsvn_ra_svn/client.c	23;"	d	file:
+APR_WANT_STRFUNC	./subversion/libsvn_ra_svn/cram.c	21;"	d	file:
+APR_WANT_STRFUNC	./subversion/libsvn_ra_svn/editor.c	21;"	d	file:
+APR_WANT_STRFUNC	./subversion/libsvn_ra_svn/editorp.c	21;"	d	file:
+APR_WANT_STRFUNC	./subversion/libsvn_ra_svn/gssapi.c	8;"	d	file:
+APR_WANT_STRFUNC	./subversion/libsvn_ra_svn/marshal.c	24;"	d	file:
+APR_WANT_STRFUNC	./subversion/libsvn_repos/log.c	19;"	d	file:
+APR_WANT_STRFUNC	./subversion/libsvn_repos/node_tree.c	27;"	d	file:
+APR_WANT_STRFUNC	./subversion/libsvn_subr/config.c	21;"	d	file:
+APR_WANT_STRFUNC	./subversion/libsvn_subr/validate.c	26;"	d	file:
+APR_WANT_STRFUNC	./subversion/mod_dav_svn/repos.c	27;"	d	file:
+APR_WANT_STRFUNC	./subversion/svnlook/main.c	29;"	d	file:
+APR_WANT_STRFUNC	./subversion/svnserve/main.c	21;"	d	file:
+APR_WANT_STRFUNC	./subversion/svnserve/serve.c	21;"	d	file:
+APR_WANT_STRFUNC	./subversion/tests/libsvn_delta/delta-window-test.h	22;"	d
+APR_WANT_STRFUNC	./subversion/tests/libsvn_delta/random-test.c	23;"	d	file:
+APU_WANT_DB	./subversion/libsvn_fs/bdb/bdb-err.c	24;"	d	file:
+APU_WANT_DB	./subversion/libsvn_fs/bdb/bdb_compat.h	21;"	d
+APU_WANT_DB	./subversion/libsvn_fs/bdb/changes-table.h	21;"	d
+APU_WANT_DB	./subversion/libsvn_fs/bdb/dbt.c	22;"	d	file:
+APU_WANT_DB	./subversion/libsvn_fs/bdb/dbt.h	23;"	d
+APU_WANT_DB	./subversion/libsvn_fs/bdb/nodes-table.h	21;"	d
+APU_WANT_DB	./subversion/libsvn_fs/bdb/reps-table.h	21;"	d
+APU_WANT_DB	./subversion/libsvn_fs/bdb/rev-table.h	21;"	d
+APU_WANT_DB	./subversion/libsvn_fs/bdb/strings-table.h	21;"	d
+APU_WANT_DB	./subversion/libsvn_fs/bdb/uuids-table.h	21;"	d
+APU_WANT_DB	./subversion/libsvn_fs/fs.c	23;"	d	file:
+APU_WANT_DB	./subversion/libsvn_fs/fs.h	21;"	d
+APU_WANT_DB	./subversion/libsvn_fs/node-rev.c	20;"	d	file:
+APU_WANT_DB	./subversion/libsvn_fs/node-rev.h	21;"	d
+APU_WANT_DB	./subversion/libsvn_fs/reps-strings.c	21;"	d	file:
+APU_WANT_DB	./subversion/libsvn_fs/reps-strings.h	21;"	d
+APU_WANT_DB	./subversion/libsvn_fs/revs-txns.h	21;"	d
+APU_WANT_DB	./subversion/libsvn_fs/trail.c	18;"	d	file:
+APU_WANT_DB	./subversion/libsvn_fs/trail.h	21;"	d
+APU_WANT_DB	./subversion/libsvn_fs/util/fs_skels.h	22;"	d
+ARE_VALID_COPY_ARGS	./subversion/libsvn_repos/dump.c	30;"	d	file:
+AUTHENTICATED	./subversion/svnserve/serve.c	/^enum authn_type { UNAUTHENTICATED, AUTHENTICATED };$/;"	e	enum:authn_type	file:
+AUTHZ_SVN_NONE	./subversion/mod_authz_svn/mod_authz_svn.c	/^    AUTHZ_SVN_NONE = 0,$/;"	e	file:
+AUTHZ_SVN_READ	./subversion/mod_authz_svn/mod_authz_svn.c	/^    AUTHZ_SVN_READ = 1,$/;"	e	file:
+AUTHZ_SVN_RECURSIVE	./subversion/mod_authz_svn/mod_authz_svn.c	/^    AUTHZ_SVN_RECURSIVE = 4$/;"	e	file:
+AUTHZ_SVN_WRITE	./subversion/mod_authz_svn/mod_authz_svn.c	/^    AUTHZ_SVN_WRITE = 2,$/;"	e	file:
+Add	./subversion/bindings/com/MarshalArray.h	/^CComDynamicMarshalledUnkArray<piid>::Add(IUnknown* pUnk)$/;"	f	class:iid
+Assert	./subversion/bindings/com/StdAfx.h	42;"	d
+BASE64_LINELEN	./subversion/libsvn_subr/svn_base64.c	33;"	d	file:
+BDB_ERR	./subversion/libsvn_fs/bdb/bdb-err.h	85;"	d
+BDB_WRAP	./subversion/libsvn_fs/bdb/bdb-err.h	69;"	d
+BUFSIZE	./packages/win32-innosetup/tools/svnpath/main.c	55;"	d	file:
+BlameCallback	./subversion/bindings/java/javahl/native/BlameCallback.h	/^class BlameCallback  $/;"	c
+CALL_METHOD	./subversion/bindings/swig/swigutil_pl.h	/^    CALL_METHOD,$/;"	e	enum:perl_func_invoker
+CALL_SV	./subversion/bindings/swig/swigutil_pl.h	/^    CALL_SV$/;"	e	enum:perl_func_invoker
+CATLEN	./subversion/libsvn_subr/config.c	232;"	d	file:
+CATLEN	./subversion/libsvn_subr/config.c	237;"	d	file:
+CATLEN	./subversion/libsvn_subr/config.c	239;"	d	file:
+CATLEN	./subversion/libsvn_subr/config.c	244;"	d	file:
+CComDynamicMarshalledUnkArray	./subversion/bindings/com/MarshalArray.h	/^        CComDynamicMarshalledUnkArray()$/;"	f	class:CComDynamicMarshalledUnkArray
+CComDynamicMarshalledUnkArray	./subversion/bindings/com/MarshalArray.h	/^class CComDynamicMarshalledUnkArray$/;"	c
+CHKERR	./subversion/libsvn_ra_dav/fetch.c	55;"	d	file:
+CHUNK_SHIFT	./subversion/libsvn_diff/diff_file.c	91;"	d	file:
+CHUNK_SIZE	./subversion/libsvn_diff/diff_file.c	92;"	d	file:
+CMD_LINE_ERROR	./contrib/client-side/svn-push/svn-push.c	158;"	d	file:
+COMPARE_CHUNK_SIZE	./subversion/libsvn_diff/diff_file.c	337;"	d	file:
+CONNECTION_DEFAULT	./subversion/svnserve/main.c	63;"	d	file:
+CONNECTION_DEFAULT	./subversion/svnserve/main.c	68;"	d	file:
+CONNECTION_DEFAULT	./subversion/svnserve/main.c	73;"	d	file:
+CONNECTION_DEFAULT	./subversion/svnserve/main.c	77;"	d	file:
+CONNECTION_HAVE_THREAD_OPTION	./subversion/svnserve/main.c	64;"	d	file:
+CProxy_ISVNEvents	./subversion/bindings/com/svn_comCP.h	/^class CProxy_ISVNEvents : public IConnectionPointImpl<T, &DIID__ISVNEvents, CComDynamicMarshalledUnkArray<&DIID__ISVNEvents> >$/;"	c
+CSVNStatus	./subversion/bindings/com/SVNStatus.h	/^        CSVNStatus()$/;"	f	class:CSVNStatus
+CSVNStatus	./subversion/bindings/com/SVNStatus.h	/^class ATL_NO_VTABLE CSVNStatus : $/;"	c
+CSVNWorkingCopy	./subversion/bindings/com/SVN.h	/^        CSVNWorkingCopy()$/;"	f	class:CSVNWorkingCopy
+CSVNWorkingCopy	./subversion/bindings/com/SVN.h	/^class ATL_NO_VTABLE CSVNWorkingCopy : $/;"	c
+DAV_SVN_BUILD_URI_ACT_COLLECTION	./subversion/mod_dav_svn/dav_svn.h	/^  DAV_SVN_BUILD_URI_ACT_COLLECTION, \/* the collection of activities *\/$/;"	e	enum:dav_svn_build_what
+DAV_SVN_BUILD_URI_BASELINE	./subversion/mod_dav_svn/dav_svn.h	/^  DAV_SVN_BUILD_URI_BASELINE,   \/* a Baseline *\/$/;"	e	enum:dav_svn_build_what
+DAV_SVN_BUILD_URI_BC	./subversion/mod_dav_svn/dav_svn.h	/^  DAV_SVN_BUILD_URI_BC,         \/* a Baseline Collection *\/$/;"	e	enum:dav_svn_build_what
+DAV_SVN_BUILD_URI_PUBLIC	./subversion/mod_dav_svn/dav_svn.h	/^  DAV_SVN_BUILD_URI_PUBLIC,     \/* the "public" VCR *\/$/;"	e	enum:dav_svn_build_what
+DAV_SVN_BUILD_URI_VCC	./subversion/mod_dav_svn/dav_svn.h	/^  DAV_SVN_BUILD_URI_VCC         \/* a Version Controlled Configuration *\/$/;"	e	enum:dav_svn_build_what
+DAV_SVN_BUILD_URI_VERSION	./subversion/mod_dav_svn/dav_svn.h	/^  DAV_SVN_BUILD_URI_VERSION,    \/* a Version Resource *\/$/;"	e	enum:dav_svn_build_what
+DAV_SVN_DEFAULT_VCC_NAME	./subversion/mod_dav_svn/dav_svn.h	39;"	d
+DAV_SVN_H	./subversion/mod_dav_svn/dav_svn.h	21;"	d
+DAV_SVN_NAMESPACE_URI	./subversion/mod_dav_svn/liveprops.c	/^    DAV_SVN_NAMESPACE_URI       \/* the dav<->ra_dav namespace URI *\/$/;"	e	file:
+DAV_SVN_NAMESPACE_URI_DAV	./subversion/mod_dav_svn/liveprops.c	/^    DAV_SVN_NAMESPACE_URI_DAV,  \/* the DAV: namespace URI *\/$/;"	e	file:
+DAV_SVN_RESTYPE_ACT_COLLECTION	./subversion/mod_dav_svn/dav_svn.h	/^  DAV_SVN_RESTYPE_ACT_COLLECTION,       \/* ...\/!svn\/act\/ *\/$/;"	e	enum:dav_svn_private_restype
+DAV_SVN_RESTYPE_BC_COLLECTION	./subversion/mod_dav_svn/dav_svn.h	/^  DAV_SVN_RESTYPE_BC_COLLECTION,        \/* ...\/!svn\/bc\/  *\/$/;"	e	enum:dav_svn_private_restype
+DAV_SVN_RESTYPE_BLN_COLLECTION	./subversion/mod_dav_svn/dav_svn.h	/^  DAV_SVN_RESTYPE_BLN_COLLECTION,       \/* ...\/!svn\/bln\/ *\/$/;"	e	enum:dav_svn_private_restype
+DAV_SVN_RESTYPE_HIS_COLLECTION	./subversion/mod_dav_svn/dav_svn.h	/^  DAV_SVN_RESTYPE_HIS_COLLECTION,       \/* ...\/!svn\/his\/ *\/$/;"	e	enum:dav_svn_private_restype
+DAV_SVN_RESTYPE_ROOT_COLLECTION	./subversion/mod_dav_svn/dav_svn.h	/^  DAV_SVN_RESTYPE_ROOT_COLLECTION,      \/* ...\/!svn\/     *\/$/;"	e	enum:dav_svn_private_restype
+DAV_SVN_RESTYPE_UNSET	./subversion/mod_dav_svn/dav_svn.h	/^  DAV_SVN_RESTYPE_UNSET,$/;"	e	enum:dav_svn_private_restype
+DAV_SVN_RESTYPE_VCC	./subversion/mod_dav_svn/dav_svn.h	/^  DAV_SVN_RESTYPE_VCC                   \/* ...\/!svn\/vcc\/NAME *\/$/;"	e	enum:dav_svn_private_restype
+DAV_SVN_RESTYPE_VCC_COLLECTION	./subversion/mod_dav_svn/dav_svn.h	/^  DAV_SVN_RESTYPE_VCC_COLLECTION,       \/* ...\/!svn\/vcc\/ *\/$/;"	e	enum:dav_svn_private_restype
+DAV_SVN_RESTYPE_VER_COLLECTION	./subversion/mod_dav_svn/dav_svn.h	/^  DAV_SVN_RESTYPE_VER_COLLECTION,       \/* ...\/!svn\/ver\/ *\/$/;"	e	enum:dav_svn_private_restype
+DAV_SVN_RESTYPE_WBL_COLLECTION	./subversion/mod_dav_svn/dav_svn.h	/^  DAV_SVN_RESTYPE_WBL_COLLECTION,       \/* ...\/!svn\/wbl\/ *\/$/;"	e	enum:dav_svn_private_restype
+DAV_SVN_RESTYPE_WRK_COLLECTION	./subversion/mod_dav_svn/dav_svn.h	/^  DAV_SVN_RESTYPE_WRK_COLLECTION,       \/* ...\/!svn\/wrk\/ *\/$/;"	e	enum:dav_svn_private_restype
+DEBUG_CR	./subversion/libsvn_ra_dav/ra_dav.h	146;"	d
+DEBUG_CR	./subversion/libsvn_ra_dav/ra_dav.h	148;"	d
+DEFAULT_ARRAY_SIZE	./subversion/libsvn_subr/opt.c	380;"	d	file:
+DEFAULT_DUMP_FILES	./subversion/tests/libsvn_delta/random-test.c	40;"	d	file:
+DEFAULT_ITERATIONS	./subversion/tests/libsvn_delta/random-test.c	38;"	d	file:
+DEFAULT_MAXLEN	./subversion/tests/libsvn_delta/random-test.c	39;"	d	file:
+DEFAULT_PRINT_WINDOWS	./subversion/tests/libsvn_delta/random-test.c	41;"	d	file:
+DIFF_H	./subversion/libsvn_diff/diff.h	20;"	d
+DIGITS	./subversion/libsvn_subr/date.c	56;"	d	file:
+DIR_OR_FILE	./subversion/mod_dav_svn/update.c	102;"	d	file:
+DllCanUnloadNow	./subversion/bindings/com/dlldatax.c	34;"	d	file:
+DllGetClassObject	./subversion/bindings/com/dlldatax.c	33;"	d	file:
+DllMain	./subversion/bindings/com/dlldatax.c	30;"	d	file:
+DllRegisterServer	./subversion/bindings/com/dlldatax.c	31;"	d	file:
+DllUnregisterServer	./subversion/bindings/com/dlldatax.c	32;"	d	file:
+EDITOR_EOF_PREFIX	./subversion/clients/cmdline/util.c	402;"	d	file:
+ELEM_207_UNUSED	./subversion/libsvn_ra_dav/ra_dav.h	/^  ELEM_207_UNUSED = ELEM_UNUSED + 100,$/;"	e
+ELEM_207_first	./subversion/libsvn_ra_dav/ra_dav.h	/^  ELEM_207_first = ELEM_UNUSED,$/;"	e
+ELEM_PROPS_UNUSED	./subversion/libsvn_ra_dav/ra_dav.h	/^  ELEM_PROPS_UNUSED = ELEM_207_UNUSED + 100,$/;"	e
+ELEM_SVN_prop	./subversion/libsvn_ra_dav/ra_dav.h	/^  ELEM_SVN_prop, \/* `prop' tag in the Subversion namespace *\/$/;"	e
+ELEM_UNUSED	./subversion/libsvn_ra_dav/ra_dav.h	/^  ELEM_UNUSED = 100,$/;"	e
+ELEM_absent_directory	./subversion/libsvn_ra_dav/ra_dav.h	/^  ELEM_absent_directory,$/;"	e
+ELEM_absent_file	./subversion/libsvn_ra_dav/ra_dav.h	/^  ELEM_absent_file,$/;"	e
+ELEM_activity_coll_set	./subversion/libsvn_ra_dav/ra_dav.h	/^  ELEM_activity_coll_set = ELEM_207_UNUSED,$/;"	e
+ELEM_add_directory	./subversion/libsvn_ra_dav/ra_dav.h	/^  ELEM_add_directory,$/;"	e
+ELEM_add_file	./subversion/libsvn_ra_dav/ra_dav.h	/^  ELEM_add_file,$/;"	e
+ELEM_added_path	./subversion/libsvn_ra_dav/ra_dav.h	/^  ELEM_added_path,    \/* used in log reports *\/$/;"	e
+ELEM_baseline	./subversion/libsvn_ra_dav/ra_dav.h	/^  ELEM_baseline,$/;"	e
+ELEM_baseline_coll	./subversion/libsvn_ra_dav/ra_dav.h	/^  ELEM_baseline_coll,$/;"	e
+ELEM_baseline_relpath	./subversion/libsvn_ra_dav/ra_dav.h	/^  ELEM_baseline_relpath, $/;"	e
+ELEM_checked_in	./subversion/libsvn_ra_dav/ra_dav.h	/^  ELEM_checked_in,$/;"	e
+ELEM_collection	./subversion/libsvn_ra_dav/ra_dav.h	/^  ELEM_collection,$/;"	e
+ELEM_comment	./subversion/libsvn_ra_dav/ra_dav.h	/^  ELEM_comment,$/;"	e
+ELEM_creationdate	./subversion/libsvn_ra_dav/ra_dav.h	/^  ELEM_creationdate,$/;"	e
+ELEM_creator_displayname	./subversion/libsvn_ra_dav/ra_dav.h	/^  ELEM_creator_displayname,$/;"	e
+ELEM_dated_rev_report	./subversion/libsvn_ra_dav/ra_dav.h	/^  ELEM_dated_rev_report,$/;"	e
+ELEM_delete_entry	./subversion/libsvn_ra_dav/ra_dav.h	/^  ELEM_delete_entry,$/;"	e
+ELEM_deleted_path	./subversion/libsvn_ra_dav/ra_dav.h	/^  ELEM_deleted_path,  \/* used in log reports *\/$/;"	e
+ELEM_error	./subversion/libsvn_ra_dav/ra_dav.h	/^  ELEM_error,$/;"	e
+ELEM_fetch_file	./subversion/libsvn_ra_dav/ra_dav.h	/^  ELEM_fetch_file,$/;"	e
+ELEM_fetch_props	./subversion/libsvn_ra_dav/ra_dav.h	/^  ELEM_fetch_props,$/;"	e
+ELEM_get_content_length	./subversion/libsvn_ra_dav/ra_dav.h	/^  ELEM_get_content_length,$/;"	e
+ELEM_href	./subversion/libsvn_ra_dav/ra_dav.h	/^  ELEM_href = ELEM_207_first + 3,$/;"	e
+ELEM_human_readable	./subversion/libsvn_ra_dav/ra_dav.h	/^  ELEM_human_readable,$/;"	e
+ELEM_ignored_set	./subversion/libsvn_ra_dav/ra_dav.h	/^  ELEM_ignored_set,$/;"	e
+ELEM_log_date	./subversion/libsvn_ra_dav/ra_dav.h	/^  ELEM_log_date,$/;"	e
+ELEM_log_item	./subversion/libsvn_ra_dav/ra_dav.h	/^  ELEM_log_item,$/;"	e
+ELEM_log_report	./subversion/libsvn_ra_dav/ra_dav.h	/^  ELEM_log_report,$/;"	e
+ELEM_md5_checksum	./subversion/libsvn_ra_dav/ra_dav.h	/^  ELEM_md5_checksum,$/;"	e
+ELEM_merge_response	./subversion/libsvn_ra_dav/ra_dav.h	/^  ELEM_merge_response,$/;"	e
+ELEM_merged_set	./subversion/libsvn_ra_dav/ra_dav.h	/^  ELEM_merged_set,$/;"	e
+ELEM_modified_path	./subversion/libsvn_ra_dav/ra_dav.h	/^  ELEM_modified_path,  \/* used in log reports *\/$/;"	e
+ELEM_multistatus	./subversion/libsvn_ra_dav/ra_dav.h	/^  ELEM_multistatus = ELEM_207_first,$/;"	e
+ELEM_name_creationdate	./subversion/libsvn_ra_dav/ra_dav.h	/^  ELEM_name_creationdate,$/;"	e
+ELEM_name_creator_displayname	./subversion/libsvn_ra_dav/ra_dav.h	/^  ELEM_name_creator_displayname,$/;"	e
+ELEM_name_version_name	./subversion/libsvn_ra_dav/ra_dav.h	/^  ELEM_name_version_name,$/;"	e
+ELEM_open_directory	./subversion/libsvn_ra_dav/ra_dav.h	/^  ELEM_open_directory,$/;"	e
+ELEM_open_file	./subversion/libsvn_ra_dav/ra_dav.h	/^  ELEM_open_file,$/;"	e
+ELEM_options_response	./subversion/libsvn_ra_dav/ra_dav.h	/^  ELEM_options_response,$/;"	e
+ELEM_prop	./subversion/libsvn_ra_dav/ra_dav.h	/^  ELEM_prop = ELEM_207_first + 5, \/* `prop' tag in the DAV namespace *\/$/;"	e
+ELEM_propstat	./subversion/libsvn_ra_dav/ra_dav.h	/^  ELEM_propstat = ELEM_207_first + 4,$/;"	e
+ELEM_remove_prop	./subversion/libsvn_ra_dav/ra_dav.h	/^  ELEM_remove_prop,$/;"	e
+ELEM_replaced_path	./subversion/libsvn_ra_dav/ra_dav.h	/^  ELEM_replaced_path,  \/* used in log reports *\/$/;"	e
+ELEM_repository_uuid	./subversion/libsvn_ra_dav/ra_dav.h	/^  ELEM_repository_uuid$/;"	e
+ELEM_resource	./subversion/libsvn_ra_dav/ra_dav.h	/^  ELEM_resource,$/;"	e
+ELEM_resource_walk	./subversion/libsvn_ra_dav/ra_dav.h	/^  ELEM_resource_walk,$/;"	e
+ELEM_resourcetype	./subversion/libsvn_ra_dav/ra_dav.h	/^  ELEM_resourcetype,$/;"	e
+ELEM_response	./subversion/libsvn_ra_dav/ra_dav.h	/^  ELEM_response = ELEM_207_first + 1,$/;"	e
+ELEM_responsedescription	./subversion/libsvn_ra_dav/ra_dav.h	/^  ELEM_responsedescription = ELEM_207_first + 2,$/;"	e
+ELEM_root	./subversion/libsvn_ra_dav/ra_dav.h	/^  ELEM_root = NE_XML_STATEROOT, \/* (0) *\/$/;"	e
+ELEM_set_prop	./subversion/libsvn_ra_dav/ra_dav.h	/^  ELEM_set_prop,$/;"	e
+ELEM_status	./subversion/libsvn_ra_dav/ra_dav.h	/^  ELEM_status = ELEM_207_first + 6,$/;"	e
+ELEM_svn_error	./subversion/libsvn_ra_dav/ra_dav.h	/^  ELEM_svn_error,$/;"	e
+ELEM_target_revision	./subversion/libsvn_ra_dav/ra_dav.h	/^  ELEM_target_revision,$/;"	e
+ELEM_txdelta	./subversion/libsvn_ra_dav/ra_dav.h	/^  ELEM_txdelta,$/;"	e
+ELEM_unknown	./subversion/libsvn_ra_dav/ra_dav.h	/^  ELEM_unknown = 1, \/* was (-1), see above why it's (1) now *\/$/;"	e
+ELEM_update_report	./subversion/libsvn_ra_dav/ra_dav.h	/^  ELEM_update_report,$/;"	e
+ELEM_updated_set	./subversion/libsvn_ra_dav/ra_dav.h	/^  ELEM_updated_set,$/;"	e
+ELEM_vcc	./subversion/libsvn_ra_dav/ra_dav.h	/^  ELEM_vcc,$/;"	e
+ELEM_version_name	./subversion/libsvn_ra_dav/ra_dav.h	/^  ELEM_version_name,$/;"	e
+ENCODE_AS_LITERAL	./subversion/libsvn_subr/quoprint.c	57;"	d	file:
+FALSE	./subversion/include/svn_types.h	141;"	d
+FMT_END	./subversion/libsvn_subr/config.c	443;"	d	file:
+FMT_END_LEN	./subversion/libsvn_subr/config.c	444;"	d	file:
+FMT_START	./subversion/libsvn_subr/config.c	439;"	d	file:
+FMT_START_LEN	./subversion/libsvn_subr/config.c	440;"	d	file:
+FSM_808F	./subversion/libsvn_subr/utf_validate.c	91;"	d	file:
+FSM_809F	./subversion/libsvn_subr/utf_validate.c	88;"	d	file:
+FSM_80BF	./subversion/libsvn_subr/utf_validate.c	85;"	d	file:
+FSM_80BF80BF	./subversion/libsvn_subr/utf_validate.c	87;"	d	file:
+FSM_80BF80BF80BF	./subversion/libsvn_subr/utf_validate.c	90;"	d	file:
+FSM_90BF	./subversion/libsvn_subr/utf_validate.c	89;"	d	file:
+FSM_A0BF	./subversion/libsvn_subr/utf_validate.c	86;"	d	file:
+FSM_ERROR	./subversion/libsvn_subr/utf_validate.c	92;"	d	file:
+FSM_START	./subversion/libsvn_subr/utf_validate.c	84;"	d	file:
+FinalConstruct	./subversion/bindings/com/SVN.h	/^        HRESULT FinalConstruct()$/;"	f	class:CSVNWorkingCopy
+FinalConstruct	./subversion/bindings/com/SVNStatus.h	/^        FinalConstruct()$/;"	f	class:CSVNStatus
+FinalRelease	./subversion/bindings/com/SVN.h	/^        void FinalRelease()$/;"	f	class:CSVNWorkingCopy
+FinalRelease	./subversion/bindings/com/SVNStatus.h	/^        FinalRelease()$/;"	f	class:CSVNStatus
+Fire_RefreshFiles	./subversion/bindings/com/svn_comCP.h	/^        HRESULT Fire_RefreshFiles(BSTR bstrDir)$/;"	f	class:CProxy_ISVNEvents
+GENERATED_SIZE	./subversion/tests/libsvn_subr/stream-test.c	154;"	d	file:
+GENEREATED_SIZE	./subversion/tests/libsvn_subr/stream-test.c	229;"	d	file:
+GetAt	./subversion/bindings/com/MarshalArray.h	/^        GetAt(int nIndex)$/;"	f	class:CComDynamicMarshalledUnkArray
+GetCookie	./subversion/bindings/com/MarshalArray.h	/^        GetCookie(IUnknown** pp)$/;"	f	class:CComDynamicMarshalledUnkArray
+GetSize	./subversion/bindings/com/MarshalArray.h	/^        GetSize() const$/;"	f	class:CComDynamicMarshalledUnkArray
+GetUnknown	./subversion/bindings/com/MarshalArray.h	/^        GetUnknown(DWORD dwCookie)$/;"	f	class:CComDynamicMarshalledUnkArray
+HEAD	./subversion/bindings/java/javahl/native/Revision.h	/^    static const svn_opt_revision_kind HEAD;$/;"	m	class:Revision
+IDR_SVN	./subversion/bindings/com/resource.h	6;"	d
+IDR_SVNSTATUS	./subversion/bindings/com/resource.h	7;"	d
+IDS_PROJNAME	./subversion/bindings/com/resource.h	5;"	d
+INHERIT_VALUE	./subversion/mod_dav_svn/mod_dav_svn.c	55;"	d	file:
+JAVA_PACKAGE	./subversion/bindings/java/javahl/native/JNIUtil.h	40;"	d
+JCALL0	./subversion/bindings/swig/swigutil_java.c	38;"	d	file:
+JCALL0	./subversion/bindings/swig/swigutil_java.c	45;"	d	file:
+JCALL1	./subversion/bindings/swig/swigutil_java.c	39;"	d	file:
+JCALL1	./subversion/bindings/swig/swigutil_java.c	46;"	d	file:
+JCALL2	./subversion/bindings/swig/swigutil_java.c	40;"	d	file:
+JCALL2	./subversion/bindings/swig/swigutil_java.c	47;"	d	file:
+JCALL3	./subversion/bindings/swig/swigutil_java.c	41;"	d	file:
+JCALL3	./subversion/bindings/swig/swigutil_java.c	48;"	d	file:
+JCALL4	./subversion/bindings/swig/swigutil_java.c	42;"	d	file:
+JCALL4	./subversion/bindings/swig/swigutil_java.c	49;"	d	file:
+JCALL7	./subversion/bindings/swig/swigutil_java.c	43;"	d	file:
+JCALL7	./subversion/bindings/swig/swigutil_java.c	50;"	d	file:
+JNIByteArray	./subversion/bindings/java/javahl/native/JNIByteArray.h	/^class JNIByteArray$/;"	c
+JNICriticalSection	./subversion/bindings/java/javahl/native/JNICriticalSection.h	/^class JNICriticalSection  $/;"	c
+JNIEntry	./subversion/bindings/java/javahl/native/JNIStackElement.h	31;"	d
+JNIEntryStatic	./subversion/bindings/java/javahl/native/JNIStackElement.h	32;"	d
+JNIMutex	./subversion/bindings/java/javahl/native/JNIMutex.h	/^class JNIMutex$/;"	c
+JNIStackElement	./subversion/bindings/java/javahl/native/JNIStackElement.h	/^class JNIStackElement  $/;"	c
+JNIStringHolder	./subversion/bindings/java/javahl/native/JNIStringHolder.h	/^class JNIStringHolder  $/;"	c
+JNIThreadData	./subversion/bindings/java/javahl/native/JNIThreadData.h	/^class JNIThreadData  $/;"	c
+JNIUtil	./subversion/bindings/java/javahl/native/JNIUtil.h	/^class JNIUtil  $/;"	c
+JNI_OnLoad	./subversion/bindings/java/javahl/native/libsvnjavahl.la.c	/^JNI_OnLoad(JavaVM *vm, void *reserved)$/;"	f
+JNI_OnLoad	./subversion/bindings/swig/swigutil_java.c	/^JNIEXPORT jint JNICALL JNI_OnLoad(JavaVM *jvm, void *reserved)$/;"	f
+JNI_OnUnload	./subversion/bindings/swig/swigutil_java.c	/^JNIEXPORT void JNICALL JNI_OnUnload(JavaVM *jvm, void *reserved)$/;"	f
+JNI_VERSION	./subversion/bindings/java/javahl/native/version.h	28;"	d
+JNI_VER_MAJOR	./subversion/bindings/java/javahl/native/version.h	18;"	d
+JNI_VER_MICRO	./subversion/bindings/java/javahl/native/version.h	20;"	d
+JNI_VER_MINOR	./subversion/bindings/java/javahl/native/version.h	19;"	d
+JNI_VER_NUM	./subversion/bindings/java/javahl/native/version.h	22;"	d
+JNI_VER_NUMBER	./subversion/bindings/java/javahl/native/version.h	25;"	d
+LENGTH_BITS	./subversion/libsvn_delta/svndiff.c	28;"	d	file:
+LogLevel	./subversion/bindings/java/javahl/native/JNIUtil.h	/^	enum { noLog, errorLog, exceptionLog, entryLog } LogLevel;$/;"	m	class:JNIUtil
+MAKE_BUFFER	./subversion/libsvn_ra_dav/ra_dav.h	649;"	d
+MAXSEQ	./subversion/tests/libsvn_delta/random-test.c	43;"	d	file:
+MAX_SAVED_LENGTHS	./subversion/libsvn_subr/path.c	183;"	d	file:
+MICRO	./subversion/libsvn_subr/date.c	/^  MICRO,    \/* Accumulate microseconds *\/$/;"	e	enum:rule_action	file:
+MIN	./subversion/libsvn_delta/compose_delta.c	671;"	d	file:
+MIN	./subversion/libsvn_delta/compose_delta.c	700;"	d	file:
+MMAP_T_ARG	./subversion/libsvn_diff/diff_file.c	132;"	d	file:
+MMAP_T_ARG	./subversion/libsvn_diff/diff_file.c	135;"	d	file:
+MMAP_T_PARAM	./subversion/libsvn_diff/diff_file.c	131;"	d	file:
+MMAP_T_PARAM	./subversion/libsvn_diff/diff_file.c	134;"	d	file:
+MOD_DAV_SVN_H	./subversion/include/mod_dav_svn.h	21;"	d
+NOOP	./subversion/libsvn_subr/date.c	/^  NOOP,     \/* Do nothing *\/$/;"	e	enum:rule_action	file:
+NORMAL_BITS	./subversion/libsvn_delta/svndiff.c	27;"	d	file:
+NOT_FIXED_YET	./subversion/tests/libsvn_ra_local/ra-local-test.c	321;"	d	file:
+NOT_FIXED_YET	./subversion/tests/libsvn_ra_local/ra-local-test.c	50;"	d	file:
+NO_ACCESS	./subversion/svnserve/serve.c	/^enum access_type { NO_ACCESS, READ_ACCESS, WRITE_ACCESS };$/;"	e	enum:access_type	file:
+NSLEN	./subversion/libsvn_ra_dav/fetch.c	325;"	d	file:
+NSLEN	./subversion/libsvn_ra_dav/fetch.c	334;"	d	file:
+NSLEN	./subversion/libsvn_ra_dav/fetch.c	336;"	d	file:
+NSLEN	./subversion/libsvn_ra_dav/fetch.c	346;"	d	file:
+NSLEN	./subversion/libsvn_ra_dav/fetch.c	686;"	d	file:
+NSLEN	./subversion/libsvn_ra_dav/fetch.c	692;"	d	file:
+NSLEN	./subversion/libsvn_ra_dav/fetch.c	697;"	d	file:
+NSLEN	./subversion/libsvn_ra_dav/fetch.c	706;"	d	file:
+NSLEN	./subversion/libsvn_ra_dav/props.c	957;"	d	file:
+NSLEN	./subversion/libsvn_ra_dav/props.c	962;"	d	file:
+NSLEN	./subversion/mod_dav_svn/update.c	786;"	d	file:
+NSLEN	./subversion/mod_dav_svn/update.c	807;"	d	file:
+NUM_TEST_PATHS	./subversion/tests/libsvn_subr/path-test.c	35;"	d	file:
+NUM_TEST_PATHS	./subversion/tests/libsvn_subr/path-test.c	86;"	d	file:
+NUM_TEST_STRINGS	./subversion/tests/libsvn_subr/stream-test.c	114;"	d	file:
+NUM_TEST_STRINGS	./subversion/tests/libsvn_subr/stream-test.c	152;"	d	file:
+NUM_TEST_STRINGS	./subversion/tests/libsvn_subr/stream-test.c	227;"	d	file:
+NUM_TEST_STRINGS	./subversion/tests/libsvn_subr/stream-test.c	34;"	d	file:
+Notify	./subversion/bindings/java/javahl/native/Notify.h	/^class Notify  $/;"	c
+POP_SUBDIR	./subversion/libsvn_ra_dav/fetch.c	100;"	d	file:
+PREFIX_LEN	./subversion/mod_dav_svn/deadprops.c	458;"	d	file:
+PREFIX_LEN	./subversion/mod_dav_svn/deadprops.c	460;"	d	file:
+PUSH_BATON	./subversion/libsvn_ra_dav/fetch.c	145;"	d	file:
+PUSH_SUBDIR	./subversion/libsvn_ra_dav/fetch.c	101;"	d	file:
+Path	./subversion/bindings/java/javahl/native/Path.h	/^class Path  $/;"	c
+Pool	./subversion/bindings/java/javahl/native/Pool.h	/^class Pool  $/;"	c
+Prompter	./subversion/bindings/java/javahl/native/Prompter.h	/^class Prompter  $/;"	c
+PrxDllCanUnloadNow	./subversion/bindings/com/dlldatax.c	/^STDAPI PrxDllCanUnloadNow(void){return S_OK;}$/;"	f
+PrxDllGetClassObject	./subversion/bindings/com/dlldatax.c	/^STDAPI PrxDllGetClassObject(REFCLSID rclsid, REFIID riid, LPVOID* ppv)$/;"	f
+PrxDllMain	./subversion/bindings/com/dlldatax.c	/^BOOL WINAPI PrxDllMain(HINSTANCE hInstance, DWORD dwReason, LPVOID lpReserved)$/;"	f
+PrxDllRegisterServer	./subversion/bindings/com/dlldatax.c	/^STDAPI PrxDllRegisterServer(void){return S_OK;}$/;"	f
+PrxDllUnregisterServer	./subversion/bindings/com/dlldatax.c	/^STDAPI PrxDllUnregisterServer(void){return S_OK;}$/;"	f
+QUOPRINT_LINELEN	./subversion/libsvn_subr/quoprint.c	54;"	d	file:
+RA_SVN_H	./subversion/libsvn_ra_svn/ra_svn.h	22;"	d
+READ_ACCESS	./subversion/svnserve/serve.c	/^enum access_type { NO_ACCESS, READ_ACCESS, WRITE_ACCESS };$/;"	e	enum:access_type	file:
+REAL_PATH	./tools/examples/svnserve-sgid.c	19;"	d	file:
+REASONABLE_GUESS	./subversion/svndumpfilter/main.c	34;"	d	file:
+REGISTER_PROXY_DLL	./subversion/bindings/com/dlldatax.c	21;"	d	file:
+RTYPE_BASELINE	./subversion/libsvn_ra_dav/merge.c	/^  RTYPE_BASELINE    \/* a baseline resource *\/$/;"	e	enum:merge_rtype	file:
+RTYPE_COLLECTION	./subversion/libsvn_ra_dav/merge.c	/^  RTYPE_COLLECTION, \/* a collection resource *\/$/;"	e	enum:merge_rtype	file:
+RTYPE_REGULAR	./subversion/libsvn_ra_dav/merge.c	/^  RTYPE_REGULAR,    \/* a regular (member) resource *\/$/;"	e	enum:merge_rtype	file:
+RTYPE_UNKNOWN	./subversion/libsvn_ra_dav/merge.c	/^  RTYPE_UNKNOWN,    \/* unknown (haven't seen it in the response yet) *\/$/;"	e	enum:merge_rtype	file:
+Remove	./subversion/bindings/com/MarshalArray.h	/^CComDynamicMarshalledUnkArray<piid>::Remove(DWORD dwCookie)$/;"	f	class:iid
+Revision	./subversion/bindings/java/javahl/native/Revision.h	/^class Revision  $/;"	c
+SEEDS	./subversion/tests/libsvn_delta/random-test.c	42;"	d	file:
+SEP_STRING	./subversion/clients/cmdline/log-cmd.c	94;"	d	file:
+SERVER_H	./subversion/svnserve/server.h	22;"	d
+SET_STR	./subversion/tests/libsvn_fs/fs-test.c	46;"	d	file:
+SKIP	./subversion/libsvn_subr/date.c	/^  SKIP,     \/* Ignore this template character *\/$/;"	e	enum:rule_action	file:
+SKIPFROM	./subversion/libsvn_subr/date.c	/^  SKIPFROM, \/* If at end-of-value, accept the match.  Otherwise,$/;"	e	enum:rule_action	file:
+START	./subversion/bindings/java/javahl/native/Revision.h	/^    static const svn_opt_revision_kind START;$/;"	m	class:Revision
+STRICT	./subversion/bindings/com/StdAfx.h	28;"	d
+STRICT	./subversion/bindings/com/dlldatax.c	41;"	d	file:
+SVNClient	./subversion/bindings/java/javahl/native/SVNClient.h	/^class SVNClient$/;"	c
+SVNSERVE_OPT_FOREGROUND	./subversion/svnserve/main.c	93;"	d	file:
+SVNSERVE_OPT_LISTEN_HOST	./subversion/svnserve/main.c	92;"	d	file:
+SVNSERVE_OPT_LISTEN_PORT	./subversion/svnserve/main.c	91;"	d	file:
+SVN_ALLOCATOR_RECOMMENDED_MAX_FREE	./subversion/include/svn_pools.h	46;"	d
+SVN_AUTH_CRED_SIMPLE	./subversion/include/svn_auth.h	168;"	d
+SVN_AUTH_CRED_SSL_CLIENT_CERT	./subversion/include/svn_auth.h	218;"	d
+SVN_AUTH_CRED_SSL_CLIENT_CERT_PW	./subversion/include/svn_auth.h	247;"	d
+SVN_AUTH_CRED_SSL_SERVER_TRUST	./subversion/include/svn_auth.h	276;"	d
+SVN_AUTH_CRED_USERNAME	./subversion/include/svn_auth.h	192;"	d
+SVN_AUTH_H	./subversion/include/svn_auth.h	23;"	d
+SVN_AUTH_PARAM_CONFIG	./subversion/include/svn_auth.h	525;"	d
+SVN_AUTH_PARAM_CONFIG_DIR	./subversion/include/svn_auth.h	532;"	d
+SVN_AUTH_PARAM_DEFAULT_PASSWORD	./subversion/include/svn_auth.h	501;"	d
+SVN_AUTH_PARAM_DEFAULT_USERNAME	./subversion/include/svn_auth.h	500;"	d
+SVN_AUTH_PARAM_NON_INTERACTIVE	./subversion/include/svn_auth.h	506;"	d
+SVN_AUTH_PARAM_NO_AUTH_CACHE	./subversion/include/svn_auth.h	511;"	d
+SVN_AUTH_PARAM_PREFIX	./subversion/include/svn_auth.h	495;"	d
+SVN_AUTH_PARAM_SERVER_GROUP	./subversion/include/svn_auth.h	528;"	d
+SVN_AUTH_PARAM_SSL_SERVER_CERT_INFO	./subversion/include/svn_auth.h	521;"	d
+SVN_AUTH_PARAM_SSL_SERVER_FAILURES	./subversion/include/svn_auth.h	516;"	d
+SVN_AUTH_SSL_CNMISMATCH	./subversion/include/svn_auth.h	383;"	d
+SVN_AUTH_SSL_EXPIRED	./subversion/include/svn_auth.h	381;"	d
+SVN_AUTH_SSL_NOTYETVALID	./subversion/include/svn_auth.h	379;"	d
+SVN_AUTH_SSL_OTHER	./subversion/include/svn_auth.h	388;"	d
+SVN_AUTH_SSL_UNKNOWNCA	./subversion/include/svn_auth.h	385;"	d
+SVN_BASE64_H	./subversion/include/svn_base64.h	23;"	d
+SVN_BDB_AUTO_COMMIT	./subversion/libsvn_fs/bdb/bdb_compat.h	32;"	d
+SVN_BDB_AUTO_COMMIT	./subversion/libsvn_fs/bdb/bdb_compat.h	34;"	d
+SVN_BDB_ERR	./subversion/libsvn_fs/bdb/bdb-err.h	75;"	d
+SVN_BDB_HAS_DB_INCOMPLETE	./subversion/libsvn_fs/bdb/bdb_compat.h	39;"	d
+SVN_BDB_HAS_DB_INCOMPLETE	./subversion/libsvn_fs/bdb/bdb_compat.h	41;"	d
+SVN_BDB_OPEN_PARAMS	./subversion/libsvn_fs/bdb/bdb_compat.h	48;"	d
+SVN_BDB_OPEN_PARAMS	./subversion/libsvn_fs/bdb/bdb_compat.h	50;"	d
+SVN_CLIENT_AUTH_PASSWORD	./subversion/include/svn_client.h	387;"	d
+SVN_CLIENT_AUTH_USERNAME	./subversion/include/svn_client.h	386;"	d
+SVN_CLIENT_COMMIT_ITEM_ADD	./subversion/include/svn_client.h	254;"	d
+SVN_CLIENT_COMMIT_ITEM_DELETE	./subversion/include/svn_client.h	255;"	d
+SVN_CLIENT_COMMIT_ITEM_IS_COPY	./subversion/include/svn_client.h	258;"	d
+SVN_CLIENT_COMMIT_ITEM_PROP_MODS	./subversion/include/svn_client.h	257;"	d
+SVN_CLIENT_COMMIT_ITEM_TEXT_MODS	./subversion/include/svn_client.h	256;"	d
+SVN_CLIENT_ERRORS_H	./subversion/clients/cmdline/client_errors.h	24;"	d
+SVN_CLIENT_H	./subversion/include/svn_client.h	33;"	d
+SVN_CLIENT__AUTHFILE_ASCII_CERT_KEY	./subversion/libsvn_client/ssl_server_trust_providers.c	38;"	d	file:
+SVN_CLIENT__AUTHFILE_FAILURES_KEY	./subversion/libsvn_client/ssl_server_trust_providers.c	39;"	d	file:
+SVN_CLIENT__AUTHFILE_PASSWORD_KEY	./subversion/libsvn_client/simple_providers.c	39;"	d	file:
+SVN_CLIENT__AUTHFILE_USERNAME_KEY	./subversion/libsvn_client/simple_providers.c	38;"	d	file:
+SVN_CLIENT__AUTHFILE_USERNAME_KEY	./subversion/libsvn_client/username_providers.c	38;"	d	file:
+SVN_CLIENT__SINGLE_REPOS_NAME	./subversion/libsvn_client/client.h	362;"	d
+SVN_CL_H	./subversion/clients/cmdline/cl.h	24;"	d
+SVN_CL__AUTH_OPTIONS	./subversion/clients/cmdline/main.c	146;"	d	file:
+SVN_CMDLINE_ERROR_ENUM_DEFINED	./subversion/clients/cmdline/client_errors.h	55;"	d
+SVN_CMDLINE_H	./subversion/include/svn_cmdline.h	26;"	d
+SVN_CMD_ERR	./subversion/include/svn_ra_svn.h	52;"	d
+SVN_CONFIG_CATEGORY_CONFIG	./subversion/include/svn_config.h	69;"	d
+SVN_CONFIG_CATEGORY_SERVERS	./subversion/include/svn_config.h	53;"	d
+SVN_CONFIG_DEFAULT_GLOBAL_IGNORES	./subversion/include/svn_config.h	98;"	d
+SVN_CONFIG_FALSE	./subversion/include/svn_config.h	102;"	d
+SVN_CONFIG_H	./subversion/include/svn_config.h	25;"	d
+SVN_CONFIG_OPTION_ANON_ACCESS	./subversion/include/svn_config.h	88;"	d
+SVN_CONFIG_OPTION_AUTH_ACCESS	./subversion/include/svn_config.h	89;"	d
+SVN_CONFIG_OPTION_DIFF3_CMD	./subversion/include/svn_config.h	75;"	d
+SVN_CONFIG_OPTION_DIFF3_HAS_PROGRAM_ARG	./subversion/include/svn_config.h	76;"	d
+SVN_CONFIG_OPTION_DIFF_CMD	./subversion/include/svn_config.h	74;"	d
+SVN_CONFIG_OPTION_EDITOR_CMD	./subversion/include/svn_config.h	73;"	d
+SVN_CONFIG_OPTION_ENABLE_AUTO_PROPS	./subversion/include/svn_config.h	82;"	d
+SVN_CONFIG_OPTION_GLOBAL_IGNORES	./subversion/include/svn_config.h	78;"	d
+SVN_CONFIG_OPTION_HTTP_COMPRESSION	./subversion/include/svn_config.h	62;"	d
+SVN_CONFIG_OPTION_HTTP_PROXY_EXCEPTIONS	./subversion/include/svn_config.h	60;"	d
+SVN_CONFIG_OPTION_HTTP_PROXY_HOST	./subversion/include/svn_config.h	56;"	d
+SVN_CONFIG_OPTION_HTTP_PROXY_PASSWORD	./subversion/include/svn_config.h	59;"	d
+SVN_CONFIG_OPTION_HTTP_PROXY_PORT	./subversion/include/svn_config.h	57;"	d
+SVN_CONFIG_OPTION_HTTP_PROXY_USERNAME	./subversion/include/svn_config.h	58;"	d
+SVN_CONFIG_OPTION_HTTP_TIMEOUT	./subversion/include/svn_config.h	61;"	d
+SVN_CONFIG_OPTION_LOG_ENCODING	./subversion/include/svn_config.h	79;"	d
+SVN_CONFIG_OPTION_NEON_DEBUG_MASK	./subversion/include/svn_config.h	63;"	d
+SVN_CONFIG_OPTION_PASSWORD_DB	./subversion/include/svn_config.h	90;"	d
+SVN_CONFIG_OPTION_REALM	./subversion/include/svn_config.h	91;"	d
+SVN_CONFIG_OPTION_SSL_AUTHORITY_FILES	./subversion/include/svn_config.h	64;"	d
+SVN_CONFIG_OPTION_SSL_CLIENT_CERT_FILE	./subversion/include/svn_config.h	66;"	d
+SVN_CONFIG_OPTION_SSL_CLIENT_CERT_PASSWORD	./subversion/include/svn_config.h	67;"	d
+SVN_CONFIG_OPTION_SSL_TRUST_DEFAULT_CA	./subversion/include/svn_config.h	65;"	d
+SVN_CONFIG_OPTION_STORE_AUTH_CREDS	./subversion/include/svn_config.h	71;"	d
+SVN_CONFIG_OPTION_TEMPLATE_ROOT	./subversion/include/svn_config.h	81;"	d
+SVN_CONFIG_OPTION_USE_COMMIT_TIMES	./subversion/include/svn_config.h	80;"	d
+SVN_CONFIG_REALMSTRING_KEY	./subversion/include/svn_config.h	282;"	d
+SVN_CONFIG_SECTION_AUTH	./subversion/include/svn_config.h	70;"	d
+SVN_CONFIG_SECTION_AUTO_PROPS	./subversion/include/svn_config.h	84;"	d
+SVN_CONFIG_SECTION_GENERAL	./subversion/include/svn_config.h	87;"	d
+SVN_CONFIG_SECTION_GLOBAL	./subversion/include/svn_config.h	55;"	d
+SVN_CONFIG_SECTION_GROUPS	./subversion/include/svn_config.h	54;"	d
+SVN_CONFIG_SECTION_HELPERS	./subversion/include/svn_config.h	72;"	d
+SVN_CONFIG_SECTION_MISCELLANY	./subversion/include/svn_config.h	77;"	d
+SVN_CONFIG_SECTION_TUNNELS	./subversion/include/svn_config.h	83;"	d
+SVN_CONFIG_SECTION_USERS	./subversion/include/svn_config.h	94;"	d
+SVN_CONFIG_TRUE	./subversion/include/svn_config.h	101;"	d
+SVN_CONFIG__AUTH_SUBDIR	./subversion/libsvn_subr/config_impl.h	120;"	d
+SVN_CONFIG__DEFAULT_SECTION	./subversion/libsvn_subr/config_impl.h	71;"	d
+SVN_CONFIG__SUBDIRECTORY	./subversion/libsvn_subr/config_impl.h	110;"	d
+SVN_CONFIG__SYS_DIRECTORY	./subversion/libsvn_subr/config_impl.h	112;"	d
+SVN_CONFIG__USR_DIRECTORY	./subversion/libsvn_subr/config_impl.h	113;"	d
+SVN_CONFIG__USR_README_FILE	./subversion/libsvn_subr/config_impl.h	117;"	d
+SVN_DAV_BASE_FULLTEXT_MD5_HEADER	./subversion/include/svn_dav.h	76;"	d
+SVN_DAV_DELTA_BASE_HEADER	./subversion/include/svn_dav.h	45;"	d
+SVN_DAV_ERROR_NAMESPACE	./subversion/include/svn_dav.h	92;"	d
+SVN_DAV_ERROR_TAG	./subversion/include/svn_dav.h	95;"	d
+SVN_DAV_H	./subversion/include/svn_dav.h	26;"	d
+SVN_DAV_OPTIONS_HEADER	./subversion/include/svn_dav.h	50;"	d
+SVN_DAV_OPTION_NO_MERGE_RESPONSE	./subversion/include/svn_dav.h	80;"	d
+SVN_DAV_PROP_NS_CUSTOM	./subversion/include/svn_dav.h	117;"	d
+SVN_DAV_PROP_NS_DAV	./subversion/include/svn_dav.h	122;"	d
+SVN_DAV_PROP_NS_SVN	./subversion/include/svn_dav.h	110;"	d
+SVN_DAV_RESULT_FULLTEXT_MD5_HEADER	./subversion/include/svn_dav.h	77;"	d
+SVN_DAV_VERSION_NAME_HEADER	./subversion/include/svn_dav.h	57;"	d
+SVN_DEFAULT_SPECIAL_URI	./subversion/mod_dav_svn/mod_dav_svn.c	38;"	d	file:
+SVN_DELTA_H	./subversion/include/svn_delta.h	27;"	d
+SVN_DELTA_WINDOW_TEST_H	./subversion/tests/libsvn_delta/delta-window-test.h	19;"	d
+SVN_DIFF_H	./subversion/include/svn_diff.h	44;"	d
+SVN_DIFF__HASH_SIZE	./subversion/libsvn_diff/token.c	36;"	d	file:
+SVN_DIFF__UNIFIED_CONTEXT_SIZE	./subversion/libsvn_diff/diff_file.c	531;"	d	file:
+SVN_EMPTY_PATH	./subversion/libsvn_subr/path.c	36;"	d	file:
+SVN_EMPTY_PATH	./subversion/tests/libsvn_subr/path-test.c	27;"	d	file:
+SVN_ERR	./subversion/include/svn_error.h	183;"	d
+SVN_ERRDEF	./subversion/clients/cmdline/client_errors.h	44;"	d
+SVN_ERRDEF	./subversion/clients/cmdline/client_errors.h	52;"	d
+SVN_ERRDEF	./subversion/clients/cmdline/client_errors.h	80;"	d
+SVN_ERRDEF	./subversion/include/svn_error_codes.h	59;"	d
+SVN_ERRDEF	./subversion/include/svn_error_codes.h	67;"	d
+SVN_ERRDEF	./subversion/include/svn_error_codes.h	874;"	d
+SVN_ERROR_BUILD_ARRAY	./subversion/libsvn_subr/error.c	338;"	d	file:
+SVN_ERROR_END	./subversion/clients/cmdline/client_errors.h	45;"	d
+SVN_ERROR_END	./subversion/clients/cmdline/client_errors.h	53;"	d
+SVN_ERROR_END	./subversion/clients/cmdline/client_errors.h	81;"	d
+SVN_ERROR_END	./subversion/include/svn_error_codes.h	60;"	d
+SVN_ERROR_END	./subversion/include/svn_error_codes.h	68;"	d
+SVN_ERROR_END	./subversion/include/svn_error_codes.h	875;"	d
+SVN_ERROR_ENUM_DEFINED	./subversion/include/svn_error_codes.h	70;"	d
+SVN_ERROR_H	./subversion/include/svn_error.h	26;"	d
+SVN_ERROR_START	./subversion/clients/cmdline/client_errors.h	41;"	d
+SVN_ERROR_START	./subversion/clients/cmdline/client_errors.h	49;"	d
+SVN_ERROR_START	./subversion/clients/cmdline/client_errors.h	79;"	d
+SVN_ERROR_START	./subversion/include/svn_error_codes.h	56;"	d
+SVN_ERROR_START	./subversion/include/svn_error_codes.h	64;"	d
+SVN_ERROR_START	./subversion/include/svn_error_codes.h	873;"	d
+SVN_ERR_APMOD_CATEGORY_START	./subversion/include/svn_error_codes.h	127;"	d
+SVN_ERR_AUTHN_CATEGORY_START	./subversion/include/svn_error_codes.h	137;"	d
+SVN_ERR_AUTHZ_CATEGORY_START	./subversion/include/svn_error_codes.h	139;"	d
+SVN_ERR_BAD_CATEGORY_START	./subversion/include/svn_error_codes.h	101;"	d
+SVN_ERR_CATEGORY_SIZE	./subversion/include/svn_error_codes.h	97;"	d
+SVN_ERR_CLIENT_CATEGORY_START	./subversion/include/svn_error_codes.h	129;"	d
+SVN_ERR_CL_CATEGORY_START	./subversion/include/svn_error_codes.h	133;"	d
+SVN_ERR_ENTRY_CATEGORY_START	./subversion/include/svn_error_codes.h	111;"	d
+SVN_ERR_FS_CATEGORY_START	./subversion/include/svn_error_codes.h	115;"	d
+SVN_ERR_IO_CATEGORY_START	./subversion/include/svn_error_codes.h	105;"	d
+SVN_ERR_MISC_CATEGORY_START	./subversion/include/svn_error_codes.h	131;"	d
+SVN_ERR_NODE_CATEGORY_START	./subversion/include/svn_error_codes.h	109;"	d
+SVN_ERR_RA_CATEGORY_START	./subversion/include/svn_error_codes.h	119;"	d
+SVN_ERR_RA_DAV_CATEGORY_START	./subversion/include/svn_error_codes.h	121;"	d
+SVN_ERR_RA_LOCAL_CATEGORY_START	./subversion/include/svn_error_codes.h	123;"	d
+SVN_ERR_RA_SVN_CATEGORY_START	./subversion/include/svn_error_codes.h	135;"	d
+SVN_ERR_REPOS_CATEGORY_START	./subversion/include/svn_error_codes.h	117;"	d
+SVN_ERR_STREAM_CATEGORY_START	./subversion/include/svn_error_codes.h	107;"	d
+SVN_ERR_SVNDIFF_CATEGORY_START	./subversion/include/svn_error_codes.h	125;"	d
+SVN_ERR_W	./subversion/include/svn_error.h	196;"	d
+SVN_ERR_WC_CATEGORY_START	./subversion/include/svn_error_codes.h	113;"	d
+SVN_ERR_XML_CATEGORY_START	./subversion/include/svn_error_codes.h	103;"	d
+SVN_FILESIZE_T_FMT	./subversion/include/svn_types.h	123;"	d
+SVN_FILE_LINE_UNDEFINED	./subversion/libsvn_subr/error.c	/^static const char SVN_FILE_LINE_UNDEFINED[] = "svn:<undefined>";$/;"	v	file:
+SVN_FILE_LINE_UNDEFINED	./subversion/libsvn_subr/pool.c	/^static const char SVN_FILE_LINE_UNDEFINED[] = "svn:<undefined>";$/;"	v	file:
+SVN_FS_CONFIG_BDB_LOG_AUTOREMOVE	./subversion/include/svn_fs.h	49;"	d
+SVN_FS_CONFIG_BDB_TXN_NOSYNC	./subversion/include/svn_fs.h	48;"	d
+SVN_FS_H	./subversion/include/svn_fs.h	24;"	d
+SVN_FS_NODE_CACHE_MAX_KEYS	./subversion/libsvn_fs/tree.c	79;"	d	file:
+SVN_FS_WRITE_BUFFER_SIZE	./subversion/libsvn_fs/tree.c	76;"	d	file:
+SVN_FS__MAX_KEY_SIZE	./subversion/libsvn_fs/key-gen.h	47;"	d
+SVN_HASH_H	./subversion/include/svn_hash.h	24;"	d
+SVN_IGNORED_REVNUM	./subversion/include/svn_types.h	107;"	d
+SVN_INT_ERR	./subversion/include/svn_error.h	209;"	d
+SVN_INVALID_FILESIZE	./subversion/include/svn_types.h	120;"	d
+SVN_INVALID_REVNUM	./subversion/include/svn_types.h	101;"	d
+SVN_IO_H	./subversion/include/svn_io.h	26;"	d
+SVN_IS_VALID_REVNUM	./subversion/include/svn_types.h	98;"	d
+SVN_KEYLINE_MAXLEN	./subversion/include/svn_hash.h	40;"	d
+SVN_KEYWORD_AUTHOR_LONG	./subversion/include/svn_types.h	229;"	d
+SVN_KEYWORD_AUTHOR_SHORT	./subversion/include/svn_types.h	232;"	d
+SVN_KEYWORD_DATE_LONG	./subversion/include/svn_types.h	223;"	d
+SVN_KEYWORD_DATE_SHORT	./subversion/include/svn_types.h	226;"	d
+SVN_KEYWORD_ID	./subversion/include/svn_types.h	245;"	d
+SVN_KEYWORD_MAX_LEN	./subversion/include/svn_types.h	214;"	d
+SVN_KEYWORD_REVISION_LONG	./subversion/include/svn_types.h	217;"	d
+SVN_KEYWORD_REVISION_SHORT	./subversion/include/svn_types.h	220;"	d
+SVN_KEYWORD_URL_LONG	./subversion/include/svn_types.h	235;"	d
+SVN_KEYWORD_URL_SHORT	./subversion/include/svn_types.h	238;"	d
+SVN_LIBSVN_CLIENT_H	./subversion/libsvn_client/client.h	21;"	d
+SVN_LIBSVN_DELTA_H	./subversion/libsvn_delta/delta.h	29;"	d
+SVN_LIBSVN_FS_BDB_COMPAT_H	./subversion/libsvn_fs/bdb/bdb_compat.h	19;"	d
+SVN_LIBSVN_FS_BDB_ERR_H	./subversion/libsvn_fs/bdb/bdb-err.h	22;"	d
+SVN_LIBSVN_FS_CHANGES_TABLE_H	./subversion/libsvn_fs/bdb/changes-table.h	19;"	d
+SVN_LIBSVN_FS_COPIES_TABLE_H	./subversion/libsvn_fs/bdb/copies-table.h	19;"	d
+SVN_LIBSVN_FS_DAG_H	./subversion/libsvn_fs/dag.h	19;"	d
+SVN_LIBSVN_FS_DBT_H	./subversion/libsvn_fs/bdb/dbt.h	19;"	d
+SVN_LIBSVN_FS_ERR_H	./subversion/libsvn_fs/err.h	22;"	d
+SVN_LIBSVN_FS_FS_H	./subversion/libsvn_fs/fs.h	19;"	d
+SVN_LIBSVN_FS_FS_SKELS_H	./subversion/libsvn_fs/util/fs_skels.h	20;"	d
+SVN_LIBSVN_FS_ID_H	./subversion/libsvn_fs/id.h	19;"	d
+SVN_LIBSVN_FS_KEY_GEN_H	./subversion/libsvn_fs/key-gen.h	19;"	d
+SVN_LIBSVN_FS_NODES_TABLE_H	./subversion/libsvn_fs/bdb/nodes-table.h	19;"	d
+SVN_LIBSVN_FS_NODE_REV_H	./subversion/libsvn_fs/node-rev.h	19;"	d
+SVN_LIBSVN_FS_REPS_STRINGS_H	./subversion/libsvn_fs/reps-strings.h	19;"	d
+SVN_LIBSVN_FS_REPS_TABLE_H	./subversion/libsvn_fs/bdb/reps-table.h	19;"	d
+SVN_LIBSVN_FS_REVS_TXNS_H	./subversion/libsvn_fs/revs-txns.h	19;"	d
+SVN_LIBSVN_FS_REV_TABLE_H	./subversion/libsvn_fs/bdb/rev-table.h	19;"	d
+SVN_LIBSVN_FS_SKEL_H	./subversion/libsvn_fs/util/skel.h	19;"	d
+SVN_LIBSVN_FS_STRINGS_TABLE_H	./subversion/libsvn_fs/bdb/strings-table.h	19;"	d
+SVN_LIBSVN_FS_TRAIL_H	./subversion/libsvn_fs/trail.h	19;"	d
+SVN_LIBSVN_FS_TREE_H	./subversion/libsvn_fs/tree.h	19;"	d
+SVN_LIBSVN_FS_TXN_TABLE_H	./subversion/libsvn_fs/bdb/txn-table.h	19;"	d
+SVN_LIBSVN_FS_UUIDS_TABLE_H	./subversion/libsvn_fs/bdb/uuids-table.h	19;"	d
+SVN_LIBSVN_RA_DAV_H	./subversion/libsvn_ra_dav/ra_dav.h	22;"	d
+SVN_LIBSVN_RA_LOCAL_H	./subversion/libsvn_ra_local/ra_local.h	20;"	d
+SVN_LIBSVN_REPOS_H	./subversion/libsvn_repos/repos.h	19;"	d
+SVN_LIBSVN_SUBR_CONFIG_IMPL_H	./subversion/libsvn_subr/config_impl.h	22;"	d
+SVN_LIBSVN_SUBR_UTF_IMPL_H	./subversion/libsvn_subr/utf_impl.h	22;"	d
+SVN_LIBSVN_WC_ADM_FILES_H	./subversion/libsvn_wc/adm_files.h	24;"	d
+SVN_LIBSVN_WC_ADM_OPS_H	./subversion/libsvn_wc/adm_ops.h	25;"	d
+SVN_LIBSVN_WC_ENTRIES_H	./subversion/libsvn_wc/entries.h	21;"	d
+SVN_LIBSVN_WC_H	./subversion/libsvn_wc/wc.h	21;"	d
+SVN_LIBSVN_WC_LOG_H	./subversion/libsvn_wc/log.h	21;"	d
+SVN_LIBSVN_WC_PROPS_H	./subversion/libsvn_wc/props.h	21;"	d
+SVN_LIBSVN_WC_QUESTIONS_H	./subversion/libsvn_wc/questions.h	21;"	d
+SVN_LIBSVN_WC_TRANSLATE_H	./subversion/libsvn_wc/translate.h	21;"	d
+SVN_MAX_OBJECT_SIZE	./subversion/include/svn_types.h	328;"	d
+SVN_MD5_H	./subversion/include/svn_md5.h	23;"	d
+SVN_NEED_SWIG_TYPES	./subversion/bindings/swig/swigutil_pl.h	50;"	d
+SVN_NEED_SWIG_TYPES	./subversion/bindings/swig/swigutil_py.h	53;"	d
+SVN_NO_ERROR	./subversion/include/svn_error.h	44;"	d
+SVN_OPTS_H	./subversion/include/svn_opt.h	23;"	d
+SVN_OPT_FIRST_LONGOPT_ID	./subversion/include/svn_opt.h	64;"	d
+SVN_OPT_MAX_ALIASES	./subversion/include/svn_opt.h	56;"	d
+SVN_OPT_MAX_OPTIONS	./subversion/include/svn_opt.h	59;"	d
+SVN_PATH_H	./subversion/include/svn_path.h	35;"	d
+SVN_PATH_IS_EMPTY	./subversion/libsvn_subr/path.c	39;"	d	file:
+SVN_PATH_IS_PLATFORM_EMPTY	./subversion/libsvn_subr/path.c	44;"	d	file:
+SVN_POOLS_H	./subversion/include/svn_pools.h	26;"	d
+SVN_PROPID_baseline_relative_path	./subversion/mod_dav_svn/liveprops.c	/^  SVN_PROPID_baseline_relative_path = 1,$/;"	e	file:
+SVN_PROPID_md5_checksum	./subversion/mod_dav_svn/liveprops.c	/^  SVN_PROPID_md5_checksum,$/;"	e	file:
+SVN_PROPID_repository_uuid	./subversion/mod_dav_svn/liveprops.c	/^  SVN_PROPID_repository_uuid$/;"	e	file:
+SVN_PROPS_H	./subversion/include/svn_props.h	25;"	d
+SVN_PROP_CUSTOM_PREFIX	./subversion/include/svn_props.h	244;"	d
+SVN_PROP_ENTRY_COMMITTED_DATE	./subversion/include/svn_props.h	233;"	d
+SVN_PROP_ENTRY_COMMITTED_REV	./subversion/include/svn_props.h	230;"	d
+SVN_PROP_ENTRY_LAST_AUTHOR	./subversion/include/svn_props.h	236;"	d
+SVN_PROP_ENTRY_PREFIX	./subversion/include/svn_props.h	227;"	d
+SVN_PROP_ENTRY_UUID	./subversion/include/svn_props.h	239;"	d
+SVN_PROP_EOL_STYLE	./subversion/include/svn_props.h	174;"	d
+SVN_PROP_EXECUTABLE	./subversion/include/svn_props.h	180;"	d
+SVN_PROP_EXECUTABLE_VALUE	./subversion/include/svn_props.h	183;"	d
+SVN_PROP_EXTERNALS	./subversion/include/svn_props.h	199;"	d
+SVN_PROP_IGNORE	./subversion/include/svn_props.h	171;"	d
+SVN_PROP_KEYWORDS	./subversion/include/svn_props.h	177;"	d
+SVN_PROP_MIME_TYPE	./subversion/include/svn_props.h	168;"	d
+SVN_PROP_PREFIX	./subversion/include/svn_props.h	147;"	d
+SVN_PROP_REVISION_ALL_PROPS	./subversion/include/svn_props.h	282;"	d
+SVN_PROP_REVISION_AUTHOR	./subversion/include/svn_props.h	258;"	d
+SVN_PROP_REVISION_DATE	./subversion/include/svn_props.h	264;"	d
+SVN_PROP_REVISION_LOG	./subversion/include/svn_props.h	261;"	d
+SVN_PROP_REVISION_ORIG_DATE	./subversion/include/svn_props.h	277;"	d
+SVN_PROP_WC_PREFIX	./subversion/include/svn_props.h	222;"	d
+SVN_QUOPRINT_H	./subversion/include/svn_quoprint.h	24;"	d
+SVN_RANGE_INDEX_TEST_H	./subversion/tests/libsvn_delta/range-index-test.h	20;"	d
+SVN_RA_ABI_VERSION	./subversion/include/svn_ra.h	762;"	d
+SVN_RA_DAV__LP_ACTIVITY_COLL	./subversion/libsvn_ra_dav/ra_dav.h	288;"	d
+SVN_RA_DAV__LP_NAMESPACE	./subversion/libsvn_ra_dav/ra_dav.h	284;"	d
+SVN_RA_DAV__LP_VSN_URL	./subversion/libsvn_ra_dav/ra_dav.h	291;"	d
+SVN_RA_DAV__PROP_BASELINE_COLLECTION	./subversion/libsvn_ra_dav/ra_dav.h	299;"	d
+SVN_RA_DAV__PROP_BASELINE_RELPATH	./subversion/libsvn_ra_dav/ra_dav.h	307;"	d
+SVN_RA_DAV__PROP_CHECKED_IN	./subversion/libsvn_ra_dav/ra_dav.h	300;"	d
+SVN_RA_DAV__PROP_CREATIONDATE	./subversion/libsvn_ra_dav/ra_dav.h	303;"	d
+SVN_RA_DAV__PROP_CREATOR_DISPLAYNAME	./subversion/libsvn_ra_dav/ra_dav.h	304;"	d
+SVN_RA_DAV__PROP_GETCONTENTLENGTH	./subversion/libsvn_ra_dav/ra_dav.h	305;"	d
+SVN_RA_DAV__PROP_MD5_CHECKSUM	./subversion/libsvn_ra_dav/ra_dav.h	310;"	d
+SVN_RA_DAV__PROP_REPOSITORY_UUID	./subversion/libsvn_ra_dav/ra_dav.h	312;"	d
+SVN_RA_DAV__PROP_VCC	./subversion/libsvn_ra_dav/ra_dav.h	301;"	d
+SVN_RA_DAV__PROP_VERSION_NAME	./subversion/libsvn_ra_dav/ra_dav.h	302;"	d
+SVN_RA_DAV__XML_CDATA	./subversion/libsvn_ra_dav/ra_dav.h	51;"	d
+SVN_RA_DAV__XML_COLLECT	./subversion/libsvn_ra_dav/ra_dav.h	52;"	d
+SVN_RA_DAV__XML_DECLINE	./subversion/libsvn_ra_dav/ra_dav.h	49;"	d
+SVN_RA_DAV__XML_INVALID	./subversion/libsvn_ra_dav/ra_dav.h	48;"	d
+SVN_RA_DAV__XML_VALID	./subversion/libsvn_ra_dav/ra_dav.h	47;"	d
+SVN_RA_H	./subversion/include/svn_ra.h	26;"	d
+SVN_RA_NE_SESSION_ID	./subversion/libsvn_ra_dav/ra_dav.h	142;"	d
+SVN_RA_SVN_CAP_EDIT_PIPELINE	./subversion/include/svn_ra_svn.h	43;"	d
+SVN_RA_SVN_H	./subversion/include/svn_ra_svn.h	26;"	d
+SVN_RA_SVN_LIST	./subversion/include/svn_ra_svn.h	/^    SVN_RA_SVN_LIST$/;"	e	enum:svn_ra_svn_item_t::<anonymous>
+SVN_RA_SVN_NUMBER	./subversion/include/svn_ra_svn.h	/^    SVN_RA_SVN_NUMBER,$/;"	e	enum:svn_ra_svn_item_t::<anonymous>
+SVN_RA_SVN_PORT	./subversion/include/svn_ra_svn.h	40;"	d
+SVN_RA_SVN_STRING	./subversion/include/svn_ra_svn.h	/^    SVN_RA_SVN_STRING,$/;"	e	enum:svn_ra_svn_item_t::<anonymous>
+SVN_RA_SVN_WORD	./subversion/include/svn_ra_svn.h	/^    SVN_RA_SVN_WORD,$/;"	e	enum:svn_ra_svn_item_t::<anonymous>
+SVN_REGISTRY_HKCU	./subversion/libsvn_subr/config_impl.h	92;"	d
+SVN_REGISTRY_HKCU_LEN	./subversion/libsvn_subr/config_impl.h	93;"	d
+SVN_REGISTRY_HKLM	./subversion/libsvn_subr/config_impl.h	90;"	d
+SVN_REGISTRY_HKLM_LEN	./subversion/libsvn_subr/config_impl.h	91;"	d
+SVN_REGISTRY_PATH	./subversion/libsvn_subr/config_impl.h	94;"	d
+SVN_REGISTRY_PATH_LEN	./subversion/libsvn_subr/config_impl.h	95;"	d
+SVN_REGISTRY_PREFIX	./subversion/libsvn_subr/config_impl.h	88;"	d
+SVN_REGISTRY_PREFIX_LEN	./subversion/libsvn_subr/config_impl.h	89;"	d
+SVN_REGISTRY_SYS_CONFIG_PATH	./subversion/libsvn_subr/config_impl.h	96;"	d
+SVN_REGISTRY_USR_CONFIG_PATH	./subversion/libsvn_subr/config_impl.h	100;"	d
+SVN_REG_DEFAULT_NAME_SIZE	./subversion/libsvn_subr/config_win.c	180;"	d	file:
+SVN_REG_DEFAULT_VALUE_SIZE	./subversion/libsvn_subr/config_win.c	181;"	d	file:
+SVN_REPOS_DUMPFILE_CONTENT_LENGTH	./subversion/include/svn_repos.h	828;"	d
+SVN_REPOS_DUMPFILE_FORMAT_VERSION	./subversion/include/svn_repos.h	826;"	d
+SVN_REPOS_DUMPFILE_MAGIC_HEADER	./subversion/include/svn_repos.h	825;"	d
+SVN_REPOS_DUMPFILE_NODE_ACTION	./subversion/include/svn_repos.h	834;"	d
+SVN_REPOS_DUMPFILE_NODE_COPYFROM_PATH	./subversion/include/svn_repos.h	835;"	d
+SVN_REPOS_DUMPFILE_NODE_COPYFROM_REV	./subversion/include/svn_repos.h	836;"	d
+SVN_REPOS_DUMPFILE_NODE_KIND	./subversion/include/svn_repos.h	833;"	d
+SVN_REPOS_DUMPFILE_NODE_PATH	./subversion/include/svn_repos.h	832;"	d
+SVN_REPOS_DUMPFILE_PROP_CONTENT_LENGTH	./subversion/include/svn_repos.h	840;"	d
+SVN_REPOS_DUMPFILE_REVISION_NUMBER	./subversion/include/svn_repos.h	830;"	d
+SVN_REPOS_DUMPFILE_TEXT_CONTENT_CHECKSUM	./subversion/include/svn_repos.h	838;"	d
+SVN_REPOS_DUMPFILE_TEXT_CONTENT_LENGTH	./subversion/include/svn_repos.h	841;"	d
+SVN_REPOS_DUMPFILE_TEXT_COPY_SOURCE_CHECKSUM	./subversion/include/svn_repos.h	837;"	d
+SVN_REPOS_DUMPFILE_UUID	./subversion/include/svn_repos.h	827;"	d
+SVN_REPOS_H	./subversion/include/svn_repos.h	24;"	d
+SVN_REPOS__CONF_DIR	./subversion/libsvn_repos/repos.h	46;"	d
+SVN_REPOS__CONF_SVNSERVE_CONF	./subversion/libsvn_repos/repos.h	67;"	d
+SVN_REPOS__DAV_DIR	./subversion/libsvn_repos/repos.h	43;"	d
+SVN_REPOS__DB_DIR	./subversion/libsvn_repos/repos.h	42;"	d
+SVN_REPOS__DB_LOCKFILE	./subversion/libsvn_repos/repos.h	49;"	d
+SVN_REPOS__DB_LOGS_LOCKFILE	./subversion/libsvn_repos/repos.h	50;"	d
+SVN_REPOS__FORMAT	./subversion/libsvn_repos/repos.h	40;"	d
+SVN_REPOS__HOOK_DESC_EXT	./subversion/libsvn_repos/repos.h	63;"	d
+SVN_REPOS__HOOK_DIR	./subversion/libsvn_repos/repos.h	45;"	d
+SVN_REPOS__HOOK_POST_COMMIT	./subversion/libsvn_repos/repos.h	55;"	d
+SVN_REPOS__HOOK_POST_REVPROP_CHANGE	./subversion/libsvn_repos/repos.h	59;"	d
+SVN_REPOS__HOOK_PRE_COMMIT	./subversion/libsvn_repos/repos.h	54;"	d
+SVN_REPOS__HOOK_PRE_REVPROP_CHANGE	./subversion/libsvn_repos/repos.h	58;"	d
+SVN_REPOS__HOOK_READ_SENTINEL	./subversion/libsvn_repos/repos.h	56;"	d
+SVN_REPOS__HOOK_START_COMMIT	./subversion/libsvn_repos/repos.h	53;"	d
+SVN_REPOS__HOOK_WRITE_SENTINEL	./subversion/libsvn_repos/repos.h	57;"	d
+SVN_REPOS__LOCK_DIR	./subversion/libsvn_repos/repos.h	44;"	d
+SVN_REPOS__README	./subversion/libsvn_repos/repos.h	39;"	d
+SVN_REPOS__VERSION	./subversion/libsvn_repos/repos.h	32;"	d
+SVN_REVNUM_T_FMT	./subversion/include/svn_types.h	113;"	d
+SVN_RO_DAV_PROP	./subversion/mod_dav_svn/liveprops.c	54;"	d	file:
+SVN_RO_DAV_PROP2	./subversion/mod_dav_svn/liveprops.c	58;"	d	file:
+SVN_RO_SVN_PROP	./subversion/mod_dav_svn/liveprops.c	63;"	d	file:
+SVN_RW_DAV_PROP	./subversion/mod_dav_svn/liveprops.c	56;"	d	file:
+SVN_RW_DAV_PROP2	./subversion/mod_dav_svn/liveprops.c	60;"	d	file:
+SVN_RW_SVN_PROP	./subversion/mod_dav_svn/liveprops.c	65;"	d	file:
+SVN_SORTS_H	./subversion/include/svn_sorts.h	24;"	d
+SVN_STREAM_CHUNK_SIZE	./subversion/include/svn_types.h	324;"	d
+SVN_STRING_H	./subversion/include/svn_string.h	66;"	d
+SVN_STR_TO_REV	./subversion/include/svn_types.h	110;"	d
+SVN_SUBST_H	./subversion/include/svn_subst.h	25;"	d
+SVN_SVNDIFF_MIME_TYPE	./subversion/include/svn_dav.h	39;"	d
+SVN_SWIG_JAVACACHE_INCLUDED	./subversion/bindings/swig/swigutil_java_cache.h	78;"	d
+SVN_SWIG_JAVA_CACHE_CLASS_DEF	./subversion/bindings/swig/swigutil_java_cache.h	116;"	d
+SVN_SWIG_JAVA_CACHE_CLASS_DEF	./subversion/bindings/swig/swigutil_java_cache.h	37;"	d
+SVN_SWIG_JAVA_CACHE_CLASS_DEF	./subversion/bindings/swig/swigutil_java_cache.h	52;"	d
+SVN_SWIG_JAVA_CACHE_CLASS_DEF	./subversion/bindings/swig/swigutil_java_cache.h	69;"	d
+SVN_SWIG_JAVA_CACHE_CLASS_DEF	./subversion/bindings/swig/swigutil_java_cache.h	85;"	d
+SVN_SWIG_JAVA_CACHE_END	./subversion/bindings/swig/swigutil_java_cache.h	118;"	d
+SVN_SWIG_JAVA_CACHE_END	./subversion/bindings/swig/swigutil_java_cache.h	40;"	d
+SVN_SWIG_JAVA_CACHE_END	./subversion/bindings/swig/swigutil_java_cache.h	58;"	d
+SVN_SWIG_JAVA_CACHE_END	./subversion/bindings/swig/swigutil_java_cache.h	72;"	d
+SVN_SWIG_JAVA_CACHE_END	./subversion/bindings/swig/swigutil_java_cache.h	88;"	d
+SVN_SWIG_JAVA_CACHE_METHOD_DEF	./subversion/bindings/swig/swigutil_java_cache.h	117;"	d
+SVN_SWIG_JAVA_CACHE_METHOD_DEF	./subversion/bindings/swig/swigutil_java_cache.h	34;"	d
+SVN_SWIG_JAVA_CACHE_METHOD_DEF	./subversion/bindings/swig/swigutil_java_cache.h	48;"	d
+SVN_SWIG_JAVA_CACHE_METHOD_DEF	./subversion/bindings/swig/swigutil_java_cache.h	67;"	d
+SVN_SWIG_JAVA_CACHE_METHOD_DEF	./subversion/bindings/swig/swigutil_java_cache.h	82;"	d
+SVN_SWIG_JAVA_CACHE_START	./subversion/bindings/swig/swigutil_java_cache.h	115;"	d
+SVN_SWIG_JAVA_CACHE_START	./subversion/bindings/swig/swigutil_java_cache.h	32;"	d
+SVN_SWIG_JAVA_CACHE_START	./subversion/bindings/swig/swigutil_java_cache.h	45;"	d
+SVN_SWIG_JAVA_CACHE_START	./subversion/bindings/swig/swigutil_java_cache.h	65;"	d
+SVN_SWIG_JAVA_CACHE_START	./subversion/bindings/swig/swigutil_java_cache.h	80;"	d
+SVN_SWIG_JAVA_DEFINE_CACHE	./subversion/bindings/swig/swigutil_java.c	31;"	d	file:
+SVN_SWIG_JAVA_DEFINE_CACHE	./subversion/bindings/swig/swigutil_java_cache.h	120;"	d
+SVN_SWIG_JAVA_INIT_CACHE	./subversion/bindings/swig/swigutil_java.c	1223;"	d	file:
+SVN_SWIG_JAVA_INIT_CACHE	./subversion/bindings/swig/swigutil_java_cache.h	121;"	d
+SVN_SWIG_JAVA_TERM_CACHE	./subversion/bindings/swig/swigutil_java.c	1236;"	d	file:
+SVN_SWIG_JAVA_TERM_CACHE	./subversion/bindings/swig/swigutil_java_cache.h	122;"	d
+SVN_SWIG_SWIGUTIL_JAVA_H	./subversion/bindings/swig/swigutil_java.h	21;"	d
+SVN_SWIG_SWIGUTIL_PL_H	./subversion/bindings/swig/swigutil_pl.h	21;"	d
+SVN_SWIG_SWIGUTIL_PY_H	./subversion/bindings/swig/swigutil_py.h	21;"	d
+SVN_TEST_H	./subversion/include/svn_test.h	23;"	d
+SVN_TEST_NULL	./subversion/include/svn_test.h	60;"	d
+SVN_TEST_PASS	./subversion/include/svn_test.h	63;"	d
+SVN_TEST_XFAIL	./subversion/include/svn_test.h	66;"	d
+SVN_TEST__DIR_DELTA_EDITOR_H	./subversion/tests/libsvn_repos/dir-delta-editor.h	24;"	d
+SVN_TEST__FS_HELPERS_H	./subversion/tests/fs-helpers.h	19;"	d
+SVN_TIME_H	./subversion/include/svn_time.h	23;"	d
+SVN_TIME__MAX_LENGTH	./subversion/libsvn_subr/time.c	73;"	d	file:
+SVN_TYPES_H	./subversion/include/svn_types.h	23;"	d
+SVN_UTF_CONTOU_XLATE_HANDLE	./subversion/libsvn_subr/cmdline.c	39;"	d	file:
+SVN_UTF_H	./subversion/include/svn_utf.h	25;"	d
+SVN_UTF_NTOU_XLATE_HANDLE	./subversion/libsvn_subr/utf.c	37;"	d	file:
+SVN_UTF_UTOCON_XLATE_HANDLE	./subversion/libsvn_subr/cmdline.c	40;"	d	file:
+SVN_UTF_UTON_XLATE_HANDLE	./subversion/libsvn_subr/utf.c	38;"	d	file:
+SVN_VERSION	./subversion/include/svn_version.h	126;"	d
+SVN_VERSION_H	./subversion/include/svn_version.h	23;"	d
+SVN_VER_LIBRARY	./subversion/include/svn_version.h	71;"	d
+SVN_VER_MAJOR	./subversion/include/svn_version.h	51;"	d
+SVN_VER_MICRO	./subversion/include/svn_version.h	64;"	d
+SVN_VER_MINOR	./subversion/include/svn_version.h	58;"	d
+SVN_VER_NUM	./subversion/include/svn_version.h	118;"	d
+SVN_VER_NUMBER	./subversion/include/svn_version.h	123;"	d
+SVN_VER_NUMTAG	./subversion/include/svn_version.h	101;"	d
+SVN_VER_REVISION	./subversion/include/svn_version.h	112;"	d
+SVN_VER_TAG	./subversion/include/svn_version.h	86;"	d
+SVN_WC_ADM_DIR_NAME	./subversion/include/svn_wc.h	673;"	d
+SVN_WC_ENTRY_THIS_DIR	./subversion/include/svn_wc.h	790;"	d
+SVN_WC_H	./subversion/include/svn_wc.h	33;"	d
+SVN_WC_TIMESTAMP_WC	./subversion/libsvn_wc/wc.h	96;"	d
+SVN_WC__ADM_AUTH_DIR	./subversion/libsvn_wc/wc.h	121;"	d
+SVN_WC__ADM_DIR_PROPS	./subversion/libsvn_wc/wc.h	115;"	d
+SVN_WC__ADM_DIR_PROP_BASE	./subversion/libsvn_wc/wc.h	116;"	d
+SVN_WC__ADM_DIR_WCPROPS	./subversion/libsvn_wc/wc.h	118;"	d
+SVN_WC__ADM_EMPTY_FILE	./subversion/libsvn_wc/wc.h	122;"	d
+SVN_WC__ADM_ENTRIES	./subversion/libsvn_wc/wc.h	109;"	d
+SVN_WC__ADM_FORMAT	./subversion/libsvn_wc/wc.h	107;"	d
+SVN_WC__ADM_KILLME	./subversion/libsvn_wc/wc.h	120;"	d
+SVN_WC__ADM_LOCK	./subversion/libsvn_wc/wc.h	110;"	d
+SVN_WC__ADM_LOG	./subversion/libsvn_wc/wc.h	119;"	d
+SVN_WC__ADM_PROPS	./subversion/libsvn_wc/wc.h	113;"	d
+SVN_WC__ADM_PROP_BASE	./subversion/libsvn_wc/wc.h	114;"	d
+SVN_WC__ADM_README	./subversion/libsvn_wc/wc.h	108;"	d
+SVN_WC__ADM_TEXT_BASE	./subversion/libsvn_wc/wc.h	112;"	d
+SVN_WC__ADM_TMP	./subversion/libsvn_wc/wc.h	111;"	d
+SVN_WC__ADM_WCPROPS	./subversion/libsvn_wc/wc.h	117;"	d
+SVN_WC__BASE_EXT	./subversion/libsvn_wc/wc.h	39;"	d
+SVN_WC__DEFAULT_EOL_MARKER	./subversion/libsvn_wc/translate.h	38;"	d
+SVN_WC__DIFF_EXT	./subversion/libsvn_wc/wc.h	35;"	d
+SVN_WC__ENTRIES_ATTR_DIR_STR	./subversion/libsvn_wc/entries.h	39;"	d
+SVN_WC__ENTRIES_ATTR_FILE_STR	./subversion/libsvn_wc/entries.h	38;"	d
+SVN_WC__ENTRIES_ENTRY	./subversion/libsvn_wc/entries.h	34;"	d
+SVN_WC__ENTRIES_TOPLEVEL	./subversion/libsvn_wc/entries.h	33;"	d
+SVN_WC__ENTRY_ATTR_ABSENT	./subversion/libsvn_wc/entries.h	55;"	d
+SVN_WC__ENTRY_ATTR_CHECKSUM	./subversion/libsvn_wc/entries.h	51;"	d
+SVN_WC__ENTRY_ATTR_CMT_AUTHOR	./subversion/libsvn_wc/entries.h	64;"	d
+SVN_WC__ENTRY_ATTR_CMT_DATE	./subversion/libsvn_wc/entries.h	63;"	d
+SVN_WC__ENTRY_ATTR_CMT_REV	./subversion/libsvn_wc/entries.h	62;"	d
+SVN_WC__ENTRY_ATTR_CONFLICT_NEW	./subversion/libsvn_wc/entries.h	59;"	d
+SVN_WC__ENTRY_ATTR_CONFLICT_OLD	./subversion/libsvn_wc/entries.h	58;"	d
+SVN_WC__ENTRY_ATTR_CONFLICT_WRK	./subversion/libsvn_wc/entries.h	60;"	d
+SVN_WC__ENTRY_ATTR_COPIED	./subversion/libsvn_wc/entries.h	53;"	d
+SVN_WC__ENTRY_ATTR_COPYFROM_REV	./subversion/libsvn_wc/entries.h	57;"	d
+SVN_WC__ENTRY_ATTR_COPYFROM_URL	./subversion/libsvn_wc/entries.h	56;"	d
+SVN_WC__ENTRY_ATTR_DELETED	./subversion/libsvn_wc/entries.h	54;"	d
+SVN_WC__ENTRY_ATTR_INCOMPLETE	./subversion/libsvn_wc/entries.h	66;"	d
+SVN_WC__ENTRY_ATTR_KIND	./subversion/libsvn_wc/entries.h	48;"	d
+SVN_WC__ENTRY_ATTR_NAME	./subversion/libsvn_wc/entries.h	45;"	d
+SVN_WC__ENTRY_ATTR_PREJFILE	./subversion/libsvn_wc/entries.h	61;"	d
+SVN_WC__ENTRY_ATTR_PROP_TIME	./subversion/libsvn_wc/entries.h	50;"	d
+SVN_WC__ENTRY_ATTR_REVISION	./subversion/libsvn_wc/entries.h	46;"	d
+SVN_WC__ENTRY_ATTR_SCHEDULE	./subversion/libsvn_wc/entries.h	52;"	d
+SVN_WC__ENTRY_ATTR_TEXT_TIME	./subversion/libsvn_wc/entries.h	49;"	d
+SVN_WC__ENTRY_ATTR_URL	./subversion/libsvn_wc/entries.h	47;"	d
+SVN_WC__ENTRY_ATTR_UUID	./subversion/libsvn_wc/entries.h	65;"	d
+SVN_WC__ENTRY_MODIFY_ABSENT	./subversion/libsvn_wc/entries.h	132;"	d
+SVN_WC__ENTRY_MODIFY_ALL	./subversion/libsvn_wc/entries.h	136;"	d
+SVN_WC__ENTRY_MODIFY_CHECKSUM	./subversion/libsvn_wc/entries.h	117;"	d
+SVN_WC__ENTRY_MODIFY_CMT_AUTHOR	./subversion/libsvn_wc/entries.h	129;"	d
+SVN_WC__ENTRY_MODIFY_CMT_DATE	./subversion/libsvn_wc/entries.h	128;"	d
+SVN_WC__ENTRY_MODIFY_CMT_REV	./subversion/libsvn_wc/entries.h	127;"	d
+SVN_WC__ENTRY_MODIFY_CONFLICT_NEW	./subversion/libsvn_wc/entries.h	124;"	d
+SVN_WC__ENTRY_MODIFY_CONFLICT_OLD	./subversion/libsvn_wc/entries.h	123;"	d
+SVN_WC__ENTRY_MODIFY_CONFLICT_WRK	./subversion/libsvn_wc/entries.h	125;"	d
+SVN_WC__ENTRY_MODIFY_COPIED	./subversion/libsvn_wc/entries.h	119;"	d
+SVN_WC__ENTRY_MODIFY_COPYFROM_REV	./subversion/libsvn_wc/entries.h	122;"	d
+SVN_WC__ENTRY_MODIFY_COPYFROM_URL	./subversion/libsvn_wc/entries.h	121;"	d
+SVN_WC__ENTRY_MODIFY_DELETED	./subversion/libsvn_wc/entries.h	120;"	d
+SVN_WC__ENTRY_MODIFY_FORCE	./subversion/libsvn_wc/entries.h	140;"	d
+SVN_WC__ENTRY_MODIFY_INCOMPLETE	./subversion/libsvn_wc/entries.h	131;"	d
+SVN_WC__ENTRY_MODIFY_KIND	./subversion/libsvn_wc/entries.h	114;"	d
+SVN_WC__ENTRY_MODIFY_PREJFILE	./subversion/libsvn_wc/entries.h	126;"	d
+SVN_WC__ENTRY_MODIFY_PROP_TIME	./subversion/libsvn_wc/entries.h	116;"	d
+SVN_WC__ENTRY_MODIFY_REVISION	./subversion/libsvn_wc/entries.h	112;"	d
+SVN_WC__ENTRY_MODIFY_SCHEDULE	./subversion/libsvn_wc/entries.h	118;"	d
+SVN_WC__ENTRY_MODIFY_TEXT_TIME	./subversion/libsvn_wc/entries.h	115;"	d
+SVN_WC__ENTRY_MODIFY_URL	./subversion/libsvn_wc/entries.h	113;"	d
+SVN_WC__ENTRY_MODIFY_UUID	./subversion/libsvn_wc/entries.h	130;"	d
+SVN_WC__ENTRY_VALUE_ADD	./subversion/libsvn_wc/entries.h	69;"	d
+SVN_WC__ENTRY_VALUE_DELETE	./subversion/libsvn_wc/entries.h	70;"	d
+SVN_WC__ENTRY_VALUE_REPLACE	./subversion/libsvn_wc/entries.h	71;"	d
+SVN_WC__LOG_APPEND	./subversion/libsvn_wc/log.h	74;"	d
+SVN_WC__LOG_ATTR_ARG_1	./subversion/libsvn_wc/log.h	129;"	d
+SVN_WC__LOG_ATTR_ARG_2	./subversion/libsvn_wc/log.h	130;"	d
+SVN_WC__LOG_ATTR_ARG_3	./subversion/libsvn_wc/log.h	131;"	d
+SVN_WC__LOG_ATTR_ARG_4	./subversion/libsvn_wc/log.h	132;"	d
+SVN_WC__LOG_ATTR_ARG_5	./subversion/libsvn_wc/log.h	133;"	d
+SVN_WC__LOG_ATTR_DEST	./subversion/libsvn_wc/log.h	121;"	d
+SVN_WC__LOG_ATTR_NAME	./subversion/libsvn_wc/log.h	120;"	d
+SVN_WC__LOG_ATTR_PROPNAME	./subversion/libsvn_wc/log.h	122;"	d
+SVN_WC__LOG_ATTR_PROPVAL	./subversion/libsvn_wc/log.h	123;"	d
+SVN_WC__LOG_ATTR_PROP_REJFILE	./subversion/libsvn_wc/log.h	126;"	d
+SVN_WC__LOG_ATTR_REVISION	./subversion/libsvn_wc/log.h	124;"	d
+SVN_WC__LOG_ATTR_TEXT_REJFILE	./subversion/libsvn_wc/log.h	125;"	d
+SVN_WC__LOG_ATTR_TIMESTAMP	./subversion/libsvn_wc/log.h	127;"	d
+SVN_WC__LOG_COMMITTED	./subversion/libsvn_wc/log.h	91;"	d
+SVN_WC__LOG_CP	./subversion/libsvn_wc/log.h	58;"	d
+SVN_WC__LOG_CP_AND_DETRANSLATE	./subversion/libsvn_wc/log.h	68;"	d
+SVN_WC__LOG_CP_AND_TRANSLATE	./subversion/libsvn_wc/log.h	63;"	d
+SVN_WC__LOG_DELETE_ENTRY	./subversion/libsvn_wc/log.h	52;"	d
+SVN_WC__LOG_MERGE	./subversion/libsvn_wc/log.h	115;"	d
+SVN_WC__LOG_MODIFY_ENTRY	./subversion/libsvn_wc/log.h	49;"	d
+SVN_WC__LOG_MODIFY_WCPROP	./subversion/libsvn_wc/log.h	96;"	d
+SVN_WC__LOG_MV	./subversion/libsvn_wc/log.h	55;"	d
+SVN_WC__LOG_READONLY	./subversion/libsvn_wc/log.h	77;"	d
+SVN_WC__LOG_RM	./subversion/libsvn_wc/log.h	71;"	d
+SVN_WC__LOG_SET_TIMESTAMP	./subversion/libsvn_wc/log.h	80;"	d
+SVN_WC__OLD_PROPNAMES_VERSION	./subversion/libsvn_wc/wc.h	65;"	d
+SVN_WC__PROP_REJ_EXT	./subversion/libsvn_wc/wc.h	38;"	d
+SVN_WC__TEXT_REJ_EXT	./subversion/libsvn_wc/wc.h	37;"	d
+SVN_WC__THIS_DIR_PREJ	./subversion/libsvn_wc/wc.h	128;"	d
+SVN_WC__TMP_EXT	./subversion/libsvn_wc/wc.h	36;"	d
+SVN_WC__VERSION	./subversion/libsvn_wc/wc.h	61;"	d
+SVN_WC__WORK_EXT	./subversion/libsvn_wc/wc.h	40;"	d
+SVN_XML_H	./subversion/include/svn_xml.h	25;"	d
+SVN_XML_NAMESPACE	./subversion/include/svn_xml.h	39;"	d
+SWIG_ConvertPtr	./subversion/bindings/swig/swigutil_pl.h	59;"	d
+SWIG_MakePtr	./subversion/bindings/swig/swigutil_pl.h	58;"	d
+SWIG_NewPointerObj	./subversion/bindings/swig/swigutil_py.h	39;"	d
+SubversionException	./subversion/bindings/swig/swigutil_py.c	/^static PyObject *SubversionException = NULL;$/;"	v	file:
+TEST_BUF_SIZE	./subversion/tests/libsvn_subr/stream-test.c	115;"	d	file:
+TEST_BUF_SIZE	./subversion/tests/libsvn_subr/stream-test.c	153;"	d	file:
+TEST_BUF_SIZE	./subversion/tests/libsvn_subr/stream-test.c	228;"	d	file:
+TEST_BUF_SIZE	./subversion/tests/libsvn_subr/stream-test.c	35;"	d	file:
+TEST_MANY	./subversion/tests/libsvn_subr/path-test.c	347;"	d	file:
+TOP_DIR	./subversion/libsvn_ra_dav/fetch.c	144;"	d	file:
+TRUE	./subversion/include/svn_types.h	136;"	d
+TZIND	./subversion/libsvn_subr/date.c	/^  TZIND,    \/* Handle +, -, Z *\/$/;"	e	enum:rule_action	file:
+Targets	./subversion/bindings/java/javahl/native/Targets.h	/^class Targets  $/;"	c
+UNAUTHENTICATED	./subversion/svnserve/serve.c	/^enum authn_type { UNAUTHENTICATED, AUTHENTICATED };$/;"	e	enum:authn_type	file:
+USE_STUBLESS_PROXY	./subversion/bindings/com/dlldatax.c	24;"	d	file:
+VALID_LITERAL	./subversion/libsvn_subr/quoprint.c	55;"	d	file:
+VD_KEY_SIZE	./subversion/libsvn_delta/vdelta.c	53;"	d	file:
+WIN32_LEAN_AND_MEAN	./subversion/libsvn_subr/config_win.c	25;"	d	file:
+WIN32_RETRY_LOOP	./subversion/libsvn_subr/io.c	57;"	d	file:
+WIN32_RETRY_LOOP	./subversion/libsvn_subr/io.c	74;"	d	file:
+WINSVN_COMCP_H_	./subversion/bindings/com/svn_comCP.h	18;"	d
+WINSVN_COM_MISC_H_	./subversion/bindings/com/misc.h	17;"	d
+WINSVN_H_	./subversion/bindings/com/SVN.h	20;"	d
+WINSVN_MARSHALL_H_	./subversion/bindings/com/MarshalArray.h	18;"	d
+WINSVN_STATUS_H_	./subversion/bindings/com/SVNStatus.h	20;"	d
+WRITE_ACCESS	./subversion/svnserve/serve.c	/^enum access_type { NO_ACCESS, READ_ACCESS, WRITE_ACCESS };$/;"	e	enum:access_type	file:
+ZBUFFER_SIZE	./subversion/libsvn_subr/stream.c	270;"	d	file:
+_APS_NEXT_COMMAND_VALUE	./subversion/bindings/com/resource.h	14;"	d
+_APS_NEXT_CONTROL_VALUE	./subversion/bindings/com/resource.h	15;"	d
+_APS_NEXT_RESOURCE_VALUE	./subversion/bindings/com/resource.h	13;"	d
+_APS_NEXT_SYMED_VALUE	./subversion/bindings/com/resource.h	16;"	d
+_ATL_APARTMENT_THREADED	./subversion/bindings/com/StdAfx.h	32;"	d
+_WIN32_WINNT	./subversion/bindings/com/StdAfx.h	30;"	d
+_WIN32_WINNT	./subversion/bindings/com/dlldatax.c	23;"	d	file:
+_csNewDir	./subversion/bindings/com/SVN.h	/^        CRITICAL_SECTION _csNewDir;$/;"	m	class:CSVNWorkingCopy
+_hFindNotification	./subversion/bindings/com/SVN.h	/^        HANDLE _hFindNotification;$/;"	m	class:CSVNWorkingCopy
+_hFindNotification_NewDir	./subversion/bindings/com/SVN.h	/^        HANDLE _hFindNotification_NewDir;$/;"	m	class:CSVNWorkingCopy
+_hFindNotification_Stop	./subversion/bindings/com/SVN.h	/^        HANDLE _hFindNotification_Stop;$/;"	m	class:CSVNWorkingCopy
+_hFindNotification_Thread	./subversion/bindings/com/SVN.h	/^        HANDLE _hFindNotification_Thread;$/;"	m	class:CSVNWorkingCopy
+_pszNotification_Dir	./subversion/bindings/com/SVN.h	/^        CHAR *_pszNotification_Dir;$/;"	m	class:CSVNWorkingCopy
+_saved_thread_key	./subversion/bindings/swig/swigutil_py.c	/^static apr_threadkey_t *_saved_thread_key = NULL;$/;"	v	file:
+_saved_thread_pool	./subversion/bindings/swig/swigutil_py.c	/^static apr_pool_t *_saved_thread_pool = NULL;$/;"	v	file:
+a	./subversion/tests/libsvn_subr/string-test.c	/^svn_stringbuf_t *a = NULL, *b = NULL, *c = NULL;$/;"	v
+abort_edit	./subversion/include/svn_delta.h	/^  svn_error_t *(*abort_edit) (void *edit_baton,$/;"	m	struct:svn_delta_editor_t
+abort_edit	./subversion/libsvn_client/commit_util.c	/^abort_edit (void *edit_baton, apr_pool_t *pool)$/;"	f	file:
+abort_edit	./subversion/libsvn_repos/commit.c	/^abort_edit (void *edit_baton,$/;"	f	file:
+abort_on_pool_failure	./subversion/libsvn_subr/pool.c	/^abort_on_pool_failure (int retcode)$/;"	f	file:
+abort_report	./subversion/include/svn_ra.h	/^  svn_error_t *(*abort_report) (void *report_baton,$/;"	m	struct:svn_ra_reporter_t
+abort_report	./subversion/svnserve/serve.c	/^static svn_error_t *abort_report(svn_ra_svn_conn_t *conn, apr_pool_t *pool,$/;"	f	file:
+abort_string	./subversion/tests/libsvn_fs/strings-reps-test.c	/^abort_string (const char **msg, $/;"	f	file:
+abort_trail	./subversion/libsvn_fs/trail.c	/^abort_trail (trail_t *trail)$/;"	f	file:
+abort_txn	./subversion/tests/libsvn_fs/fs-test.c	/^abort_txn (const char **msg,$/;"	f	file:
+aborted	./subversion/libsvn_ra_svn/editor.c	/^  svn_boolean_t *aborted;$/;"	m	file:
+aborted	./subversion/libsvn_ra_svn/editorp.c	/^  svn_boolean_t *aborted;$/;"	m	file:
+absent	./subversion/include/svn_wc.h	/^  svn_boolean_t absent;$/;"	m	struct:svn_wc_entry_t
+absent_directory	./subversion/include/svn_delta.h	/^  svn_error_t *(*absent_directory) (const char *path,$/;"	m	struct:svn_delta_editor_t
+absent_directory	./subversion/libsvn_delta/cancel.c	/^absent_directory (const char *path,$/;"	f	file:
+absent_directory	./subversion/libsvn_wc/update_editor.c	/^absent_directory (const char *path,$/;"	f	file:
+absent_file	./subversion/include/svn_delta.h	/^  svn_error_t *(*absent_file) (const char *path,$/;"	m	struct:svn_delta_editor_t
+absent_file	./subversion/libsvn_delta/cancel.c	/^absent_file (const char *path,$/;"	f	file:
+absent_file	./subversion/libsvn_wc/update_editor.c	/^absent_file (const char *path,$/;"	f	file:
+absent_file_or_dir	./subversion/libsvn_repos/delta.c	/^absent_file_or_dir (struct context *c,$/;"	f	file:
+absent_file_or_dir	./subversion/libsvn_wc/update_editor.c	/^absent_file_or_dir (const char *path,$/;"	f	file:
+absent_file_or_dir	./subversion/tests/svn_test_editor.c	/^absent_file_or_dir (const char *path,$/;"	f	file:
+absent_helper	./subversion/mod_dav_svn/update.c	/^static svn_error_t * absent_helper(svn_boolean_t is_dir,$/;"	f	file:
+absent_xxx_func	./subversion/libsvn_delta/default_editor.c	/^absent_xxx_func (const char *path,$/;"	f	file:
+accept_report	./subversion/svnserve/serve.c	/^static svn_error_t *accept_report(svn_ra_svn_conn_t *conn, apr_pool_t *pool,$/;"	f	file:
+accepted_failures	./subversion/include/svn_auth.h	/^  apr_uint32_t accepted_failures;$/;"	m	struct:svn_auth_cred_ssl_server_trust_t
+access	./subversion/mod_authz_svn/mod_authz_svn.c	/^    int access;$/;"	m	struct:parse_authz_baton	file:
+access_checker	./subversion/mod_authz_svn/mod_authz_svn.c	/^static int access_checker(request_rec *r)$/;"	f	file:
+access_file	./subversion/mod_authz_svn/mod_authz_svn.c	/^    const char *access_file;$/;"	m	file:
+access_type	./subversion/svnserve/serve.c	/^enum access_type { NO_ACCESS, READ_ACCESS, WRITE_ACCESS };$/;"	g	file:
+accumulate_entry_props	./subversion/libsvn_wc/update_editor.c	/^accumulate_entry_props (svn_stringbuf_t *log_accum,$/;"	f	file:
+accumulate_wcprops	./subversion/libsvn_wc/update_editor.c	/^accumulate_wcprops (svn_stringbuf_t *log_accum,$/;"	f	file:
+action	./subversion/include/svn_repos.h	/^  char action; $/;"	m	struct:svn_repos_node_t
+action	./subversion/include/svn_types.h	/^  char action;$/;"	m	struct:svn_log_changed_path_t
+action	./subversion/libsvn_client/blame.c	/^  char action;             \/* The action associated with the eldest *\/ $/;"	m	struct:log_message_baton	file:
+action	./subversion/libsvn_repos/load.c	/^  enum svn_node_action action;$/;"	m	struct:node_baton	file:
+action	./subversion/libsvn_subr/date.c	/^  enum rule_action action; \/* What action to take when the rule is matched *\/$/;"	m	file:
+action_code	./subversion/include/svn_delta.h	/^  enum svn_delta_action action_code;$/;"	m	struct:svn_txdelta_op_t
+activity_coll	./subversion/libsvn_ra_dav/options.c	/^  const svn_string_t *activity_coll;$/;"	m	file:
+activity_id	./subversion/mod_dav_svn/dav_svn.h	/^  const char *activity_id;$/;"	m
+activity_url	./subversion/libsvn_ra_dav/commit.c	/^  const char *activity_url;$/;"	m	file:
+add	./subversion/libsvn_client/add.c	/^add (const char *path, $/;"	f	file:
+add	./subversion/tests/libsvn_fs/skel-test.c	/^add (skel_t *element, skel_t *list)$/;"	f	file:
+add_change	./subversion/libsvn_fs/tree.c	/^add_change (svn_fs_t *fs,$/;"	f	file:
+add_child	./subversion/libsvn_ra_dav/commit.c	/^static svn_error_t * add_child(resource_t **child,$/;"	f	file:
+add_committable	./subversion/libsvn_client/commit_util.c	/^add_committable (apr_hash_t *committables,$/;"	f	file:
+add_dir_recursive	./subversion/libsvn_client/add.c	/^add_dir_recursive (const char *dirname,$/;"	f	file:
+add_directory	./subversion/include/svn_delta.h	/^  svn_error_t *(*add_directory) (const char *path,$/;"	m	struct:svn_delta_editor_t
+add_directory	./subversion/libsvn_client/commit_util.c	/^add_directory (const char *path,$/;"	f	file:
+add_directory	./subversion/libsvn_client/export.c	/^add_directory (const char *path,$/;"	f	file:
+add_directory	./subversion/libsvn_client/repos_diff.c	/^add_directory (const char *path,$/;"	f	file:
+add_directory	./subversion/libsvn_delta/cancel.c	/^add_directory (const char *path,$/;"	f	file:
+add_directory	./subversion/libsvn_repos/commit.c	/^add_directory (const char *path,$/;"	f	file:
+add_directory	./subversion/libsvn_repos/dump.c	/^add_directory (const char *path,$/;"	f	file:
+add_directory	./subversion/libsvn_repos/node_tree.c	/^add_directory (const char *path,$/;"	f	file:
+add_directory	./subversion/libsvn_wc/diff.c	/^add_directory (const char *path,$/;"	f	file:
+add_directory	./subversion/libsvn_wc/status.c	/^add_directory (const char *path,$/;"	f	file:
+add_directory	./subversion/libsvn_wc/update_editor.c	/^add_directory (const char *path,$/;"	f	file:
+add_externals	./subversion/libsvn_client/export.c	/^add_externals (apr_hash_t *externals,$/;"	f	file:
+add_file	./subversion/include/svn_delta.h	/^  svn_error_t *(*add_file) (const char *path,$/;"	m	struct:svn_delta_editor_t
+add_file	./subversion/libsvn_client/add.c	/^add_file (const char *path,$/;"	f	file:
+add_file	./subversion/libsvn_client/commit_util.c	/^add_file (const char *path,$/;"	f	file:
+add_file	./subversion/libsvn_client/export.c	/^add_file (const char *path,$/;"	f	file:
+add_file	./subversion/libsvn_client/repos_diff.c	/^add_file (const char *path,$/;"	f	file:
+add_file	./subversion/libsvn_delta/cancel.c	/^add_file (const char *path,$/;"	f	file:
+add_file	./subversion/libsvn_repos/commit.c	/^add_file (const char *path,$/;"	f	file:
+add_file	./subversion/libsvn_repos/dump.c	/^add_file (const char *path,$/;"	f	file:
+add_file	./subversion/libsvn_repos/node_tree.c	/^add_file (const char *path,$/;"	f	file:
+add_file	./subversion/libsvn_wc/diff.c	/^add_file (const char *path,$/;"	f	file:
+add_file	./subversion/libsvn_wc/status.c	/^add_file (const char *path,$/;"	f	file:
+add_file	./subversion/libsvn_wc/update_editor.c	/^add_file (const char *name,$/;"	f	file:
+add_file_or_dir	./subversion/libsvn_repos/delta.c	/^add_file_or_dir (struct context *c, void *dir_baton,$/;"	f	file:
+add_helper	./subversion/mod_dav_svn/update.c	/^static svn_error_t * add_helper(svn_boolean_t is_dir,$/;"	f	file:
+add_ignored	./subversion/libsvn_ra_dav/merge.c	/^static void add_ignored(merge_ctx_t *mc, const char *cdata)$/;"	f	file:
+add_item	./subversion/libsvn_delta/default_editor.c	/^add_item (const char *path,$/;"	f	file:
+add_node_props	./subversion/libsvn_ra_dav/fetch.c	/^add_node_props (report_baton_t *rb, apr_pool_t *pool)$/;"	f	file:
+add_open_helper	./subversion/libsvn_repos/node_tree.c	/^add_open_helper (const char *path,$/;"	f	file:
+add_or_open	./subversion/tests/svn_test_editor.c	/^add_or_open (const char *path,$/;"	f	file:
+add_or_open_file	./subversion/libsvn_wc/update_editor.c	/^add_or_open_file (const char *path,$/;"	f	file:
+add_prop_to_hash	./subversion/libsvn_ra_dav/fetch.c	/^add_prop_to_hash (void *baton,$/;"	f	file:
+add_props	./subversion/libsvn_ra_dav/fetch.c	/^static void add_props(apr_hash_t *props,$/;"	f	file:
+add_standard_changes	./subversion/tests/libsvn_fs/changes-test.c	/^add_standard_changes (svn_fs_t *fs,$/;"	f	file:
+add_to_path_map	./subversion/libsvn_repos/reporter.c	/^static void add_to_path_map(apr_hash_t *hash,$/;"	f	file:
+add_to_path_map	./subversion/mod_dav_svn/update.c	/^static void add_to_path_map(apr_hash_t *hash,$/;"	f	file:
+add_to_proplist	./subversion/libsvn_client/prop_commands.c	/^add_to_proplist (apr_array_header_t *prop_list,$/;"	f	file:
+add_valid_target	./subversion/libsvn_ra_dav/commit.c	/^add_valid_target (commit_ctx_t *cc,$/;"	f	file:
+added	./subversion/libsvn_client/repos_diff.c	/^  svn_boolean_t added;$/;"	m	struct:dir_baton	file:
+added	./subversion/libsvn_client/repos_diff.c	/^  svn_boolean_t added;$/;"	m	struct:file_baton	file:
+added	./subversion/libsvn_repos/dump.c	/^  svn_boolean_t added;$/;"	m	struct:dir_baton	file:
+added	./subversion/libsvn_wc/diff.c	/^  svn_boolean_t added;$/;"	m	struct:dir_baton	file:
+added	./subversion/libsvn_wc/diff.c	/^  svn_boolean_t added;$/;"	m	struct:file_baton	file:
+added	./subversion/libsvn_wc/status.c	/^  svn_boolean_t added;$/;"	m	struct:dir_baton	file:
+added	./subversion/libsvn_wc/status.c	/^  svn_boolean_t added;$/;"	m	struct:file_baton	file:
+added	./subversion/libsvn_wc/update_editor.c	/^  svn_boolean_t added;$/;"	m	struct:dir_baton	file:
+added	./subversion/libsvn_wc/update_editor.c	/^  svn_boolean_t added;$/;"	m	struct:file_baton	file:
+added	./subversion/mod_dav_svn/update.c	/^  svn_boolean_t added;               \/* File added? (Implies text_changed.) *\/$/;"	m	file:
+adjust_rel_targets	./subversion/libsvn_client/commit.c	/^adjust_rel_targets (const char **pbase_dir,$/;"	f	file:
+adm_access	./subversion/libsvn_client/commit_util.c	/^  svn_wc_adm_access_t *adm_access;     \/* top-level access baton *\/$/;"	m	struct:path_driver_cb_baton	file:
+adm_access	./subversion/libsvn_client/repos_diff.c	/^  svn_wc_adm_access_t *adm_access;$/;"	m	struct:edit_baton	file:
+adm_access	./subversion/libsvn_wc/adm_ops.c	/^  svn_wc_adm_access_t *adm_access;$/;"	m	struct:resolve_callback_baton	file:
+adm_access	./subversion/libsvn_wc/log.c	/^  svn_wc_adm_access_t *adm_access;  \/* the dir in which all this happens *\/$/;"	m	struct:log_runner	file:
+adm_access	./subversion/libsvn_wc/status.c	/^  svn_wc_adm_access_t *adm_access;$/;"	m	struct:edit_baton	file:
+adm_access	./subversion/libsvn_wc/update_editor.c	/^  svn_wc_adm_access_t *adm_access;$/;"	m	struct:edit_baton	file:
+adm_access_alloc	./subversion/libsvn_wc/lock.c	/^adm_access_alloc (enum svn_wc__adm_access_type type,$/;"	f	file:
+adm_ensure_set	./subversion/libsvn_wc/lock.c	/^adm_ensure_set (svn_wc_adm_access_t *adm_access)$/;"	f	file:
+aliases	./subversion/include/svn_opt.h	/^  const char *aliases[SVN_OPT_MAX_ALIASES];$/;"	m	struct:svn_opt_subcommand_desc_t
+alloc_block	./subversion/libsvn_delta/compose_delta.c	/^alloc_block (apr_pool_t *pool, alloc_block_t **free_list)$/;"	f	file:
+alloc_block_t	./subversion/libsvn_delta/compose_delta.c	/^typedef union alloc_block_t alloc_block_t;$/;"	t	file:
+alloc_block_t	./subversion/libsvn_delta/compose_delta.c	/^union alloc_block_t$/;"	u	file:
+alloc_entry	./subversion/libsvn_wc/entries.c	/^alloc_entry (apr_pool_t *pool)$/;"	f	file:
+alloc_range_index_node	./subversion/libsvn_delta/compose_delta.c	/^alloc_range_index_node (range_index_t *ndx,$/;"	f	file:
+alloc_range_list	./subversion/libsvn_delta/compose_delta.c	/^alloc_range_list (range_list_node_t **list,$/;"	f	file:
+allocate_env	./subversion/libsvn_fs/fs.c	/^allocate_env (svn_fs_t *fs)$/;"	f	file:
+allocate_txn_id	./subversion/libsvn_fs/bdb/txn-table.c	/^allocate_txn_id (const char **id_p,$/;"	f	file:
+allow	./subversion/mod_authz_svn/mod_authz_svn.c	/^    int allow;$/;"	m	struct:parse_authz_baton	file:
+already_exists	./subversion/libsvn_fs/tree.c	/^already_exists (svn_fs_root_t *root, const char *path)$/;"	f	file:
+amalgamate	./subversion/libsvn_subr/xml.c	/^amalgamate (const char **atts,$/;"	f	file:
+amt_read	./subversion/libsvn_subr/stream.c	/^  apr_size_t amt_read;$/;"	m	struct:string_stream_baton	file:
+analyze_status	./subversion/svnversion/main.c	/^analyze_status (void *baton,$/;"	f	file:
+ancestor_node	./subversion/libsvn_fs/tree.c	/^  dag_node_t *ancestor_node;$/;"	m	struct:merge_args	file:
+ancestor_path	./subversion/clients/cmdline/cl.h	/^  const char *ancestor_path;     \/* ### todo: who sets this? *\/$/;"	m	struct:svn_cl__opt_state_t
+anchor	./subversion/libsvn_wc/diff.c	/^  svn_wc_adm_access_t *anchor;$/;"	m	struct:edit_baton	file:
+anchor	./subversion/libsvn_wc/status.c	/^  const char *anchor;$/;"	m	struct:edit_baton	file:
+anchor	./subversion/libsvn_wc/update_editor.c	/^  const char *anchor;$/;"	m	struct:edit_baton	file:
+anchor	./subversion/mod_dav_svn/update.c	/^  const char *anchor;$/;"	m	file:
+anchor_path	./subversion/libsvn_wc/diff.c	/^  const char *anchor_path;$/;"	m	struct:edit_baton	file:
+anchor_status	./subversion/libsvn_wc/status.c	/^  svn_wc_status_t *anchor_status;$/;"	m	struct:edit_baton	file:
+anonymous	./subversion/mod_authz_svn/mod_authz_svn.c	/^    int anonymous;$/;"	m	file:
+append_encoded_int	./subversion/libsvn_delta/svndiff.c	/^append_encoded_int (svn_stringbuf_t *header, svn_filesize_t val,$/;"	f	file:
+append_prop_conflict	./subversion/libsvn_wc/props.c	/^append_prop_conflict (apr_file_t *fp,$/;"	f	file:
+apply_baton	./subversion/libsvn_client/export.c	/^  void *apply_baton;$/;"	m	struct:handler_baton	file:
+apply_baton	./subversion/libsvn_client/repos_diff.c	/^  void *apply_baton;$/;"	m	struct:file_baton	file:
+apply_baton	./subversion/libsvn_delta/text_delta.c	/^struct apply_baton {$/;"	s	file:
+apply_baton	./subversion/libsvn_wc/diff.c	/^  void *apply_baton;$/;"	m	struct:file_baton	file:
+apply_baton	./subversion/libsvn_wc/update_editor.c	/^  void *apply_baton;$/;"	m	struct:handler_baton	file:
+apply_handler	./subversion/libsvn_client/export.c	/^  svn_txdelta_window_handler_t apply_handler;$/;"	m	struct:handler_baton	file:
+apply_handler	./subversion/libsvn_client/repos_diff.c	/^  svn_txdelta_window_handler_t apply_handler;$/;"	m	struct:file_baton	file:
+apply_handler	./subversion/libsvn_wc/diff.c	/^  svn_txdelta_window_handler_t apply_handler;$/;"	m	struct:file_baton	file:
+apply_handler	./subversion/libsvn_wc/update_editor.c	/^  svn_txdelta_window_handler_t apply_handler;$/;"	m	struct:handler_baton	file:
+apply_log_message	./subversion/libsvn_ra_dav/commit.c	/^static svn_error_t * apply_log_message(commit_ctx_t *cc,$/;"	f	file:
+apply_textdelta	./subversion/include/svn_delta.h	/^  svn_error_t *(*apply_textdelta) (void *file_baton,$/;"	m	struct:svn_delta_editor_t
+apply_textdelta	./subversion/libsvn_client/commit_util.c	/^apply_textdelta (void *file_baton,$/;"	f	file:
+apply_textdelta	./subversion/libsvn_client/export.c	/^apply_textdelta (void *file_baton,$/;"	f	file:
+apply_textdelta	./subversion/libsvn_client/repos_diff.c	/^apply_textdelta (void *file_baton,$/;"	f	file:
+apply_textdelta	./subversion/libsvn_delta/cancel.c	/^apply_textdelta (void *file_baton,$/;"	f	file:
+apply_textdelta	./subversion/libsvn_delta/default_editor.c	/^apply_textdelta (void *file_baton,$/;"	f	file:
+apply_textdelta	./subversion/libsvn_repos/commit.c	/^apply_textdelta (void *file_baton,$/;"	f	file:
+apply_textdelta	./subversion/libsvn_repos/node_tree.c	/^apply_textdelta (void *file_baton, $/;"	f	file:
+apply_textdelta	./subversion/libsvn_wc/diff.c	/^apply_textdelta (void *file_baton,$/;"	f	file:
+apply_textdelta	./subversion/libsvn_wc/status.c	/^apply_textdelta (void *file_baton, $/;"	f	file:
+apply_textdelta	./subversion/libsvn_wc/update_editor.c	/^apply_textdelta (void *file_baton, $/;"	f	file:
+apply_window	./subversion/libsvn_delta/text_delta.c	/^apply_window (svn_txdelta_window_t *window, void *baton)$/;"	f	file:
+apr_dir_is_empty	./subversion/libsvn_subr/io.c	/^apr_dir_is_empty (const char *dir, apr_pool_t *pool)$/;"	f	file:
+apr_err	./subversion/include/svn_types.h	/^  apr_status_t apr_err;$/;"	m	struct:svn_error_t
+apr_free_cleanup	./subversion/libsvn_fs/bdb/dbt.c	/^apr_free_cleanup (void *arg)$/;"	f	file:
+arg1	./subversion/svnlook/main.c	/^  const char *arg1;        \/* Usually an fs path, a propname, or NULL. *\/$/;"	m	struct:svnlook_opt_state	file:
+arg2	./subversion/svnlook/main.c	/^  const char *arg2;        \/* Usually an fs path or NULL. *\/$/;"	m	struct:svnlook_opt_state	file:
+array_push_str	./subversion/libsvn_subr/opt.c	/^array_push_str (apr_array_header_t *array,$/;"	f	file:
+ary_exact_match	./subversion/svndumpfilter/main.c	/^ary_exact_match (apr_array_header_t *estlist, const char *path)$/;"	f	file:
+ary_prefix_match	./subversion/svndumpfilter/main.c	/^ary_prefix_match (apr_array_header_t *pfxlist, const char *path)$/;"	f	file:
+ascii_cert	./subversion/include/svn_auth.h	/^  const char *ascii_cert;$/;"	m	struct:svn_auth_ssl_server_cert_info_t
+assemble_history	./subversion/libsvn_fs/tree.c	/^assemble_history (svn_fs_t *fs,$/;"	f	file:
+assemble_status	./subversion/libsvn_wc/status.c	/^assemble_status (svn_wc_status_t **status,$/;"	f	file:
+assign_rsrc_url	./subversion/libsvn_ra_dav/props.c	/^static void assign_rsrc_url(svn_ra_dav_resource_t *rsrc, $/;"	f	file:
+attempt_deletion	./subversion/libsvn_wc/adm_ops.c	/^attempt_deletion (const char *parent_dir,$/;"	f	file:
+auth	./subversion/svnserve/serve.c	/^static svn_error_t *auth(svn_ra_svn_conn_t *conn, apr_pool_t *pool,$/;"	f	file:
+auth_baton	./subversion/include/svn_client.h	/^  svn_auth_baton_t *auth_baton;$/;"	m	struct:svn_client_ctx_t
+auth_baton	./subversion/include/svn_ra.h	/^  svn_auth_baton_t *auth_baton;$/;"	m	struct:svn_ra_callbacks_t
+auth_baton	./subversion/libsvn_ra_svn/client.c	/^  svn_auth_baton_t *auth_baton;$/;"	m	file:
+auth_baton	./subversion/libsvn_subr/auth.c	/^  svn_auth_baton_t *auth_baton; \/* the original auth_baton. *\/$/;"	m	struct:svn_auth_iterstate_t	file:
+auth_checker	./subversion/mod_authz_svn/mod_authz_svn.c	/^static int auth_checker(request_rec *r)$/;"	f	file:
+auth_file_path	./subversion/libsvn_subr/config_auth.c	/^auth_file_path (const char **path,$/;"	f	file:
+auth_iterstate	./subversion/libsvn_ra_dav/ra_dav.h	/^  svn_auth_iterstate_t *auth_iterstate; \/* state of authentication retries *\/$/;"	m
+auth_password	./subversion/clients/cmdline/cl.h	/^  const char *auth_password;     \/* auth password *\/ \/* UTF-8! *\/$/;"	m	struct:svn_cl__opt_state_t
+auth_request	./subversion/svnserve/serve.c	/^static svn_error_t *auth_request(svn_ra_svn_conn_t *conn, apr_pool_t *pool,$/;"	f	file:
+auth_response	./subversion/libsvn_ra_svn/client.c	/^static svn_error_t *auth_response(svn_ra_svn_conn_t *conn, apr_pool_t *pool,$/;"	f	file:
+auth_username	./subversion/clients/cmdline/cl.h	/^  const char *auth_username;     \/* auth username *\/ \/* UTF-8! *\/$/;"	m	struct:svn_cl__opt_state_t
+authn_type	./subversion/svnserve/serve.c	/^enum authn_type { UNAUTHENTICATED, AUTHENTICATED };$/;"	g	file:
+author	./subversion/include/svn_client.h	/^  const char *author;$/;"	m	struct:svn_client_commit_info_t
+author	./subversion/include/svn_subst.h	/^  const svn_string_t *author;$/;"	m	struct:svn_subst_keywords_t
+author	./subversion/libsvn_client/blame.c	/^  const char *author;    \/* the author of the revision *\/$/;"	m	struct:rev	file:
+author	./subversion/libsvn_client/export.c	/^  const char *author;$/;"	m	struct:file_baton	file:
+author	./subversion/libsvn_ra_dav/log.c	/^  const char *author;$/;"	m	struct:log_baton	file:
+author	./subversion/svnserve/serve.c	/^  const char **author;$/;"	m	file:
+authoritative	./subversion/mod_authz_svn/mod_authz_svn.c	/^    int authoritative;$/;"	m	file:
+authz_read_baton	./subversion/libsvn_repos/delta.c	/^  void *authz_read_baton;$/;"	m	struct:context	file:
+authz_read_baton	./subversion/libsvn_repos/reporter.c	/^  void *authz_read_baton;$/;"	m	struct:report_baton_t	file:
+authz_read_baton	./subversion/mod_dav_svn/deadprops.c	/^  void *authz_read_baton;$/;"	m	struct:dav_db	file:
+authz_read_func	./subversion/libsvn_repos/delta.c	/^  svn_repos_authz_func_t authz_read_func;$/;"	m	struct:context	file:
+authz_read_func	./subversion/libsvn_repos/reporter.c	/^  svn_repos_authz_func_t authz_read_func;$/;"	m	struct:report_baton_t	file:
+authz_read_func	./subversion/mod_dav_svn/deadprops.c	/^  svn_repos_authz_func_t authz_read_func;$/;"	m	struct:dav_db	file:
+authz_root_check	./subversion/libsvn_repos/delta.c	/^authz_root_check (svn_fs_root_t *root,$/;"	f	file:
+authz_svn_cmds	./subversion/mod_authz_svn/mod_authz_svn.c	/^static const command_rec authz_svn_cmds[] =$/;"	v	file:
+authz_svn_config_rec	./subversion/mod_authz_svn/mod_authz_svn.c	/^} authz_svn_config_rec;$/;"	t	file:
+authz_svn_module	./subversion/mod_authz_svn/mod_authz_svn.c	/^module AP_MODULE_DECLARE_DATA authz_svn_module =$/;"	v
+authz_svn_module	./subversion/mod_authz_svn/mod_authz_svn.c	/^module AP_MODULE_DECLARE_DATA authz_svn_module;$/;"	v
+auto_checked_out	./subversion/mod_dav_svn/dav_svn.h	/^  svn_boolean_t auto_checked_out;$/;"	m	struct:dav_resource_private
+auto_props_baton_t	./subversion/libsvn_client/add.c	/^} auto_props_baton_t;$/;"	t	file:
+auto_props_enumerator	./subversion/libsvn_client/add.c	/^auto_props_enumerator (const char *name,$/;"	f	file:
+autoprops	./subversion/clients/cmdline/cl.h	/^  svn_boolean_t autoprops;       \/* enable automatic properties *\/$/;"	m	struct:svn_cl__opt_state_t
+autoversioning	./subversion/mod_dav_svn/dav_svn.h	/^  svn_boolean_t autoversioning;$/;"	m
+autoversioning	./subversion/mod_dav_svn/mod_dav_svn.c	/^  svn_boolean_t autoversioning; \/* whether autoversioning is active *\/$/;"	m	file:
+avail	./subversion/libsvn_client/blame.c	/^  struct blame *avail; \/* linked list of free blame chunks *\/$/;"	m	struct:diff_baton	file:
+avail_reports	./subversion/mod_dav_svn/version.c	/^static const dav_report_elem avail_reports[] = {$/;"	v	file:
+b	./subversion/tests/libsvn_subr/string-test.c	/^svn_stringbuf_t *a = NULL, *b = NULL, *c = NULL;$/;"	v
+base	./subversion/libsvn_subr/date.c	/^  apr_time_exp_t base;$/;"	m	file:
+base64_decoder	./subversion/libsvn_ra_dav/fetch.c	/^  svn_stream_t *base64_decoder;$/;"	m	file:
+base64tab	./subversion/libsvn_subr/svn_base64.c	/^static const char base64tab[] = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"$/;"	v	file:
+base_access	./subversion/libsvn_client/client.h	/^  svn_wc_adm_access_t *base_access;$/;"	m
+base_access	./subversion/libsvn_client/prop_commands.c	/^  svn_wc_adm_access_t *base_access;  \/* Access for the tree being walked. *\/$/;"	m	struct:propget_walk_baton	file:
+base_access	./subversion/libsvn_client/prop_commands.c	/^  svn_wc_adm_access_t *base_access;  \/* Access for the tree being walked. *\/$/;"	m	struct:proplist_walk_baton	file:
+base_access	./subversion/libsvn_client/prop_commands.c	/^  svn_wc_adm_access_t *base_access;  \/* Access for the tree being walked. *\/$/;"	m	struct:propset_walk_baton	file:
+base_access	./subversion/libsvn_client/ra.c	/^  svn_wc_adm_access_t *base_access;$/;"	m	struct:invalidate_wcprop_walk_baton	file:
+base_checksum	./subversion/libsvn_fs/tree.c	/^  const char *base_checksum;$/;"	m	struct:txdelta_baton_t	file:
+base_checksum	./subversion/libsvn_ra_dav/commit.c	/^  const char *base_checksum;    \/* hex md5 of base text; may be null *\/$/;"	m	file:
+base_checksum	./subversion/mod_dav_svn/dav_svn.h	/^  const char *base_checksum;$/;"	m	struct:dav_resource_private
+base_checksum	./subversion/mod_dav_svn/update.c	/^  const char *base_checksum;   \/* base_checksum (from apply_textdelta) *\/$/;"	m	file:
+base_dir	./subversion/clients/cmdline/util.c	/^  const char *base_dir; \/* the base directory for an external edit. UTF-8! *\/$/;"	m	struct:log_msg_baton	file:
+base_dir	./subversion/libsvn_client/client.h	/^  const char *base_dir;$/;"	m
+base_href	./subversion/libsvn_ra_dav/merge.c	/^  const char *base_href;$/;"	m	file:
+base_id	./subversion/libsvn_fs/fs.h	/^  const svn_fs_id_t *base_id;$/;"	m
+base_id	./subversion/libsvn_fs/tree.c	/^  const svn_fs_id_t *base_id;$/;"	m	struct:txn_deltify_args	file:
+base_len	./subversion/libsvn_ra_dav/merge.c	/^  apr_size_t base_len;$/;"	m	file:
+base_path	./subversion/libsvn_repos/commit.c	/^  const char *base_path;$/;"	m	struct:edit_baton	file:
+base_path	./subversion/libsvn_repos/reporter.c	/^  const char *base_path;$/;"	m	struct:report_baton_t	file:
+base_path	./subversion/mod_authz_svn/mod_authz_svn.c	/^    const char *base_path;$/;"	m	file:
+base_rev	./subversion/libsvn_fs/revs-txns.h	/^  svn_revnum_t base_rev;$/;"	m	struct:svn_fs_txn_t
+base_rev	./subversion/libsvn_repos/commit.c	/^  svn_revnum_t base_rev;        \/* the revision I'm based on  *\/$/;"	m	struct:dir_baton	file:
+base_root	./subversion/libsvn_repos/node_tree.c	/^  svn_fs_root_t *base_root;$/;"	m	struct:edit_baton	file:
+base_url	./subversion/mod_dav_svn/dav_svn.h	/^  const char *base_url;$/;"	m
+baseline_props	./subversion/libsvn_ra_dav/props.c	/^static const ne_propname baseline_props[] =$/;"	v	file:
+baseprops	./subversion/libsvn_wc/diff.c	/^  apr_hash_t *baseprops;$/;"	m	struct:dir_baton	file:
+baseprops	./subversion/libsvn_wc/diff.c	/^  apr_hash_t *baseprops;$/;"	m	struct:file_baton	file:
+basic_commit	./subversion/tests/libsvn_fs/fs-test.c	/^basic_commit (const char **msg,$/;"	f	file:
+baton	./subversion/bindings/swig/swigutil_java.c	/^  jobject baton;        \/* the dir\/file baton (or NULL for edit baton) *\/$/;"	m	file:
+baton	./subversion/bindings/swig/swigutil_pl.c	/^    SV *baton;      \/* the dir\/file baton (or NULL for edit baton) *\/$/;"	m	file:
+baton	./subversion/bindings/swig/swigutil_py.c	/^  PyObject *baton;      \/* the dir\/file baton (or NULL for edit baton) *\/$/;"	m	file:
+baton	./subversion/libsvn_fs/trail.c	/^  void *baton;$/;"	m	struct:undo	file:
+baton	./subversion/libsvn_ra_dav/fetch.c	/^  void *baton;$/;"	m	file:
+baton	./subversion/libsvn_ra_svn/editor.c	/^  void *baton;$/;"	m	file:
+baton	./subversion/libsvn_ra_svn/editorp.c	/^  void *baton;$/;"	m	file:
+baton	./subversion/libsvn_subr/stream.c	/^  void *baton;$/;"	m	struct:svn_stream_t	file:
+baton	./subversion/libsvn_subr/xml.c	/^  void *baton;$/;"	m	struct:svn_xml_parser_t	file:
+baton_apr	./subversion/libsvn_subr/stream.c	/^struct baton_apr {$/;"	s	file:
+bb	./subversion/mod_dav_svn/log.c	/^  apr_bucket_brigade *bb;$/;"	m	struct:log_receiver_baton	file:
+bb	./subversion/mod_dav_svn/update.c	/^  apr_bucket_brigade *bb;$/;"	m	file:
+bb	./subversion/mod_dav_svn/update.c	/^  apr_bucket_brigade *bb;$/;"	m	struct:brigade_write_baton	file:
+bdb_err_to_apr_err	./subversion/libsvn_fs/bdb/bdb-err.c	/^bdb_err_to_apr_err (int db_err)$/;"	f	file:
+bdb_log_keep	./subversion/svnadmin/main.c	/^  svn_boolean_t bdb_log_keep;                       \/* --bdb-log-keep *\/$/;"	m	struct:svnadmin_opt_state	file:
+bdb_txn_nosync	./subversion/svnadmin/main.c	/^  svn_boolean_t bdb_txn_nosync;                     \/* --bdb-txn-nosync *\/$/;"	m	struct:svnadmin_opt_state	file:
+bdb_write_config	./subversion/libsvn_fs/fs.c	/^bdb_write_config  (svn_fs_t *fs)$/;"	f	file:
+begin	./subversion/bindings/com/MarshalArray.h	/^        begin()$/;"	f	class:CComDynamicMarshalledUnkArray
+begin_trail	./subversion/libsvn_fs/trail.c	/^begin_trail (trail_t **trail_p,$/;"	f	file:
+begin_txn	./subversion/libsvn_repos/reporter.c	/^begin_txn (report_baton_t *rbaton)$/;"	f	file:
+begin_txn_args	./subversion/libsvn_fs/revs-txns.c	/^struct begin_txn_args$/;"	s	file:
+berkeley_error_handler	./subversion/tests/fs-helpers.c	/^berkeley_error_handler (const char *errpfx, char *msg)$/;"	f	file:
+berkeley_error_handler	./subversion/tests/libsvn_fs/fs-test.c	/^berkeley_error_handler (const char *errpfx, char *msg)$/;"	f	file:
+bigstring1	./subversion/tests/libsvn_fs/strings-reps-test.c	/^static const char *bigstring1 =$/;"	v	file:
+bigstring2	./subversion/tests/libsvn_fs/strings-reps-test.c	/^static const char *bigstring2 =$/;"	v	file:
+bigstring3	./subversion/tests/libsvn_fs/strings-reps-test.c	/^static const char *bigstring3 =$/;"	v	file:
+blame	./subversion/libsvn_client/blame.c	/^  struct blame *blame; \/* linked list of blame chunks *\/$/;"	m	struct:diff_baton	file:
+blame	./subversion/libsvn_client/blame.c	/^struct blame$/;"	s	file:
+blame_adjust	./subversion/libsvn_client/blame.c	/^blame_adjust (struct blame *blame, apr_off_t adjust)$/;"	f	file:
+blame_create	./subversion/libsvn_client/blame.c	/^blame_create (struct diff_baton *baton, struct rev *rev, apr_off_t start)$/;"	f	file:
+blame_delete_range	./subversion/libsvn_client/blame.c	/^blame_delete_range (struct diff_baton *db, apr_off_t start, apr_off_t length)$/;"	f	file:
+blame_destroy	./subversion/libsvn_client/blame.c	/^blame_destroy (struct diff_baton *baton, struct blame *blame)$/;"	f	file:
+blame_find	./subversion/libsvn_client/blame.c	/^blame_find (struct blame *blame, apr_off_t off)$/;"	f	file:
+blame_insert_range	./subversion/libsvn_client/blame.c	/^blame_insert_range (struct diff_baton *db, apr_off_t start, apr_off_t length)$/;"	f	file:
+blame_receiver	./subversion/clients/cmdline/blame-cmd.c	/^blame_receiver (void *baton,$/;"	f	file:
+block_baton	./subversion/libsvn_ra_svn/ra_svn.h	/^  void *block_baton;$/;"	m	struct:svn_ra_svn_conn_st
+block_handler	./subversion/libsvn_ra_svn/ra_svn.h	/^  ra_svn_block_handler_t block_handler;$/;"	m	struct:svn_ra_svn_conn_st
+blocked_write	./subversion/libsvn_ra_svn/editorp.c	/^static svn_error_t *blocked_write(svn_ra_svn_conn_t *conn, apr_pool_t *pool,$/;"	f	file:
+blocksize	./subversion/include/svn_string.h	/^  apr_size_t blocksize;$/;"	m	struct:svn_stringbuf_t
+body	./subversion/svndumpfilter/main.c	/^  svn_stringbuf_t *body;$/;"	m	struct:node_baton_t	file:
+body	./subversion/svndumpfilter/main.c	/^  svn_stringbuf_t *body;$/;"	m	struct:revision_baton_t	file:
+body_stream	./subversion/svndumpfilter/main.c	/^  svn_stream_t    *body_stream;$/;"	m	struct:node_baton_t	file:
+body_stream	./subversion/svndumpfilter/main.c	/^  svn_stream_t    *body_stream;$/;"	m	struct:revision_baton_t	file:
+branch_test	./subversion/tests/libsvn_fs/fs-test.c	/^branch_test (const char **msg,$/;"	f	file:
+brigade_write_baton	./subversion/mod_dav_svn/update.c	/^struct brigade_write_baton$/;"	s	file:
+brigade_write_fn	./subversion/mod_dav_svn/update.c	/^static svn_error_t * brigade_write_fn(void *baton,$/;"	f	file:
+buckets	./subversion/libsvn_delta/vdelta.c	/^  hash_slot_t **buckets;        \/* Bucket array. *\/$/;"	m	struct:hash_table_t	file:
+buf	./subversion/libsvn_delta/text_delta.c	/^  char *buf;                    \/* Buffer for vdelta data. *\/$/;"	m	struct:svn_txdelta_stream_t	file:
+buf	./subversion/libsvn_fs/reps-strings.c	/^  char *buf;                   \/* Where to put what we read.   *\/$/;"	m	struct:read_rep_args	file:
+buf	./subversion/libsvn_fs/reps-strings.c	/^  const char *buf;              \/* Data.              *\/$/;"	m	struct:write_rep_args	file:
+buf	./subversion/libsvn_subr/quoprint.c	/^  char buf[3];                  \/* Bytes waiting to be decoded *\/$/;"	m	struct:decode_baton	file:
+buf	./subversion/libsvn_subr/svn_base64.c	/^  unsigned char buf[3];         \/* Bytes waiting to be encoded *\/$/;"	m	struct:encode_baton	file:
+buf	./subversion/libsvn_subr/svn_base64.c	/^  unsigned char buf[4];         \/* Bytes waiting to be decoded *\/$/;"	m	struct:decode_baton	file:
+buffer	./subversion/libsvn_delta/svndiff.c	/^  svn_stringbuf_t *buffer;$/;"	m	struct:decode_baton	file:
+buffer	./subversion/libsvn_diff/diff_file.c	/^  char        buffer[2][4096];$/;"	m	struct:svn_diff__file_output_baton_t	file:
+buffer	./subversion/libsvn_diff/diff_file.c	/^  char       *buffer[3];$/;"	m	struct:svn_diff3__file_output_baton_t	file:
+buffer	./subversion/libsvn_diff/diff_file.c	/^  char *buffer[4];$/;"	m	struct:svn_diff__file_baton_t	file:
+buffer	./subversion/libsvn_repos/dump.c	/^  char buffer[SVN_STREAM_CHUNK_SIZE];$/;"	m	struct:edit_baton	file:
+buflen	./subversion/libsvn_subr/quoprint.c	/^  int buflen;                   \/* Number of bytes waiting *\/$/;"	m	struct:decode_baton	file:
+buflen	./subversion/libsvn_subr/svn_base64.c	/^  int buflen;                   \/* Number of bytes waiting *\/$/;"	m	struct:decode_baton	file:
+buflen	./subversion/libsvn_subr/svn_base64.c	/^  int buflen;                   \/* Number of bytes waiting *\/$/;"	m	struct:encode_baton	file:
+bufsize	./subversion/libsvn_repos/dump.c	/^  apr_size_t bufsize;$/;"	m	struct:edit_baton	file:
+build_atom	./subversion/tests/libsvn_fs/skel-test.c	/^build_atom (apr_size_t len, char *data, apr_pool_t *pool)$/;"	f	file:
+build_range_list	./subversion/libsvn_delta/compose_delta.c	/^build_range_list (apr_size_t offset, apr_size_t limit, range_index_t *ndx)$/;"	f	file:
+bump_dir_info	./subversion/libsvn_wc/update_editor.c	/^struct bump_dir_info$/;"	s	file:
+bump_info	./subversion/libsvn_wc/update_editor.c	/^  struct bump_dir_info *bump_info;$/;"	m	struct:dir_baton	file:
+bump_info	./subversion/libsvn_wc/update_editor.c	/^  struct bump_dir_info *bump_info;$/;"	m	struct:file_baton	file:
+bump_resource	./subversion/libsvn_ra_dav/merge.c	/^static svn_error_t *bump_resource(merge_ctx_t *mc,$/;"	f	file:
+bypass_hooks	./subversion/svnadmin/main.c	/^  svn_boolean_t bypass_hooks;                       \/* --bypass-hooks *\/$/;"	m	struct:svnadmin_opt_state	file:
+c	./subversion/tests/libsvn_subr/string-test.c	/^svn_stringbuf_t *a = NULL, *b = NULL, *c = NULL;$/;"	v
+cache_key	./subversion/libsvn_subr/auth.c	/^  const char *cache_key;        \/* key to use in auth_baton's creds_cache *\/$/;"	m	struct:svn_auth_iterstate_t	file:
+cache_node_revision	./subversion/libsvn_fs/dag.c	/^cache_node_revision (dag_node_t *node,$/;"	f	file:
+call_functions_with_unopened_fs	./subversion/tests/libsvn_fs/fs-test.c	/^call_functions_with_unopened_fs (const char **msg,$/;"	f	file:
+callback	./subversion/bindings/swig/swigutil_java.c	/^  jobject callback;     \/* Object to call back *\/$/;"	m	file:
+callback	./subversion/libsvn_ra_dav/commit.c	/^  svn_commit_callback_t callback;$/;"	m	file:
+callback	./subversion/libsvn_ra_local/ra_plugin.c	/^  svn_commit_callback_t callback;  \/* the original callback *\/$/;"	m	struct:deltify_etc_baton	file:
+callback	./subversion/libsvn_ra_svn/client.c	/^  svn_commit_callback_t callback;$/;"	m	file:
+callback	./subversion/libsvn_ra_svn/editor.c	/^  svn_ra_svn_edit_callback callback;    \/* Called on successful completion. *\/$/;"	m	file:
+callback	./subversion/libsvn_ra_svn/editorp.c	/^  svn_ra_svn_edit_callback callback;    \/* Called on successful completion. *\/$/;"	m	file:
+callback	./subversion/libsvn_repos/commit.c	/^  svn_commit_callback_t callback;$/;"	m	struct:edit_baton	file:
+callback_baton	./subversion/libsvn_ra_dav/commit.c	/^  void *callback_baton;$/;"	m	file:
+callback_baton	./subversion/libsvn_ra_dav/ra_dav.h	/^  void *callback_baton;$/;"	m
+callback_baton	./subversion/libsvn_ra_local/ra_local.h	/^  void *callback_baton;$/;"	m	struct:svn_ra_local__session_baton_t
+callback_baton	./subversion/libsvn_ra_local/ra_plugin.c	/^  void *callback_baton;            \/* the original callback's baton *\/$/;"	m	struct:deltify_etc_baton	file:
+callback_baton	./subversion/libsvn_ra_svn/client.c	/^  void *callback_baton;$/;"	m	file:
+callback_baton	./subversion/libsvn_ra_svn/editor.c	/^  void *callback_baton;$/;"	m	file:
+callback_baton	./subversion/libsvn_ra_svn/editorp.c	/^  void *callback_baton;$/;"	m	file:
+callback_baton	./subversion/libsvn_repos/commit.c	/^  void *callback_baton;$/;"	m	struct:edit_baton	file:
+callback_baton	./subversion/libsvn_wc/diff.c	/^  void *callback_baton;$/;"	m	struct:edit_baton	file:
+callback_baton_cleanup_handler	./subversion/bindings/swig/swigutil_java.c	/^static apr_status_t callback_baton_cleanup_handler(void *baton)$/;"	f	file:
+callback_baton_t	./subversion/bindings/swig/swigutil_java.c	/^} callback_baton_t;$/;"	t	file:
+callbacks	./subversion/libsvn_ra_dav/ra_dav.h	/^  const svn_ra_callbacks_t *callbacks;  \/* callbacks to get auth data *\/$/;"	m
+callbacks	./subversion/libsvn_ra_local/ra_local.h	/^  const svn_ra_callbacks_t *callbacks;$/;"	m	struct:svn_ra_local__session_baton_t
+callbacks	./subversion/libsvn_wc/diff.c	/^  const svn_wc_diff_callbacks_t *callbacks;$/;"	m	struct:edit_baton	file:
+cancel	./subversion/svnversion/main.c	/^cancel (void *baton)$/;"	f	file:
+cancel_baton	./subversion/clients/cmdline/log-cmd.c	/^  void *cancel_baton;$/;"	m	struct:log_receiver_baton	file:
+cancel_baton	./subversion/include/svn_client.h	/^  void *cancel_baton;$/;"	m	struct:svn_client_ctx_t
+cancel_baton	./subversion/libsvn_client/blame.c	/^  void *cancel_baton;            \/* cancellation baton *\/$/;"	m	struct:log_message_baton	file:
+cancel_baton	./subversion/libsvn_delta/cancel.c	/^  void *cancel_baton;$/;"	m	struct:edit_baton	file:
+cancel_baton	./subversion/libsvn_wc/status.c	/^  void *cancel_baton;$/;"	m	struct:edit_baton	file:
+cancel_baton	./subversion/libsvn_wc/update_editor.c	/^  void *cancel_baton;$/;"	m	struct:edit_baton	file:
+cancel_func	./subversion/clients/cmdline/log-cmd.c	/^  svn_cancel_func_t cancel_func;$/;"	m	struct:log_receiver_baton	file:
+cancel_func	./subversion/include/svn_client.h	/^  svn_cancel_func_t cancel_func;$/;"	m	struct:svn_client_ctx_t
+cancel_func	./subversion/libsvn_client/blame.c	/^  svn_cancel_func_t cancel_func; \/* cancellation callback *\/ $/;"	m	struct:log_message_baton	file:
+cancel_func	./subversion/libsvn_delta/cancel.c	/^  svn_cancel_func_t cancel_func;$/;"	m	struct:edit_baton	file:
+cancel_func	./subversion/libsvn_wc/status.c	/^  svn_cancel_func_t cancel_func;$/;"	m	struct:edit_baton	file:
+cancel_func	./subversion/libsvn_wc/update_editor.c	/^  svn_cancel_func_t cancel_func;$/;"	m	struct:edit_baton	file:
+cancelled	./subversion/clients/cmdline/main.c	/^static volatile sig_atomic_t cancelled = FALSE;$/;"	v	file:
+cancelled	./subversion/svnadmin/main.c	/^static volatile sig_atomic_t cancelled = FALSE;$/;"	v	file:
+cancelled	./subversion/svnlook/main.c	/^static volatile sig_atomic_t cancelled = FALSE;$/;"	v	file:
+canonicalize_abspath	./subversion/tests/libsvn_fs/fs-test.c	/^canonicalize_abspath (const char **msg,$/;"	f	file:
+capabilities	./subversion/libsvn_ra_svn/ra_svn.h	/^  apr_hash_t *capabilities;$/;"	m	struct:svn_ra_svn_conn_st
+cb_baton	./subversion/libsvn_ra_dav/commit.c	/^  void *cb_baton;$/;"	m	file:
+cb_baton	./subversion/libsvn_ra_dav/merge.c	/^  void *cb_baton;  \/* baton for above *\/$/;"	m	file:
+cc	./subversion/libsvn_ra_dav/commit.c	/^  commit_ctx_t *cc;$/;"	m	file:
+cdata_accum	./subversion/libsvn_ra_dav/fetch.c	/^  svn_stringbuf_t *cdata_accum;$/;"	m	file:
+cdata_accum	./subversion/libsvn_ra_dav/util.c	/^  svn_stringbuf_t *cdata_accum;              \/* stringbuffer for CDATA *\/$/;"	m	file:
+cdata_handler	./subversion/libsvn_ra_dav/fetch.c	/^static int cdata_handler(void *userdata, int state,$/;"	f	file:
+cert_file	./subversion/include/svn_auth.h	/^  const char *cert_file;$/;"	m	struct:svn_auth_cred_ssl_client_cert_t
+cfg	./subversion/libsvn_subr/config_file.c	/^  svn_config_t *cfg;$/;"	m	struct:parse_context_t	file:
+cfg	./subversion/svnserve/serve.c	/^  svn_config_t *cfg;       \/* Parsed repository svnserve.conf *\/$/;"	m	file:
+cfg_option_t	./subversion/libsvn_subr/config.c	/^struct cfg_option_t$/;"	s	file:
+cfg_option_t	./subversion/libsvn_subr/config.c	/^typedef struct cfg_option_t cfg_option_t;$/;"	t	file:
+cfg_section_t	./subversion/libsvn_subr/config.c	/^struct cfg_section_t$/;"	s	file:
+cfg_section_t	./subversion/libsvn_subr/config.c	/^typedef struct cfg_section_t cfg_section_t;$/;"	t	file:
+change	./subversion/tests/libsvn_fs/changes-test.c	/^  svn_fs__change_t *change;$/;"	m	struct:changes_args	file:
+change_dir_prop	./subversion/include/svn_delta.h	/^  svn_error_t *(*change_dir_prop) (void *dir_baton,$/;"	m	struct:svn_delta_editor_t
+change_dir_prop	./subversion/libsvn_client/commit_util.c	/^change_dir_prop (void *dir_baton,$/;"	f	file:
+change_dir_prop	./subversion/libsvn_client/export.c	/^change_dir_prop (void *dir_baton,$/;"	f	file:
+change_dir_prop	./subversion/libsvn_client/repos_diff.c	/^change_dir_prop (void *dir_baton,$/;"	f	file:
+change_dir_prop	./subversion/libsvn_delta/cancel.c	/^change_dir_prop (void *dir_baton,$/;"	f	file:
+change_dir_prop	./subversion/libsvn_repos/commit.c	/^change_dir_prop (void *dir_baton,$/;"	f	file:
+change_dir_prop	./subversion/libsvn_repos/delta.c	/^change_dir_prop (struct context *c, $/;"	f	file:
+change_dir_prop	./subversion/libsvn_repos/dump.c	/^change_dir_prop (void *parent_baton,$/;"	f	file:
+change_dir_prop	./subversion/libsvn_wc/diff.c	/^change_dir_prop (void *dir_baton,$/;"	f	file:
+change_dir_prop	./subversion/libsvn_wc/status.c	/^change_dir_prop (void *dir_baton,$/;"	f	file:
+change_dir_prop	./subversion/libsvn_wc/update_editor.c	/^change_dir_prop (void *dir_baton,$/;"	f	file:
+change_file_prop	./subversion/include/svn_delta.h	/^  svn_error_t *(*change_file_prop) (void *file_baton,$/;"	m	struct:svn_delta_editor_t
+change_file_prop	./subversion/libsvn_client/commit_util.c	/^change_file_prop (void *file_baton,$/;"	f	file:
+change_file_prop	./subversion/libsvn_client/export.c	/^change_file_prop (void *file_baton,$/;"	f	file:
+change_file_prop	./subversion/libsvn_client/repos_diff.c	/^change_file_prop (void *file_baton,$/;"	f	file:
+change_file_prop	./subversion/libsvn_delta/cancel.c	/^change_file_prop (void *file_baton,$/;"	f	file:
+change_file_prop	./subversion/libsvn_repos/commit.c	/^change_file_prop (void *file_baton,$/;"	f	file:
+change_file_prop	./subversion/libsvn_repos/delta.c	/^change_file_prop (struct context *c, $/;"	f	file:
+change_file_prop	./subversion/libsvn_wc/diff.c	/^change_file_prop (void *file_baton,$/;"	f	file:
+change_file_prop	./subversion/libsvn_wc/status.c	/^change_file_prop (void *file_baton,$/;"	f	file:
+change_file_prop	./subversion/libsvn_wc/update_editor.c	/^change_file_prop (void *file_baton,$/;"	f	file:
+change_kind	./subversion/include/svn_fs.h	/^  svn_fs_path_change_kind_t change_kind;$/;"	m	struct:svn_fs_path_change_t
+change_node_prop	./subversion/libsvn_repos/node_tree.c	/^change_node_prop (void *node_baton,$/;"	f	file:
+change_node_prop_args	./subversion/libsvn_fs/tree.c	/^struct change_node_prop_args {$/;"	s	file:
+change_prop	./subversion/libsvn_delta/default_editor.c	/^change_prop (void *file_baton,$/;"	f	file:
+change_prop	./subversion/tests/svn_test_editor.c	/^change_prop (void *baton,$/;"	f	file:
+change_rev_prop	./subversion/include/svn_ra.h	/^  svn_error_t *(*change_rev_prop) (void *session_baton,$/;"	m	struct:svn_ra_plugin_t
+change_rev_prop	./subversion/svnserve/serve.c	/^static svn_error_t *change_rev_prop(svn_ra_svn_conn_t *conn, apr_pool_t *pool,$/;"	f	file:
+change_rev_prop_args	./subversion/libsvn_fs/revs-txns.c	/^struct change_rev_prop_args {$/;"	s	file:
+change_txn_prop_args	./subversion/libsvn_fs/revs-txns.c	/^struct change_txn_prop_args {$/;"	s	file:
+changed_p	./subversion/libsvn_fs/tree.c	/^  svn_boolean_t *changed_p;$/;"	m	struct:things_changed_args	file:
+changed_paths	./subversion/libsvn_ra_dav/log.c	/^  apr_hash_t *changed_paths;$/;"	m	struct:log_baton	file:
+changed_paths	./subversion/libsvn_repos/replay.c	/^  apr_hash_t *changed_paths;$/;"	m	struct:path_driver_cb_baton	file:
+changed_props	./subversion/mod_dav_svn/update.c	/^  apr_array_header_t *changed_props; \/* array of const char * prop names *\/$/;"	m	file:
+changes	./subversion/libsvn_fs/fs.h	/^  DB *changes;$/;"	m	struct:svn_fs_t
+changes	./subversion/libsvn_fs/tree.c	/^  apr_hash_t *changes;$/;"	m	struct:paths_changed_args	file:
+changes	./subversion/tests/libsvn_fs/changes-test.c	/^  apr_hash_t *changes;$/;"	m	struct:changes_args	file:
+changes_add	./subversion/tests/libsvn_fs/changes-test.c	/^changes_add (const char **msg, $/;"	f	file:
+changes_args	./subversion/tests/libsvn_fs/changes-test.c	/^struct changes_args$/;"	s	file:
+changes_delete	./subversion/tests/libsvn_fs/changes-test.c	/^changes_delete (const char **msg, $/;"	f	file:
+changes_fetch	./subversion/tests/libsvn_fs/changes-test.c	/^changes_fetch (const char **msg, $/;"	f	file:
+changes_fetch_ordering	./subversion/tests/libsvn_fs/changes-test.c	/^changes_fetch_ordering (const char **msg, $/;"	f	file:
+changes_fetch_raw	./subversion/tests/libsvn_fs/changes-test.c	/^changes_fetch_raw (const char **msg, $/;"	f	file:
+char_type	./subversion/libsvn_fs/util/skel.c	/^enum char_type {$/;"	g	file:
+char_type	./subversion/tests/libsvn_fs/skel-test.c	/^enum char_type {$/;"	g	file:
+check_access	./subversion/mod_authz_svn/mod_authz_svn.c	/^static int check_access(svn_config_t *cfg, const char *repos_name,$/;"	f	file:
+check_adm_exists	./subversion/libsvn_wc/adm_files.c	/^check_adm_exists (svn_boolean_t *exists,$/;"	f	file:
+check_all_revisions	./subversion/tests/libsvn_fs/fs-test.c	/^check_all_revisions (const char **msg,$/;"	f	file:
+check_already_open	./subversion/libsvn_fs/fs.c	/^check_already_open (svn_fs_t *fs)$/;"	f	file:
+check_atom	./subversion/tests/libsvn_fs/skel-test.c	/^check_atom (skel_t *skel, const char *data, apr_size_t len)$/;"	f	file:
+check_bdb_version	./subversion/libsvn_fs/fs.c	/^check_bdb_version (apr_pool_t *pool)$/;"	f	file:
+check_cancel	./subversion/svnadmin/main.c	/^check_cancel (void *baton)$/;"	f	file:
+check_cancel	./subversion/svnlook/main.c	/^check_cancel (void *baton)$/;"	f	file:
+check_copy_count	./subversion/tests/libsvn_delta/range-index-test.h	/^check_copy_count (int src_cp, int tgt_cp)$/;"	f
+check_cstring_utf8	./subversion/libsvn_subr/utf.c	/^check_cstring_utf8 (const char *data, apr_pool_t *pool)$/;"	f	file:
+check_entry	./subversion/tests/libsvn_fs/fs-test.c	/^check_entry (svn_fs_root_t *root,$/;"	f	file:
+check_entry_absent	./subversion/tests/libsvn_fs/fs-test.c	/^check_entry_absent (svn_fs_root_t *root, const char *path, $/;"	f	file:
+check_entry_present	./subversion/tests/libsvn_fs/fs-test.c	/^check_entry_present (svn_fs_root_t *root, const char *path, $/;"	f	file:
+check_explicit_length	./subversion/tests/libsvn_fs/skel-test.c	/^check_explicit_length (skel_t *skel, const char *data, apr_size_t len)$/;"	f	file:
+check_for_error	./subversion/libsvn_ra_svn/editorp.c	/^static svn_error_t *check_for_error(ra_svn_edit_baton_t *eb, apr_pool_t *pool)$/;"	f	file:
+check_hook_cmd	./subversion/libsvn_repos/hooks.c	/^check_hook_cmd (const char *hook, apr_pool_t *pool)$/;"	f	file:
+check_id	./subversion/tests/libsvn_fs/fs-test.c	/^check_id (svn_fs_t *fs, const svn_fs_id_t *id, svn_boolean_t *present,$/;"	f	file:
+check_id_absent	./subversion/tests/libsvn_fs/fs-test.c	/^check_id_absent (svn_fs_t *fs, const svn_fs_id_t *id, apr_pool_t *pool)$/;"	f	file:
+check_id_args	./subversion/tests/libsvn_fs/fs-test.c	/^struct check_id_args$/;"	s	file:
+check_id_present	./subversion/tests/libsvn_fs/fs-test.c	/^check_id_present (svn_fs_t *fs, const svn_fs_id_t *id, apr_pool_t *pool)$/;"	f	file:
+check_implicit_length_all_chars	./subversion/tests/libsvn_fs/skel-test.c	/^check_implicit_length_all_chars (skel_t *skel)$/;"	f	file:
+check_implicit_length_byte	./subversion/tests/libsvn_fs/skel-test.c	/^check_implicit_length_byte (skel_t *skel, char byte)$/;"	f	file:
+check_list	./subversion/tests/libsvn_fs/skel-test.c	/^check_list (skel_t *skel, int desired_len)$/;"	f	file:
+check_no_fs_error	./subversion/tests/libsvn_fs/fs-test.c	/^check_no_fs_error (svn_error_t *err)$/;"	f	file:
+check_non_ascii	./subversion/libsvn_subr/utf.c	/^check_non_ascii (const char *data, apr_size_t len, apr_pool_t *pool)$/;"	f	file:
+check_old_revisions	./subversion/tests/libsvn_fs/fs-test.c	/^check_old_revisions (const char **msg,$/;"	f	file:
+check_path	./subversion/include/svn_ra.h	/^  svn_error_t *(*check_path) (void *session_baton,$/;"	m	struct:svn_ra_plugin_t
+check_path	./subversion/svnserve/serve.c	/^static svn_error_t *check_path(svn_ra_svn_conn_t *conn, apr_pool_t *pool,$/;"	f	file:
+check_prop_mods	./subversion/libsvn_client/commit_util.c	/^check_prop_mods (svn_boolean_t *props_changed,$/;"	f	file:
+check_related	./subversion/tests/libsvn_fs/fs-test.c	/^check_related (const char **msg,$/;"	f	file:
+check_repos_path	./subversion/libsvn_repos/repos.c	/^check_repos_path (const char *path,$/;"	f	file:
+check_repos_version	./subversion/libsvn_repos/repos.c	/^check_repos_version (const char *path,$/;"	f	file:
+check_root_revision	./subversion/tests/libsvn_fs/fs-test.c	/^check_root_revision (const char **msg,$/;"	f	file:
+check_schema_match	./subversion/libsvn_client/diff.c	/^check_schema_match (svn_wc_adm_access_t *adm_access, const char *url)$/;"	f	file:
+check_split_url	./subversion/tests/libsvn_ra_local/ra-local-test.c	/^check_split_url (const char *repos_path,$/;"	f	file:
+check_string_contents	./subversion/tests/libsvn_subr/string-test.c	/^check_string_contents(svn_stringbuf_t *string,$/;"	f	file:
+check_utf8	./subversion/libsvn_subr/utf.c	/^check_utf8 (const char *data, apr_size_t len, apr_pool_t *pool)$/;"	f	file:
+check_wc_root	./subversion/libsvn_wc/update_editor.c	/^check_wc_root (svn_boolean_t *wc_root,$/;"	f	file:
+checked_type	./subversion/libsvn_ra_dav/fetch.c	/^  int checked_type;             \/* have we processed ctype yet? *\/$/;"	m	file:
+checkout_resource	./subversion/libsvn_ra_dav/commit.c	/^static svn_error_t * checkout_resource(commit_ctx_t *cc,$/;"	f	file:
+checksum	./subversion/include/svn_wc.h	/^  const char *checksum;$/;"	m	struct:svn_wc_entry_t
+checksum	./subversion/libsvn_fs/fs.h	/^  unsigned char checksum[APR_MD5_DIGESTSIZE];$/;"	m
+checksum_finalized	./subversion/libsvn_fs/reps-strings.c	/^  svn_boolean_t checksum_finalized;$/;"	m	struct:rep_read_baton	file:
+child	./subversion/include/svn_repos.h	/^  struct svn_repos_node_t *child;$/;"	m	struct:svn_repos_node_t
+child	./subversion/include/svn_types.h	/^  struct svn_error_t *child;$/;"	m	struct:svn_error_t
+children	./subversion/libsvn_fs/util/skel.h	/^  struct skel_t *children;$/;"	m	struct:skel_t
+children	./subversion/libsvn_ra_dav/fetch.c	/^  apr_hash_t *children;$/;"	m	file:
+chunk	./subversion/libsvn_diff/diff_file.c	/^  int chunk[4];$/;"	m	struct:svn_diff__file_baton_t	file:
+chunk_to_offset	./subversion/libsvn_diff/diff_file.c	94;"	d	file:
+chunks	./subversion/libsvn_fs/fs.h	/^      apr_array_header_t *chunks;$/;"	m
+clean_logs	./subversion/svnadmin/main.c	/^  svn_boolean_t clean_logs;                         \/* --clean-logs *\/$/;"	m	struct:svnadmin_opt_state	file:
+clean_tree	./subversion/libsvn_delta/compose_delta.c	/^clean_tree (range_index_t *ndx, apr_size_t limit)$/;"	f	file:
+cleanup_deltify	./subversion/mod_dav_svn/version.c	/^static apr_status_t cleanup_deltify(void *data)$/;"	f	file:
+cleanup_deltify_baton	./subversion/mod_dav_svn/version.c	/^struct cleanup_deltify_baton$/;"	s	file:
+cleanup_fs	./subversion/libsvn_fs/fs.c	/^cleanup_fs (svn_fs_t *fs)$/;"	f	file:
+cleanup_fs_apr	./subversion/libsvn_fs/fs.c	/^cleanup_fs_apr (void *data)$/;"	f	file:
+cleanup_fs_db	./subversion/libsvn_fs/fs.c	/^cleanup_fs_db (svn_fs_t *fs, DB **db_ptr, const char *name)$/;"	f	file:
+cleanup_mode	./subversion/tests/svn_tests_main.c	/^static int cleanup_mode = 0;$/;"	v	file:
+cleanup_pool	./subversion/tests/svn_tests_main.c	/^static apr_pool_t *cleanup_pool = 0;$/;"	v	file:
+cleanup_refcnt	./subversion/bindings/swig/swigutil_pl.c	/^static apr_status_t cleanup_refcnt (void *data)$/;"	f	file:
+cleanup_rmtree	./subversion/tests/svn_tests_main.c	/^cleanup_rmtree (void *data)$/;"	f	file:
+cleanup_session	./subversion/libsvn_ra_dav/session.c	/^static apr_status_t cleanup_session(void *sess)$/;"	f	file:
+cleanup_tempfile	./subversion/libsvn_client/blame.c	/^cleanup_tempfile (void *f)$/;"	f	file:
+cleanup_txn_args	./subversion/libsvn_fs/revs-txns.c	/^struct cleanup_txn_args$/;"	s	file:
+cleanup_uri	./subversion/libsvn_ra_dav/session.c	/^static apr_status_t cleanup_uri(void *uri)$/;"	f	file:
+clear	./subversion/bindings/com/MarshalArray.h	/^        clear()$/;"	f	class:CComDynamicMarshalledUnkArray
+clear_token_err	./subversion/libsvn_ra_svn/editor.c	/^static apr_status_t clear_token_err(void *arg)$/;"	f	file:
+client_cert_pw_prompt_provider	./subversion/libsvn_client/ssl_client_cert_pw_providers.c	/^static const svn_auth_provider_t client_cert_pw_prompt_provider = {$/;"	v	file:
+client_ssl_callback	./subversion/libsvn_ra_dav/session.c	/^client_ssl_callback(void *userdata, ne_session *sess,$/;"	f	file:
+client_ssl_decrypt_cert	./subversion/libsvn_ra_dav/session.c	/^client_ssl_decrypt_cert(svn_ra_session_t *ras,$/;"	f	file:
+close	./subversion/libsvn_subr/stream.c	/^  svn_close_fn_t close;         \/* substream's close function *\/$/;"	m	struct:zbaton	file:
+close_adm_file	./subversion/libsvn_wc/adm_files.c	/^close_adm_file (apr_file_t *fp,$/;"	f	file:
+close_baton	./subversion/bindings/swig/swigutil_java.c	/^static svn_error_t * close_baton(void *baton, const char *method)$/;"	f	file:
+close_baton	./subversion/bindings/swig/swigutil_pl.c	/^static svn_error_t * close_baton(void *baton, const char *method)$/;"	f	file:
+close_baton	./subversion/bindings/swig/swigutil_py.c	/^static svn_error_t * close_baton(void *baton, const char *method)$/;"	f	file:
+close_baton_checksum	./subversion/bindings/swig/swigutil_java.c	/^static svn_error_t * close_baton_checksum(void *baton, $/;"	f	file:
+close_directory	./subversion/include/svn_delta.h	/^  svn_error_t *(*close_directory) (void *dir_baton,$/;"	m	struct:svn_delta_editor_t
+close_directory	./subversion/libsvn_client/commit_util.c	/^close_directory (void *baton, apr_pool_t *pool)$/;"	f	file:
+close_directory	./subversion/libsvn_client/repos_diff.c	/^close_directory (void *dir_baton,$/;"	f	file:
+close_directory	./subversion/libsvn_delta/cancel.c	/^close_directory (void *dir_baton,$/;"	f	file:
+close_directory	./subversion/libsvn_repos/dump.c	/^close_directory (void *dir_baton,$/;"	f	file:
+close_directory	./subversion/libsvn_wc/diff.c	/^close_directory (void *dir_baton,$/;"	f	file:
+close_directory	./subversion/libsvn_wc/status.c	/^close_directory (void *dir_baton,$/;"	f	file:
+close_directory	./subversion/libsvn_wc/update_editor.c	/^close_directory (void *dir_baton,$/;"	f	file:
+close_edit	./subversion/include/svn_delta.h	/^  svn_error_t *(*close_edit) (void *edit_baton, $/;"	m	struct:svn_delta_editor_t
+close_edit	./subversion/libsvn_client/commit_util.c	/^close_edit (void *edit_baton, apr_pool_t *pool)$/;"	f	file:
+close_edit	./subversion/libsvn_client/repos_diff.c	/^close_edit (void *edit_baton,$/;"	f	file:
+close_edit	./subversion/libsvn_delta/cancel.c	/^close_edit (void *edit_baton,$/;"	f	file:
+close_edit	./subversion/libsvn_repos/commit.c	/^close_edit (void *edit_baton,$/;"	f	file:
+close_edit	./subversion/libsvn_wc/diff.c	/^close_edit (void *edit_baton,$/;"	f	file:
+close_edit	./subversion/libsvn_wc/status.c	/^close_edit (void *edit_baton,$/;"	f	file:
+close_edit	./subversion/libsvn_wc/update_editor.c	/^close_edit (void *edit_baton,$/;"	f	file:
+close_file	./subversion/include/svn_delta.h	/^  svn_error_t *(*close_file) (void *file_baton,$/;"	m	struct:svn_delta_editor_t
+close_file	./subversion/libsvn_client/commit_util.c	/^close_file (void *baton, const char *text_checksum, apr_pool_t *pool)$/;"	f	file:
+close_file	./subversion/libsvn_client/export.c	/^close_file (void *file_baton,$/;"	f	file:
+close_file	./subversion/libsvn_client/repos_diff.c	/^close_file (void *file_baton,$/;"	f	file:
+close_file	./subversion/libsvn_delta/cancel.c	/^close_file (void *file_baton,$/;"	f	file:
+close_file	./subversion/libsvn_delta/default_editor.c	/^close_file (void *file_baton,$/;"	f	file:
+close_file	./subversion/libsvn_repos/commit.c	/^close_file (void *file_baton,$/;"	f	file:
+close_file	./subversion/libsvn_wc/diff.c	/^close_file (void *file_baton,$/;"	f	file:
+close_file	./subversion/libsvn_wc/status.c	/^close_file (void *file_baton,$/;"	f	file:
+close_file	./subversion/libsvn_wc/update_editor.c	/^close_file (void *file_baton,$/;"	f	file:
+close_file_or_dir	./subversion/tests/svn_test_editor.c	/^close_file_or_dir (void *baton,$/;"	f	file:
+close_fn	./subversion/libsvn_subr/stream.c	/^  svn_close_fn_t close_fn;$/;"	m	struct:svn_stream_t	file:
+close_handler	./subversion/libsvn_delta/svndiff.c	/^close_handler (void *baton)$/;"	f	file:
+close_handler_gz	./subversion/libsvn_subr/stream.c	/^close_handler_gz (void *baton)$/;"	f	file:
+close_helper	./subversion/mod_dav_svn/update.c	/^static svn_error_t * close_helper(svn_boolean_t is_dir, item_baton_t *baton)$/;"	f	file:
+close_inputstream	./subversion/bindings/swig/swigutil_java.c	/^static svn_error_t *close_inputstream(void *baton)$/;"	f	file:
+close_node	./subversion/include/svn_repos.h	/^  svn_error_t *(*close_node) (void *node_baton);$/;"	m	struct:svn_repos_parse_fns_t
+close_node	./subversion/libsvn_repos/load.c	/^close_node (void *baton)$/;"	f	file:
+close_node	./subversion/svndumpfilter/main.c	/^close_node (void *node_baton)$/;"	f	file:
+close_outputstream	./subversion/bindings/swig/swigutil_java.c	/^static svn_error_t *close_outputstream(void *baton)$/;"	f	file:
+close_revision	./subversion/include/svn_repos.h	/^  svn_error_t *(*close_revision) (void *revision_baton);$/;"	m	struct:svn_repos_parse_fns_t
+close_revision	./subversion/libsvn_repos/load.c	/^close_revision (void *baton)$/;"	f	file:
+close_revision	./subversion/svndumpfilter/main.c	/^close_revision (void *revision_baton)$/;"	f	file:
+cmd	./subversion/libsvn_ra_svn/editorp.c	/^  const char *cmd;$/;"	m	file:
+cmd	./subversion/tests/fs-helpers.h	/^  int cmd;$/;"	m	struct:svn_test__txn_script_command_t
+cmd_func	./subversion/include/svn_opt.h	/^  svn_opt_subcommand_t *cmd_func;$/;"	m	struct:svn_opt_subcommand_desc_t
+cmd_table	./subversion/svnadmin/main.c	/^static const svn_opt_subcommand_desc_t cmd_table[] =$/;"	v	file:
+cmd_table	./subversion/svndumpfilter/main.c	/^static const svn_opt_subcommand_desc_t cmd_table[] =$/;"	v	file:
+cmd_table	./subversion/svnlook/main.c	/^static const svn_opt_subcommand_desc_t cmd_table[] =$/;"	v	file:
+cmdname	./subversion/include/svn_ra_svn.h	/^  const char *cmdname;$/;"	m	struct:svn_ra_svn_cmd_entry_t
+cmp_path	./subversion/libsvn_repos/dump.c	/^  const char *cmp_path;$/;"	m	struct:dir_baton	file:
+cmp_rev	./subversion/libsvn_repos/dump.c	/^  svn_revnum_t cmp_rev;$/;"	m	struct:dir_baton	file:
+cmt_author	./subversion/include/svn_wc.h	/^  const char *cmt_author;$/;"	m	struct:svn_wc_entry_t
+cmt_date	./subversion/include/svn_wc.h	/^  apr_time_t cmt_date;$/;"	m	struct:svn_wc_entry_t
+cmt_rev	./subversion/include/svn_wc.h	/^  svn_revnum_t cmt_rev;$/;"	m	struct:svn_wc_entry_t
+collect_ignore_patterns	./subversion/libsvn_wc/status.c	/^collect_ignore_patterns (apr_array_header_t *patterns,$/;"	f	file:
+commit	./subversion/svnserve/serve.c	/^static svn_error_t *commit(svn_ra_svn_conn_t *conn, apr_pool_t *pool,$/;"	f	file:
+commit_abort_edit	./subversion/libsvn_ra_dav/commit.c	/^static svn_error_t * commit_abort_edit(void *edit_baton,$/;"	f	file:
+commit_add_dir	./subversion/libsvn_ra_dav/commit.c	/^static svn_error_t * commit_add_dir(const char *path,$/;"	f	file:
+commit_add_file	./subversion/libsvn_ra_dav/commit.c	/^static svn_error_t * commit_add_file(const char *path,$/;"	f	file:
+commit_apply_txdelta	./subversion/libsvn_ra_dav/commit.c	/^commit_apply_txdelta(void *file_baton, $/;"	f	file:
+commit_args	./subversion/libsvn_fs/tree.c	/^struct commit_args$/;"	s	file:
+commit_baton	./subversion/libsvn_client/commit_util.c	/^struct commit_baton {$/;"	s	file:
+commit_callback_baton_t	./subversion/svnserve/serve.c	/^} commit_callback_baton_t;$/;"	t	file:
+commit_change_dir_prop	./subversion/libsvn_ra_dav/commit.c	/^static svn_error_t * commit_change_dir_prop(void *dir_baton,$/;"	f	file:
+commit_change_file_prop	./subversion/libsvn_ra_dav/commit.c	/^static svn_error_t * commit_change_file_prop(void *file_baton,$/;"	f	file:
+commit_close_dir	./subversion/libsvn_ra_dav/commit.c	/^static svn_error_t * commit_close_dir(void *dir_baton,$/;"	f	file:
+commit_close_edit	./subversion/libsvn_ra_dav/commit.c	/^static svn_error_t * commit_close_edit(void *edit_baton,$/;"	f	file:
+commit_close_file	./subversion/libsvn_ra_dav/commit.c	/^static svn_error_t * commit_close_file(void *file_baton,$/;"	f	file:
+commit_ctx_t	./subversion/libsvn_ra_dav/commit.c	/^} commit_ctx_t;$/;"	t	file:
+commit_date	./subversion/tests/libsvn_fs/fs-test.c	/^commit_date (const char **msg,$/;"	f	file:
+commit_delete_entry	./subversion/libsvn_ra_dav/commit.c	/^static svn_error_t * commit_delete_entry(const char *path,$/;"	f	file:
+commit_done	./subversion/svnserve/serve.c	/^static svn_error_t *commit_done(svn_revnum_t new_rev, const char *date,$/;"	f	file:
+commit_item_array_to_list	./subversion/bindings/swig/swigutil_py.c	/^commit_item_array_to_list(const apr_array_header_t *array)$/;"	f	file:
+commit_items	./subversion/libsvn_client/client.h	/^  apr_array_header_t *commit_items;$/;"	m
+commit_items	./subversion/libsvn_client/commit_util.c	/^  apr_hash_t *commit_items;            \/* the committables *\/$/;"	m	struct:path_driver_cb_baton	file:
+commit_open_dir	./subversion/libsvn_ra_dav/commit.c	/^static svn_error_t * commit_open_dir(const char *path,$/;"	f	file:
+commit_open_file	./subversion/libsvn_ra_dav/commit.c	/^static svn_error_t * commit_open_file(const char *path,$/;"	f	file:
+commit_open_root	./subversion/libsvn_ra_dav/commit.c	/^static svn_error_t * commit_open_root(void *edit_baton,$/;"	f	file:
+commit_stream_write	./subversion/libsvn_ra_dav/commit.c	/^static svn_error_t * commit_stream_write(void *baton,$/;"	f	file:
+commit_trail	./subversion/libsvn_fs/trail.c	/^commit_trail (trail_t *trail)$/;"	f	file:
+committed	./subversion/svnversion/main.c	/^  svn_boolean_t committed; \/* examine last committed revisions *\/$/;"	m	struct:status_baton	file:
+committed_author	./subversion/libsvn_repos/commit.c	/^  const char **committed_author;$/;"	m	struct:edit_baton	file:
+committed_date	./subversion/libsvn_ra_dav/merge.c	/^  svn_stringbuf_t *committed_date; \/* DAV:creationdate for this resource *\/$/;"	m	file:
+committed_date	./subversion/libsvn_repos/commit.c	/^  const char **committed_date;$/;"	m	struct:edit_baton	file:
+committed_date	./subversion/mod_dav_svn/update.c	/^  const char *committed_date;$/;"	m	file:
+committed_rev	./subversion/mod_dav_svn/update.c	/^  const char *committed_rev;$/;"	m	file:
+compare_changes	./subversion/tests/libsvn_fs/changes-test.c	/^compare_changes (apr_hash_t *ideals,$/;"	f	file:
+compare_external_items	./subversion/libsvn_client/externals.c	/^compare_external_items (svn_wc_external_item_t *new_item,$/;"	f	file:
+compare_files	./subversion/libsvn_repos/delta.c	/^compare_files (svn_boolean_t *changed_p,$/;"	f	file:
+compare_files	./subversion/tests/libsvn_delta/random-test.c	/^compare_files (apr_file_t *f1, apr_file_t *f2, int dump_files)$/;"	f	file:
+compare_items_as_paths	./subversion/clients/cmdline/ls-cmd.c	/^compare_items_as_paths (const svn_sort__item_t *a, const svn_sort__item_t *b)$/;"	f	file:
+compare_paths	./subversion/libsvn_client/commit.c	/^static int compare_paths (const void *a, const void *b)$/;"	f	file:
+compare_paths	./subversion/libsvn_delta/path_driver.c	/^static int compare_paths (const void *a, const void *b)$/;"	f	file:
+compare_ra_lib_lists	./subversion/libsvn_ra/ra_loader.c	/^compare_ra_lib_lists (const void *key_a, const void *key_b)$/;"	f	file:
+compare_results	./subversion/tests/libsvn_subr/time-test.c	/^compare_results (struct date_test *dt,$/;"	f	file:
+compared	./subversion/libsvn_wc/diff.c	/^  apr_hash_t *compared;$/;"	m	struct:dir_baton	file:
+complete_directory	./subversion/libsvn_wc/update_editor.c	/^complete_directory (struct edit_baton *eb,$/;"	f	file:
+compose_handler	./subversion/libsvn_fs/reps-strings.c	/^compose_handler (svn_txdelta_window_t *window, void *baton)$/;"	f	file:
+compose_handler_baton	./subversion/libsvn_fs/reps-strings.c	/^struct compose_handler_baton$/;"	s	file:
+compression	./subversion/libsvn_ra_dav/ra_dav.h	/^  svn_boolean_t compression;            \/* should we use http compression? *\/$/;"	m
+compute_digest	./subversion/libsvn_ra_svn/cram.c	/^static void compute_digest(char *digest, const char *challenge,$/;"	f	file:
+conf_path	./subversion/libsvn_repos/repos.h	/^  char *conf_path;$/;"	m	struct:svn_repos_t
+config	./subversion/clients/cmdline/util.c	/^  apr_hash_t *config; \/* client configuration hash *\/$/;"	m	struct:log_msg_baton	file:
+config	./subversion/include/svn_client.h	/^  apr_hash_t *config;$/;"	m	struct:svn_client_ctx_t
+config	./subversion/libsvn_client/client.h	/^  apr_hash_t *config;$/;"	m
+config	./subversion/libsvn_client/diff.c	/^  apr_hash_t *config;$/;"	m	struct:diff_cmd_baton	file:
+config	./subversion/libsvn_fs/fs.h	/^  apr_hash_t *config;$/;"	m	struct:svn_fs_t
+config	./subversion/libsvn_wc/status.c	/^  apr_hash_t *config;$/;"	m	struct:edit_baton	file:
+config	./subversion/mod_authz_svn/mod_authz_svn.c	/^    svn_config_t *config;$/;"	m	struct:parse_authz_baton	file:
+config_dir	./subversion/clients/cmdline/cl.h	/^  const char * config_dir;       \/* over-riding configuration directory *\/$/;"	m	struct:svn_cl__opt_state_t
+config_dir	./subversion/svnadmin/main.c	/^  const char *config_dir;    \/* Overriding Configuration Directory *\/$/;"	m	struct:svnadmin_opt_state	file:
+config_keys	./subversion/tests/libsvn_subr/config-test.c	/^static const char *config_keys[] = { "foo", "a", "b", "c", "d", "e", "f", "g",$/;"	v	file:
+config_values	./subversion/tests/libsvn_subr/config-test.c	/^static const char *config_values[] = { "bar", "Aa", "100", "bar",$/;"	v	file:
+conflict	./subversion/libsvn_fs/tree.c	/^  svn_stringbuf_t *conflict;$/;"	m	struct:merge_args	file:
+conflict_err	./subversion/libsvn_fs/tree.c	/^conflict_err (svn_stringbuf_t *conflict_path,$/;"	f	file:
+conflict_latest	./subversion/libsvn_diff/diff_file.c	/^  const char *conflict_latest;$/;"	m	struct:svn_diff3__file_output_baton_t	file:
+conflict_modified	./subversion/libsvn_diff/diff_file.c	/^  const char *conflict_modified;$/;"	m	struct:svn_diff3__file_output_baton_t	file:
+conflict_new	./subversion/include/svn_wc.h	/^  const char *conflict_new;$/;"	m	struct:svn_wc_entry_t
+conflict_old	./subversion/include/svn_wc.h	/^  const char *conflict_old;$/;"	m	struct:svn_wc_entry_t
+conflict_original	./subversion/libsvn_diff/diff_file.c	/^  const char *conflict_original;$/;"	m	struct:svn_diff3__file_output_baton_t	file:
+conflict_separator	./subversion/libsvn_diff/diff_file.c	/^  const char *conflict_separator;$/;"	m	struct:svn_diff3__file_output_baton_t	file:
+conflict_wrk	./subversion/include/svn_wc.h	/^  const char *conflict_wrk;$/;"	m	struct:svn_wc_entry_t
+conn	./subversion/libsvn_ra_svn/client.c	/^  svn_ra_svn_conn_t *conn;$/;"	m	file:
+conn	./subversion/libsvn_ra_svn/editor.c	/^  svn_ra_svn_conn_t *conn;$/;"	m	file:
+conn	./subversion/libsvn_ra_svn/editorp.c	/^  svn_ra_svn_conn_t *conn;$/;"	m	file:
+conn	./subversion/svnserve/main.c	/^  svn_ra_svn_conn_t *conn;$/;"	m	struct:serve_thread_t	file:
+conn	./subversion/svnserve/serve.c	/^  svn_ra_svn_conn_t *conn;$/;"	m	file:
+connection_handling_mode	./subversion/svnserve/main.c	/^enum connection_handling_mode {$/;"	g	file:
+connection_mode_fork	./subversion/svnserve/main.c	/^  connection_mode_fork,   \/* Create a process per connection *\/$/;"	e	enum:connection_handling_mode	file:
+connection_mode_single	./subversion/svnserve/main.c	/^  connection_mode_single  \/* One connection at a time in this process *\/$/;"	e	enum:connection_handling_mode	file:
+connection_mode_thread	./subversion/svnserve/main.c	/^  connection_mode_thread, \/* Create a thread per connection *\/$/;"	e	enum:connection_handling_mode	file:
+consumer_baton	./subversion/libsvn_delta/svndiff.c	/^  void *consumer_baton;$/;"	m	struct:decode_baton	file:
+consumer_func	./subversion/libsvn_delta/svndiff.c	/^  svn_txdelta_window_handler_t consumer_func;$/;"	m	struct:decode_baton	file:
+contents	./subversion/libsvn_fs/fs.h	/^  } contents;$/;"	m
+contents	./subversion/tests/fs-helpers.h	/^  const char *contents; \/* text contents (NULL for directories) *\/$/;"	m	struct:svn_test__tree_entry_t
+contents_identical_p	./subversion/libsvn_subr/io.c	/^contents_identical_p (svn_boolean_t *identical_p,$/;"	f	file:
+context	./subversion/libsvn_delta/text_delta.c	/^  apr_md5_ctx_t context;        \/* APR's MD5 context container. *\/$/;"	m	struct:svn_txdelta_stream_t	file:
+context	./subversion/libsvn_ra_svn/gssapi.c	/^    gss_ctx_id_t context;$/;"	m	struct:gssapi_filter	file:
+context	./subversion/libsvn_repos/delta.c	/^struct context {$/;"	s	file:
+convert_array	./subversion/bindings/swig/swigutil_pl.c	/^static SV *convert_array(const apr_array_header_t *array,$/;"	f	file:
+convert_cstring	./subversion/libsvn_subr/utf.c	/^convert_cstring (const char **dest,$/;"	f	file:
+convert_error	./subversion/bindings/swig/swigutil_java.c	/^static jthrowable convert_error(JNIEnv *jenv, svn_error_t *error)$/;"	f	file:
+convert_exception	./subversion/bindings/swig/swigutil_java.c	/^static svn_error_t * convert_exception(JNIEnv *jenv, apr_pool_t *pool)$/;"	f	file:
+convert_hash	./subversion/bindings/swig/swigutil_java.c	/^static jobject convert_hash(JNIEnv* jenv, apr_hash_t *hash,$/;"	f	file:
+convert_hash	./subversion/bindings/swig/swigutil_pl.c	/^static SV *convert_hash (apr_hash_t *hash, element_converter_t converter_func,$/;"	f	file:
+convert_hash	./subversion/bindings/swig/swigutil_py.c	/^static PyObject *convert_hash(apr_hash_t *hash,$/;"	f	file:
+convert_int	./subversion/bindings/swig/swigutil_pl.c	/^static SV *convert_int(int value, void *dummy)$/;"	f	file:
+convert_neon_failures	./subversion/libsvn_ra_dav/session.c	/^convert_neon_failures(int neon_failures)$/;"	f	file:
+convert_pl_obj	./subversion/bindings/swig/swigutil_pl.c	/^static void *convert_pl_obj (SV *value, swig_type_info *tinfo, apr_pool_t *pool)$/;"	f	file:
+convert_pl_string	./subversion/bindings/swig/swigutil_pl.c	/^static void *convert_pl_string (SV *value, void *dummy, apr_pool_t *pool)$/;"	f	file:
+convert_python_error	./subversion/bindings/swig/swigutil_py.c	/^static svn_error_t * convert_python_error(void)$/;"	f	file:
+convert_string	./subversion/bindings/swig/swigutil_pl.c	/^static SV *convert_string (const char *value, void *dummy)$/;"	f	file:
+convert_string_for_output	./subversion/libsvn_subr/error.c	/^convert_string_for_output (const char *src, apr_pool_t *pool)$/;"	f	file:
+convert_svn_client_commit_item_t	./subversion/bindings/swig/swigutil_py.c	/^static PyObject *convert_svn_client_commit_item_t(void *value, void *ctx)$/;"	f	file:
+convert_svn_string_t	./subversion/bindings/swig/swigutil_java.c	/^static jobject convert_svn_string_t(JNIEnv* jenv, void *value, void *ctx)$/;"	f	file:
+convert_svn_string_t	./subversion/bindings/swig/swigutil_pl.c	/^static SV *convert_svn_string_t (svn_string_t *value, void *dummy)$/;"	f	file:
+convert_svn_string_t	./subversion/bindings/swig/swigutil_py.c	/^static PyObject *convert_svn_string_t(void *value, void *ctx)$/;"	f	file:
+convert_to_stringbuf	./subversion/libsvn_subr/utf.c	/^convert_to_stringbuf (apr_xlate_t *convset,$/;"	f	file:
+convert_to_swig_type	./subversion/bindings/swig/swigutil_pl.c	/^static SV *convert_to_swig_type (void *ptr, swig_type_info *tinfo)$/;"	f	file:
+convert_to_swigtype	./subversion/bindings/swig/swigutil_java.c	/^static jobject convert_to_swigtype(JNIEnv* jenv, void *value, void *ctx)$/;"	f	file:
+convert_to_swigtype	./subversion/bindings/swig/swigutil_py.c	/^static PyObject *convert_to_swigtype(void *value, void *ctx)$/;"	f	file:
+convert_to_url	./subversion/libsvn_client/diff.c	/^convert_to_url (const char **url,$/;"	f	file:
+copied	./subversion/include/svn_wc.h	/^  svn_boolean_t copied;$/;"	m	struct:svn_wc_entry_t
+copied	./subversion/include/svn_wc.h	/^  svn_boolean_t copied;$/;"	m	struct:svn_wc_status_t
+copied_from_args	./subversion/libsvn_fs/tree.c	/^struct copied_from_args$/;"	s	file:
+copies	./subversion/libsvn_fs/fs.h	/^  DB *copies;$/;"	m	struct:svn_fs_t
+copies	./subversion/libsvn_fs/fs.h	/^  apr_array_header_t *copies;$/;"	m
+copy_args	./subversion/libsvn_fs/tree.c	/^struct copy_args$/;"	s	file:
+copy_dir_administratively	./subversion/libsvn_wc/copy.c	/^copy_dir_administratively (const char *src_path, $/;"	f	file:
+copy_file_administratively	./subversion/libsvn_wc/copy.c	/^copy_file_administratively (const char *src_path, $/;"	f	file:
+copy_id	./subversion/libsvn_fs/id.h	/^  const char *copy_id;$/;"	m	struct:svn_fs_id_t
+copy_id_inherit_new	./subversion/libsvn_fs/tree.c	/^  copy_id_inherit_new$/;"	e	enum:copy_id_inherit_t	file:
+copy_id_inherit_parent	./subversion/libsvn_fs/tree.c	/^  copy_id_inherit_parent,$/;"	e	enum:copy_id_inherit_t	file:
+copy_id_inherit_self	./subversion/libsvn_fs/tree.c	/^  copy_id_inherit_self,$/;"	e	enum:copy_id_inherit_t	file:
+copy_id_inherit_t	./subversion/libsvn_fs/tree.c	/^typedef enum copy_id_inherit_t$/;"	g	file:
+copy_id_inherit_t	./subversion/libsvn_fs/tree.c	/^} copy_id_inherit_t;$/;"	t	file:
+copy_id_inherit_unknown	./subversion/libsvn_fs/tree.c	/^  copy_id_inherit_unknown = 0,$/;"	e	enum:copy_id_inherit_t	file:
+copy_inherit	./subversion/libsvn_fs/tree.c	/^  copy_id_inherit_t copy_inherit;$/;"	m	struct:parent_path_t	file:
+copy_node_revision	./subversion/libsvn_fs/dag.c	/^copy_node_revision (svn_fs__node_revision_t *noderev,$/;"	f	file:
+copy_source_ops	./subversion/libsvn_delta/compose_delta.c	/^copy_source_ops (apr_size_t offset, apr_size_t limit,$/;"	f	file:
+copy_src_path	./subversion/libsvn_fs/tree.c	/^  const char *copy_src_path;$/;"	m	struct:parent_path_t	file:
+copy_string	./subversion/tests/libsvn_fs/strings-reps-test.c	/^copy_string (const char **msg, $/;"	f	file:
+copy_tempfile	./subversion/tests/libsvn_delta/random-test.c	/^copy_tempfile (apr_file_t *fp, apr_pool_t *pool)$/;"	f	file:
+copy_test	./subversion/tests/libsvn_fs/fs-test.c	/^copy_test (const char **msg,$/;"	f	file:
+copy_versioned_files	./subversion/libsvn_client/export.c	/^copy_versioned_files (const char *from,$/;"	f	file:
+copyfrom_path	./subversion/include/svn_repos.h	/^  const char *copyfrom_path;$/;"	m	struct:svn_repos_node_t
+copyfrom_path	./subversion/include/svn_types.h	/^  const char *copyfrom_path;$/;"	m	struct:svn_log_changed_path_t
+copyfrom_path	./subversion/libsvn_repos/load.c	/^  const char *copyfrom_path;$/;"	m	struct:node_baton	file:
+copyfrom_path	./subversion/svndumpfilter/main.c	/^  svn_stringbuf_t *copyfrom_path;$/;"	m	struct:node_baton_t	file:
+copyfrom_rev	./subversion/include/svn_repos.h	/^  svn_revnum_t copyfrom_rev;$/;"	m	struct:svn_repos_node_t
+copyfrom_rev	./subversion/include/svn_types.h	/^  svn_revnum_t copyfrom_rev;$/;"	m	struct:svn_log_changed_path_t
+copyfrom_rev	./subversion/include/svn_wc.h	/^  svn_revnum_t copyfrom_rev;$/;"	m	struct:svn_wc_entry_t
+copyfrom_rev	./subversion/libsvn_repos/load.c	/^  svn_revnum_t copyfrom_rev;$/;"	m	struct:node_baton	file:
+copyfrom_url	./subversion/include/svn_client.h	/^  const char *copyfrom_url;$/;"	m	struct:svn_client_commit_item_t
+copyfrom_url	./subversion/include/svn_wc.h	/^  const char *copyfrom_url;$/;"	m	struct:svn_wc_entry_t
+copyrev	./subversion/libsvn_client/blame.c	/^  svn_revnum_t copyrev;    \/* The revision the eldest was copied from *\/$/;"	m	struct:log_message_baton	file:
+corrupt_id	./subversion/libsvn_fs/err.c	/^corrupt_id (const char *fmt, const svn_fs_id_t *id, svn_fs_t *fs)$/;"	f	file:
+count	./subversion/libsvn_wc/log.c	/^  int count;$/;"	m	struct:log_runner	file:
+count_and_verify_instructions	./subversion/libsvn_delta/svndiff.c	/^count_and_verify_instructions (int *ninst,$/;"	f	file:
+count_components	./subversion/libsvn_delta/path_driver.c	/^count_components (const char *path)$/;"	f	file:
+cpathstr	./subversion/libsvn_ra_dav/fetch.c	/^  svn_stringbuf_t *cpathstr;$/;"	m	file:
+cr_to_cr	./subversion/tests/libsvn_wc/translate-test.c	/^cr_to_cr (const char **msg,$/;"	f	file:
+cr_to_crlf	./subversion/tests/libsvn_wc/translate-test.c	/^cr_to_crlf (const char **msg,$/;"	f	file:
+cr_to_crlf_expand_rev	./subversion/tests/libsvn_wc/translate-test.c	/^cr_to_crlf_expand_rev (const char **msg,$/;"	f	file:
+cr_to_crlf_expand_rev_url	./subversion/tests/libsvn_wc/translate-test.c	/^cr_to_crlf_expand_rev_url (const char **msg,$/;"	f	file:
+cr_to_crlf_unexpand_rev	./subversion/tests/libsvn_wc/translate-test.c	/^cr_to_crlf_unexpand_rev (const char **msg,$/;"	f	file:
+cr_to_crlf_unexpand_rev_url	./subversion/tests/libsvn_wc/translate-test.c	/^cr_to_crlf_unexpand_rev_url (const char **msg,$/;"	f	file:
+cr_to_lf	./subversion/tests/libsvn_wc/translate-test.c	/^cr_to_lf (const char **msg,$/;"	f	file:
+create_activity	./subversion/libsvn_ra_dav/commit.c	/^static svn_error_t * create_activity(commit_ctx_t *cc,$/;"	f	file:
+create_authz_svn_dir_config	./subversion/mod_authz_svn/mod_authz_svn.c	/^static void *create_authz_svn_dir_config(apr_pool_t *p, char *d)$/;"	f	file:
+create_berkeley_filesystem	./subversion/tests/libsvn_fs/fs-test.c	/^create_berkeley_filesystem (const char **msg,$/;"	f	file:
+create_child_node	./subversion/libsvn_repos/node_tree.c	/^create_child_node (svn_repos_node_t *parent, $/;"	f	file:
+create_conf	./subversion/libsvn_repos/repos.c	/^create_conf (svn_repos_t *repos, apr_pool_t *pool)$/;"	f	file:
+create_db_lock	./subversion/libsvn_repos/repos.c	/^create_db_lock (svn_repos_t *repos, apr_pool_t *pool) {$/;"	f	file:
+create_db_logs_lock	./subversion/libsvn_repos/repos.c	/^create_db_logs_lock (svn_repos_t *repos, apr_pool_t *pool) {$/;"	f	file:
+create_empty_file	./subversion/libsvn_client/repos_diff.c	/^create_empty_file (const char **empty_file,$/;"	f	file:
+create_file	./subversion/tests/libsvn_wc/translate-test.c	/^create_file (const char *fname, const char *eol_str, apr_pool_t *pool)$/;"	f	file:
+create_file_transaction	./subversion/tests/libsvn_fs/fs-test.c	/^create_file_transaction (const char **msg,$/;"	f	file:
+create_fs_and_repos	./subversion/tests/libsvn_ra_local/ra-local-test.c	/^create_fs_and_repos (svn_fs_t **fs_p, const char *name)$/;"	f	file:
+create_greek_tree_transaction	./subversion/tests/libsvn_fs/fs-test.c	/^create_greek_tree_transaction (const char **msg,$/;"	f	file:
+create_hash_table	./subversion/libsvn_delta/vdelta.c	/^create_hash_table (apr_size_t num_slots, apr_pool_t *pool)$/;"	f	file:
+create_hooks	./subversion/libsvn_repos/repos.c	/^create_hooks (svn_repos_t *repos, apr_pool_t *pool)$/;"	f	file:
+create_lock	./subversion/libsvn_wc/lock.c	/^create_lock (svn_wc_adm_access_t *adm_access, int wait_for, apr_pool_t *pool)$/;"	f	file:
+create_locks	./subversion/libsvn_repos/repos.c	/^create_locks (svn_repos_t *repos, apr_pool_t *pool)$/;"	f	file:
+create_mini_tree_transaction	./subversion/tests/libsvn_fs/fs-test.c	/^create_mini_tree_transaction (const char **msg,$/;"	f	file:
+create_node	./subversion/libsvn_repos/node_tree.c	/^create_node (const char *name,$/;"	f	file:
+create_offset_index	./subversion/libsvn_delta/compose_delta.c	/^create_offset_index (const svn_txdelta_window_t *window, apr_pool_t *pool)$/;"	f	file:
+create_range_index	./subversion/libsvn_delta/compose_delta.c	/^create_range_index (apr_pool_t *pool)$/;"	f	file:
+create_repos_dir	./subversion/libsvn_repos/repos.c	/^create_repos_dir (const char *path, apr_pool_t *pool)$/;"	f	file:
+create_repos_structure	./subversion/libsvn_repos/repos.c	/^create_repos_structure (svn_repos_t *repos,$/;"	f	file:
+create_sibling_node	./subversion/libsvn_repos/node_tree.c	/^create_sibling_node (svn_repos_node_t *elder, $/;"	f	file:
+create_stdio_stream	./subversion/svnadmin/main.c	/^create_stdio_stream (svn_stream_t **stream,$/;"	f	file:
+create_stdio_stream	./subversion/svndumpfilter/main.c	/^create_stdio_stream (svn_stream_t **stream,$/;"	f	file:
+create_string	./subversion/libsvn_subr/svn_string.c	/^create_string (const char *data, apr_size_t size,$/;"	f	file:
+create_stringbuf	./subversion/libsvn_subr/svn_string.c	/^create_stringbuf (char *data, apr_size_t size, apr_pool_t *pool)$/;"	f	file:
+create_temp_file	./subversion/libsvn_repos/hooks.c	/^create_temp_file (apr_file_t **f, const svn_string_t *value, apr_pool_t *pool)$/;"	f	file:
+create_unique_tmpdir	./subversion/svnlook/main.c	/^create_unique_tmpdir (const char **name, apr_pool_t *pool)$/;"	f	file:
+create_within_copy	./subversion/tests/libsvn_fs/fs-test.c	/^create_within_copy (const char **msg,$/;"	f	file:
+created	./subversion/libsvn_ra_dav/commit.c	/^  svn_boolean_t created; \/* set if this is an add rather than an update *\/$/;"	m	file:
+created_path	./subversion/libsvn_fs/dag.c	/^  const char *created_path;$/;"	m	struct:dag_node_t	file:
+created_path	./subversion/libsvn_fs/fs.h	/^  const char *created_path;$/;"	m
+created_path	./subversion/libsvn_fs/tree.c	/^  const char **created_path;$/;"	m	struct:node_created_path_args	file:
+created_rev	./subversion/include/svn_types.h	/^  svn_revnum_t created_rev;$/;"	m	struct:svn_dirent_t
+cred_kind	./subversion/include/svn_auth.h	/^  const char *cred_kind;$/;"	m	struct:svn_auth_provider_t
+creds_cache	./subversion/libsvn_subr/auth.c	/^  apr_hash_t *creds_cache;$/;"	m	struct:svn_auth_baton_t	file:
+crlf_to_cr	./subversion/tests/libsvn_wc/translate-test.c	/^crlf_to_cr (const char **msg,$/;"	f	file:
+crlf_to_cr_expand_author_rev	./subversion/tests/libsvn_wc/translate-test.c	/^crlf_to_cr_expand_author_rev (const char **msg,$/;"	f	file:
+crlf_to_cr_unexpand_author_rev	./subversion/tests/libsvn_wc/translate-test.c	/^crlf_to_cr_unexpand_author_rev (const char **msg,$/;"	f	file:
+crlf_to_crlf	./subversion/tests/libsvn_wc/translate-test.c	/^crlf_to_crlf (const char **msg,$/;"	f	file:
+crlf_to_lf	./subversion/tests/libsvn_wc/translate-test.c	/^crlf_to_lf (const char **msg,$/;"	f	file:
+cross_copies	./subversion/libsvn_fs/tree.c	/^  svn_boolean_t cross_copies;$/;"	m	struct:history_prev_args	file:
+ctx	./subversion/clients/cmdline/cl.h	/^  svn_client_ctx_t *ctx;$/;"	m
+ctx	./subversion/libsvn_client/commit_util.c	/^  svn_client_ctx_t *ctx;               \/* client context baton *\/$/;"	m	struct:path_driver_cb_baton	file:
+ctx	./subversion/libsvn_client/diff.c	/^  svn_client_ctx_t *ctx;$/;"	m	struct:merge_cmd_baton	file:
+ctx	./subversion/libsvn_client/externals.c	/^  svn_client_ctx_t *ctx;$/;"	m	struct:handle_external_item_change_baton	file:
+ctx	./subversion/libsvn_client/externals.c	/^  svn_client_ctx_t *ctx;$/;"	m	struct:handle_externals_desc_change_baton	file:
+ctx	./subversion/libsvn_client/relocate.c	/^  svn_client_ctx_t *ctx;$/;"	m	struct:validator_baton_t	file:
+ctype	./subversion/libsvn_ra_dav/fetch.c	/^  ne_content_type ctype;        \/* the Content-Type header *\/$/;"	m	file:
+curp	./subversion/libsvn_diff/diff_file.c	/^  char       *curp[2];$/;"	m	struct:svn_diff__file_output_baton_t	file:
+curp	./subversion/libsvn_diff/diff_file.c	/^  char       *curp[3];$/;"	m	struct:svn_diff3__file_output_baton_t	file:
+curp	./subversion/libsvn_diff/diff_file.c	/^  char *curp[4];$/;"	m	struct:svn_diff__file_baton_t	file:
+current_access	./subversion/svnserve/serve.c	/^static enum access_type current_access(server_baton_t *b)$/;"	f	file:
+current_line	./subversion/libsvn_diff/diff_file.c	/^  apr_off_t   current_line[2];$/;"	m	struct:svn_diff__file_output_baton_t	file:
+current_line	./subversion/libsvn_diff/diff_file.c	/^  apr_off_t   current_line[3];$/;"	m	struct:svn_diff3__file_output_baton_t	file:
+current_pool	./subversion/bindings/swig/swigutil_pl.c	/^apr_pool_t *current_pool;$/;"	v
+current_rev	./subversion/libsvn_repos/dump.c	/^  svn_revnum_t current_rev;$/;"	m	struct:edit_baton	file:
+current_wcprop_path	./subversion/libsvn_ra_dav/fetch.c	/^  const char *current_wcprop_path;$/;"	m	file:
+custom_get_ctx_t	./subversion/libsvn_ra_dav/fetch.c	/^} custom_get_ctx_t;$/;"	t	file:
+custom_get_request	./subversion/libsvn_ra_dav/fetch.c	/^static svn_error_t *custom_get_request(ne_session *sess,$/;"	f	file:
+dag_node_cache_get	./subversion/libsvn_fs/tree.c	/^dag_node_cache_get (svn_fs_root_t *root,$/;"	f	file:
+dag_node_cache_set	./subversion/libsvn_fs/tree.c	/^dag_node_cache_set (svn_fs_root_t *root,$/;"	f	file:
+dag_node_cache_t	./subversion/libsvn_fs/tree.c	/^struct dag_node_cache_t$/;"	s	file:
+dag_node_t	./subversion/libsvn_fs/dag.c	/^struct dag_node_t$/;"	s	file:
+dag_node_t	./subversion/libsvn_fs/dag.h	/^typedef struct dag_node_t dag_node_t;$/;"	t
+data	./subversion/include/svn_string.h	/^  char *data;$/;"	m	struct:svn_stringbuf_t
+data	./subversion/include/svn_string.h	/^  const char *data;$/;"	m	struct:svn_string_t
+data	./subversion/libsvn_fs/util/skel.h	/^  const char *data;$/;"	m	struct:skel_t
+data	./subversion/tests/libsvn_fs/skel-test.c	/^  const char *data;$/;"	m	struct:invalid_atoms	file:
+data_handler	./subversion/libsvn_subr/xml.c	/^  svn_xml_char_data data_handler;$/;"	m	struct:svn_xml_parser_t	file:
+data_key	./subversion/libsvn_fs/fs.h	/^  const char *data_key;$/;"	m
+datasource	./subversion/libsvn_diff/diff_file.c	/^  svn_diff_datasource_e datasource;$/;"	m	struct:svn_diff__file_token_t	file:
+datasource_close	./subversion/include/svn_diff.h	/^  svn_error_t *(*datasource_close)(void *diff_baton,$/;"	m	struct:svn_diff_fns_t
+datasource_get_next_token	./subversion/include/svn_diff.h	/^  svn_error_t *(*datasource_get_next_token)(apr_uint32_t *hash, void **token,$/;"	m	struct:svn_diff_fns_t
+datasource_open	./subversion/include/svn_diff.h	/^  svn_error_t *(*datasource_open)(void *diff_baton,$/;"	m	struct:svn_diff_fns_t
+date	./subversion/include/svn_client.h	/^  const char *date;$/;"	m	struct:svn_client_commit_info_t
+date	./subversion/include/svn_opt.h	/^    apr_time_t date;$/;"	m	union:svn_opt_revision_t::<anonymous>
+date	./subversion/include/svn_subst.h	/^  const svn_string_t *date;$/;"	m	struct:svn_subst_keywords_t
+date	./subversion/libsvn_client/blame.c	/^  const char *date;      \/* the date of the revision *\/$/;"	m	struct:rev	file:
+date	./subversion/libsvn_client/export.c	/^  apr_time_t date;$/;"	m	struct:file_baton	file:
+date	./subversion/libsvn_ra_dav/log.c	/^  const char *date;$/;"	m	struct:log_baton	file:
+date	./subversion/svnserve/serve.c	/^  const char **date;$/;"	m	file:
+date_prop_to_human	./subversion/libsvn_subr/subst.c	/^date_prop_to_human (const char **human, svn_boolean_t long_p, apr_time_t when,$/;"	f	file:
+date_test	./subversion/tests/libsvn_subr/time-test.c	/^struct date_test {$/;"	s	file:
+datestamp	./subversion/libsvn_repos/load.c	/^  const svn_string_t *datestamp;$/;"	m	struct:revision_baton	file:
+dav_db	./subversion/mod_dav_svn/deadprops.c	/^struct dav_db {$/;"	s	file:
+dav_deadprop_rollback	./subversion/mod_dav_svn/deadprops.c	/^struct dav_deadprop_rollback {$/;"	s	file:
+dav_path	./subversion/libsvn_repos/repos.h	/^  char *dav_path;$/;"	m	struct:svn_repos_t
+dav_plugin	./subversion/libsvn_ra_dav/session.c	/^static const svn_ra_plugin_t dav_plugin = {$/;"	v	file:
+dav_resource_combined	./subversion/mod_dav_svn/repos.c	/^} dav_resource_combined;$/;"	t	file:
+dav_resource_private	./subversion/mod_dav_svn/dav_svn.h	/^struct dav_resource_private {$/;"	s
+dav_stream	./subversion/mod_dav_svn/repos.c	/^struct dav_stream {$/;"	s	file:
+dav_svn__drev_report	./subversion/mod_dav_svn/version.c	/^static dav_error * dav_svn__drev_report(const dav_resource *resource,$/;"	f	file:
+dav_svn__log_report	./subversion/mod_dav_svn/log.c	/^dav_error * dav_svn__log_report(const dav_resource *resource,$/;"	f
+dav_svn__merge_response	./subversion/mod_dav_svn/merge.c	/^dav_error * dav_svn__merge_response(ap_filter_t *output,$/;"	f
+dav_svn__update_report	./subversion/mod_dav_svn/update.c	/^dav_error * dav_svn__update_report(const dav_resource *resource,$/;"	f
+dav_svn_authz_read	./subversion/mod_dav_svn/update.c	/^svn_error_t *dav_svn_authz_read(svn_boolean_t *allowed,$/;"	f
+dav_svn_authz_read_baton	./subversion/mod_dav_svn/dav_svn.h	/^} dav_svn_authz_read_baton;$/;"	t
+dav_svn_auto_versionable	./subversion/mod_dav_svn/version.c	/^static dav_auto_version dav_svn_auto_versionable(const dav_resource *resource)$/;"	f	file:
+dav_svn_autoversioning_cmd	./subversion/mod_dav_svn/mod_dav_svn.c	/^static const char *dav_svn_autoversioning_cmd(cmd_parms *cmd, void *config,$/;"	f	file:
+dav_svn_avail_reports	./subversion/mod_dav_svn/version.c	/^static dav_error *dav_svn_avail_reports(const dav_resource *resource,$/;"	f	file:
+dav_svn_build_uri	./subversion/mod_dav_svn/util.c	/^const char *dav_svn_build_uri(const dav_svn_repos *repos,$/;"	f
+dav_svn_build_what	./subversion/mod_dav_svn/dav_svn.h	/^enum dav_svn_build_what {$/;"	g
+dav_svn_can_be_activity	./subversion/mod_dav_svn/version.c	/^static int dav_svn_can_be_activity(const dav_resource *resource)$/;"	f	file:
+dav_svn_checkin	./subversion/mod_dav_svn/version.c	/^dav_error *dav_svn_checkin(dav_resource *resource,$/;"	f
+dav_svn_checkout	./subversion/mod_dav_svn/version.c	/^dav_error *dav_svn_checkout(dav_resource *resource,$/;"	f
+dav_svn_close_filter	./subversion/mod_dav_svn/repos.c	/^static svn_error_t *dav_svn_close_filter(void *baton)$/;"	f	file:
+dav_svn_close_stream	./subversion/mod_dav_svn/repos.c	/^static dav_error * dav_svn_close_stream(dav_stream *stream, int commit)$/;"	f	file:
+dav_svn_cmds	./subversion/mod_dav_svn/mod_dav_svn.c	/^static const command_rec dav_svn_cmds[] =$/;"	v	file:
+dav_svn_convert_err	./subversion/mod_dav_svn/util.c	/^dav_error * dav_svn_convert_err(svn_error_t *serr, int status,$/;"	f
+dav_svn_copy_resource	./subversion/mod_dav_svn/repos.c	/^static dav_error * dav_svn_copy_resource(const dav_resource *src,$/;"	f	file:
+dav_svn_create_activity	./subversion/mod_dav_svn/activity.c	/^dav_error *dav_svn_create_activity(const dav_svn_repos *repos,$/;"	f
+dav_svn_create_collection	./subversion/mod_dav_svn/repos.c	/^static dav_error * dav_svn_create_collection(dav_resource *resource)$/;"	f	file:
+dav_svn_create_dir_config	./subversion/mod_dav_svn/mod_dav_svn.c	/^static void *dav_svn_create_dir_config(apr_pool_t *p, char *dir)$/;"	f	file:
+dav_svn_create_private_resource	./subversion/mod_dav_svn/repos.c	/^static dav_resource *dav_svn_create_private_resource($/;"	f	file:
+dav_svn_create_server_config	./subversion/mod_dav_svn/mod_dav_svn.c	/^static void *dav_svn_create_server_config(apr_pool_t *p, server_rec *s)$/;"	f	file:
+dav_svn_create_version_resource	./subversion/mod_dav_svn/repos.c	/^dav_error * dav_svn_create_version_resource(dav_resource **version_res,$/;"	f
+dav_svn_create_working_resource	./subversion/mod_dav_svn/repos.c	/^dav_resource *dav_svn_create_working_resource(dav_resource *base,$/;"	f
+dav_svn_db_apply_rollback	./subversion/mod_dav_svn/deadprops.c	/^static dav_error *dav_svn_db_apply_rollback(dav_db *db,$/;"	f	file:
+dav_svn_db_close	./subversion/mod_dav_svn/deadprops.c	/^static void dav_svn_db_close(dav_db *db)$/;"	f	file:
+dav_svn_db_define_namespaces	./subversion/mod_dav_svn/deadprops.c	/^static dav_error *dav_svn_db_define_namespaces(dav_db *db, dav_xmlns_info *xi)$/;"	f	file:
+dav_svn_db_exists	./subversion/mod_dav_svn/deadprops.c	/^static int dav_svn_db_exists(dav_db *db, const dav_prop_name *name)$/;"	f	file:
+dav_svn_db_first_name	./subversion/mod_dav_svn/deadprops.c	/^static dav_error *dav_svn_db_first_name(dav_db *db, dav_prop_name *pname)$/;"	f	file:
+dav_svn_db_get_rollback	./subversion/mod_dav_svn/deadprops.c	/^static dav_error *dav_svn_db_get_rollback(dav_db *db, $/;"	f	file:
+dav_svn_db_map_namespaces	./subversion/mod_dav_svn/deadprops.c	/^static dav_error *dav_svn_db_map_namespaces($/;"	f	file:
+dav_svn_db_next_name	./subversion/mod_dav_svn/deadprops.c	/^static dav_error *dav_svn_db_next_name(dav_db *db, dav_prop_name *pname)$/;"	f	file:
+dav_svn_db_open	./subversion/mod_dav_svn/deadprops.c	/^static dav_error *dav_svn_db_open(apr_pool_t *p, const dav_resource *resource,$/;"	f	file:
+dav_svn_db_output_value	./subversion/mod_dav_svn/deadprops.c	/^static dav_error *dav_svn_db_output_value(dav_db *db, $/;"	f	file:
+dav_svn_db_remove	./subversion/mod_dav_svn/deadprops.c	/^static dav_error *dav_svn_db_remove(dav_db *db, const dav_prop_name *name)$/;"	f	file:
+dav_svn_db_store	./subversion/mod_dav_svn/deadprops.c	/^static dav_error *dav_svn_db_store(dav_db *db, const dav_prop_name *name,$/;"	f	file:
+dav_svn_delete_activity	./subversion/mod_dav_svn/activity.c	/^dav_error *dav_svn_delete_activity(const dav_svn_repos *repos,$/;"	f
+dav_svn_deliver	./subversion/mod_dav_svn/repos.c	/^static dav_error * dav_svn_deliver(const dav_resource *resource,$/;"	f	file:
+dav_svn_deliver_report	./subversion/mod_dav_svn/version.c	/^static dav_error *dav_svn_deliver_report(request_rec *r,$/;"	f	file:
+dav_svn_diff_ctx_t	./subversion/mod_dav_svn/repos.c	/^} dav_svn_diff_ctx_t;$/;"	t	file:
+dav_svn_dir_conf	./subversion/mod_dav_svn/mod_dav_svn.c	/^} dav_svn_dir_conf;$/;"	t	file:
+dav_svn_do_walk	./subversion/mod_dav_svn/repos.c	/^static dav_error * dav_svn_do_walk(dav_svn_walker_context *ctx, int depth)$/;"	f	file:
+dav_svn_find_liveprop	./subversion/mod_dav_svn/liveprops.c	/^int dav_svn_find_liveprop(const dav_resource *resource,$/;"	f
+dav_svn_find_ns	./subversion/mod_dav_svn/util.c	/^int dav_svn_find_ns(apr_array_header_t *namespaces, const char *uri)$/;"	f
+dav_svn_gather_propsets	./subversion/mod_dav_svn/liveprops.c	/^void dav_svn_gather_propsets(apr_array_header_t *uris)$/;"	f
+dav_svn_get_autoversioning_flag	./subversion/mod_dav_svn/mod_dav_svn.c	/^svn_boolean_t dav_svn_get_autoversioning_flag(request_rec *r)$/;"	f
+dav_svn_get_fs_parent_path	./subversion/mod_dav_svn/mod_dav_svn.c	/^const char *dav_svn_get_fs_parent_path(request_rec *r)$/;"	f
+dav_svn_get_fs_path	./subversion/mod_dav_svn/mod_dav_svn.c	/^const char *dav_svn_get_fs_path(request_rec *r)$/;"	f
+dav_svn_get_last_modified_time	./subversion/mod_dav_svn/liveprops.c	/^int dav_svn_get_last_modified_time (const char **datestring,$/;"	f
+dav_svn_get_option	./subversion/mod_dav_svn/version.c	/^static dav_error *dav_svn_get_option(const dav_resource *resource,$/;"	f	file:
+dav_svn_get_parent_resource	./subversion/mod_dav_svn/repos.c	/^static dav_error * dav_svn_get_parent_resource(const dav_resource *resource,$/;"	f	file:
+dav_svn_get_repo_name	./subversion/mod_dav_svn/mod_dav_svn.c	/^const char *dav_svn_get_repo_name(request_rec *r)$/;"	f
+dav_svn_get_resource	./subversion/mod_dav_svn/repos.c	/^static dav_error * dav_svn_get_resource(request_rec *r,$/;"	f	file:
+dav_svn_get_safe_cr	./subversion/mod_dav_svn/util.c	/^svn_revnum_t dav_svn_get_safe_cr(svn_fs_root_t *root,$/;"	f
+dav_svn_get_special_uri	./subversion/mod_dav_svn/mod_dav_svn.c	/^const char *dav_svn_get_special_uri(request_rec *r)$/;"	f
+dav_svn_get_txn	./subversion/mod_dav_svn/activity.c	/^const char *dav_svn_get_txn(const dav_svn_repos *repos,$/;"	f
+dav_svn_get_vsn_options	./subversion/mod_dav_svn/version.c	/^static void dav_svn_get_vsn_options(apr_pool_t *p, apr_text_header *phdr)$/;"	f	file:
+dav_svn_get_xslt_uri	./subversion/mod_dav_svn/mod_dav_svn.c	/^const char *dav_svn_get_xslt_uri(request_rec *r)$/;"	f
+dav_svn_getetag	./subversion/mod_dav_svn/repos.c	/^const char * dav_svn_getetag(const dav_resource *resource, apr_pool_t *pool)$/;"	f
+dav_svn_hooks_liveprop	./subversion/mod_dav_svn/liveprops.c	/^const dav_hooks_liveprop dav_svn_hooks_liveprop = {$/;"	v
+dav_svn_hooks_propdb	./subversion/mod_dav_svn/deadprops.c	/^const dav_hooks_propdb dav_svn_hooks_propdb = {$/;"	v
+dav_svn_hooks_repos	./subversion/mod_dav_svn/repos.c	/^const dav_hooks_repository dav_svn_hooks_repos =$/;"	v
+dav_svn_hooks_vsn	./subversion/mod_dav_svn/version.c	/^const dav_hooks_vsn dav_svn_hooks_vsn = {$/;"	v
+dav_svn_init	./subversion/mod_dav_svn/mod_dav_svn.c	/^static int dav_svn_init(apr_pool_t *p, apr_pool_t *plog, apr_pool_t *ptemp,$/;"	f	file:
+dav_svn_insert_all_liveprops	./subversion/mod_dav_svn/liveprops.c	/^void dav_svn_insert_all_liveprops(request_rec *r, const dav_resource *resource,$/;"	f
+dav_svn_insert_prop	./subversion/mod_dav_svn/liveprops.c	/^static dav_prop_insert dav_svn_insert_prop(const dav_resource *resource,$/;"	f	file:
+dav_svn_is_parent_resource	./subversion/mod_dav_svn/repos.c	/^static int dav_svn_is_parent_resource(const dav_resource *res1,$/;"	f	file:
+dav_svn_is_same_resource	./subversion/mod_dav_svn/repos.c	/^static int dav_svn_is_same_resource(const dav_resource *res1,$/;"	f	file:
+dav_svn_is_writable	./subversion/mod_dav_svn/liveprops.c	/^static int dav_svn_is_writable(const dav_resource *resource, int propid)$/;"	f	file:
+dav_svn_liveprop_group	./subversion/mod_dav_svn/liveprops.c	/^static const dav_liveprop_group dav_svn_liveprop_group =$/;"	v	file:
+dav_svn_make_activity	./subversion/mod_dav_svn/version.c	/^static dav_error *dav_svn_make_activity(dav_resource *resource)$/;"	f	file:
+dav_svn_merge	./subversion/mod_dav_svn/version.c	/^static dav_error *dav_svn_merge(dav_resource *target, dav_resource *source,$/;"	f	file:
+dav_svn_merge_dir_config	./subversion/mod_dav_svn/mod_dav_svn.c	/^static void *dav_svn_merge_dir_config(apr_pool_t *p,$/;"	f	file:
+dav_svn_merge_server_config	./subversion/mod_dav_svn/mod_dav_svn.c	/^static void *dav_svn_merge_server_config(apr_pool_t *p,$/;"	f	file:
+dav_svn_module	./subversion/mod_dav_svn/mod_dav_svn.c	/^module AP_MODULE_DECLARE_DATA dav_svn_module =$/;"	v
+dav_svn_move_resource	./subversion/mod_dav_svn/repos.c	/^static dav_error * dav_svn_move_resource(dav_resource *src,$/;"	f	file:
+dav_svn_namespace_uris	./subversion/mod_dav_svn/liveprops.c	/^static const char * const dav_svn_namespace_uris[] =$/;"	v	file:
+dav_svn_open_stream	./subversion/mod_dav_svn/repos.c	/^static dav_error * dav_svn_open_stream(const dav_resource *resource,$/;"	f	file:
+dav_svn_parent_path_cmd	./subversion/mod_dav_svn/mod_dav_svn.c	/^static const char *dav_svn_parent_path_cmd(cmd_parms *cmd, void *config,$/;"	f	file:
+dav_svn_parse_activity_uri	./subversion/mod_dav_svn/repos.c	/^static int dav_svn_parse_activity_uri(dav_resource_combined *comb,$/;"	f	file:
+dav_svn_parse_baseline_coll_uri	./subversion/mod_dav_svn/repos.c	/^static int dav_svn_parse_baseline_coll_uri(dav_resource_combined *comb,$/;"	f	file:
+dav_svn_parse_baseline_uri	./subversion/mod_dav_svn/repos.c	/^static int dav_svn_parse_baseline_uri(dav_resource_combined *comb,$/;"	f	file:
+dav_svn_parse_history_uri	./subversion/mod_dav_svn/repos.c	/^static int dav_svn_parse_history_uri(dav_resource_combined *comb,$/;"	f	file:
+dav_svn_parse_uri	./subversion/mod_dav_svn/repos.c	/^static int dav_svn_parse_uri(dav_resource_combined *comb,$/;"	f	file:
+dav_svn_parse_vcc_uri	./subversion/mod_dav_svn/repos.c	/^static int dav_svn_parse_vcc_uri(dav_resource_combined *comb,$/;"	f	file:
+dav_svn_parse_version_uri	./subversion/mod_dav_svn/repos.c	/^static int dav_svn_parse_version_uri(dav_resource_combined *comb,$/;"	f	file:
+dav_svn_parse_working_uri	./subversion/mod_dav_svn/repos.c	/^static int dav_svn_parse_working_uri(dav_resource_combined *comb,$/;"	f	file:
+dav_svn_parse_wrk_baseline_uri	./subversion/mod_dav_svn/repos.c	/^static int dav_svn_parse_wrk_baseline_uri(dav_resource_combined *comb,$/;"	f	file:
+dav_svn_patch_commit	./subversion/mod_dav_svn/liveprops.c	/^static void dav_svn_patch_commit(const dav_resource *resource,$/;"	f	file:
+dav_svn_patch_exec	./subversion/mod_dav_svn/liveprops.c	/^static dav_error * dav_svn_patch_exec(const dav_resource *resource,$/;"	f	file:
+dav_svn_patch_rollback	./subversion/mod_dav_svn/liveprops.c	/^static dav_error * dav_svn_patch_rollback(const dav_resource *resource,$/;"	f	file:
+dav_svn_patch_validate	./subversion/mod_dav_svn/liveprops.c	/^static dav_error * dav_svn_patch_validate(const dav_resource *resource,$/;"	f	file:
+dav_svn_path_cmd	./subversion/mod_dav_svn/mod_dav_svn.c	/^static const char *dav_svn_path_cmd(cmd_parms *cmd, void *config,$/;"	f	file:
+dav_svn_prep_activity	./subversion/mod_dav_svn/repos.c	/^static dav_error * dav_svn_prep_activity(dav_resource_combined *comb)$/;"	f	file:
+dav_svn_prep_history	./subversion/mod_dav_svn/repos.c	/^static dav_error * dav_svn_prep_history(dav_resource_combined *comb)$/;"	f	file:
+dav_svn_prep_private	./subversion/mod_dav_svn/repos.c	/^static dav_error * dav_svn_prep_private(dav_resource_combined *comb)$/;"	f	file:
+dav_svn_prep_regular	./subversion/mod_dav_svn/repos.c	/^static dav_error * dav_svn_prep_regular(dav_resource_combined *comb)$/;"	f	file:
+dav_svn_prep_resource	./subversion/mod_dav_svn/repos.c	/^static dav_error * dav_svn_prep_resource(dav_resource_combined *comb)$/;"	f	file:
+dav_svn_prep_version	./subversion/mod_dav_svn/repos.c	/^static dav_error * dav_svn_prep_version(dav_resource_combined *comb)$/;"	f	file:
+dav_svn_prep_working	./subversion/mod_dav_svn/repos.c	/^static dav_error * dav_svn_prep_working(dav_resource_combined *comb)$/;"	f	file:
+dav_svn_private_restype	./subversion/mod_dav_svn/dav_svn.h	/^enum dav_svn_private_restype {$/;"	g
+dav_svn_props	./subversion/mod_dav_svn/liveprops.c	/^static const dav_liveprop_spec dav_svn_props[] =$/;"	v	file:
+dav_svn_provider	./subversion/mod_dav_svn/mod_dav_svn.c	/^static dav_provider dav_svn_provider =$/;"	v	file:
+dav_svn_register_uris	./subversion/mod_dav_svn/liveprops.c	/^void dav_svn_register_uris(apr_pool_t *p)$/;"	f
+dav_svn_remove_resource	./subversion/mod_dav_svn/repos.c	/^static dav_error * dav_svn_remove_resource(dav_resource *resource,$/;"	f	file:
+dav_svn_repo_name	./subversion/mod_dav_svn/mod_dav_svn.c	/^static const char *dav_svn_repo_name(cmd_parms *cmd, void *config,$/;"	f	file:
+dav_svn_report_label_header_allowed	./subversion/mod_dav_svn/version.c	/^static int dav_svn_report_label_header_allowed(const apr_xml_doc *doc)$/;"	f	file:
+dav_svn_repos	./subversion/mod_dav_svn/dav_svn.h	/^} dav_svn_repos;$/;"	t
+dav_svn_resource_kind	./subversion/mod_dav_svn/repos.c	/^dav_error * dav_svn_resource_kind (request_rec *r,$/;"	f
+dav_svn_root	./subversion/mod_dav_svn/dav_svn.h	/^} dav_svn_root;$/;"	t
+dav_svn_seek_stream	./subversion/mod_dav_svn/repos.c	/^static dav_error * dav_svn_seek_stream(dav_stream *stream,$/;"	f	file:
+dav_svn_server_conf	./subversion/mod_dav_svn/mod_dav_svn.c	/^} dav_svn_server_conf;$/;"	t	file:
+dav_svn_set_headers	./subversion/mod_dav_svn/repos.c	/^static dav_error * dav_svn_set_headers(request_rec *r,$/;"	f	file:
+dav_svn_simple_parse_uri	./subversion/mod_dav_svn/util.c	/^svn_error_t *dav_svn_simple_parse_uri(dav_svn_uri_info *info,$/;"	f
+dav_svn_special_uri_cmd	./subversion/mod_dav_svn/mod_dav_svn.c	/^static const char *dav_svn_special_uri_cmd(cmd_parms *cmd, void *config,$/;"	f	file:
+dav_svn_split_uri	./subversion/mod_dav_svn/repos.c	/^dav_svn_split_uri (request_rec *r,$/;"	f
+dav_svn_store_activity	./subversion/mod_dav_svn/activity.c	/^dav_error *dav_svn_store_activity(const dav_svn_repos *repos,$/;"	f
+dav_svn_time_format	./subversion/mod_dav_svn/dav_svn.h	/^enum dav_svn_time_format {$/;"	g
+dav_svn_time_format_iso8601	./subversion/mod_dav_svn/dav_svn.h	/^  dav_svn_time_format_iso8601,$/;"	e	enum:dav_svn_time_format
+dav_svn_time_format_rfc1123	./subversion/mod_dav_svn/dav_svn.h	/^  dav_svn_time_format_rfc1123$/;"	e	enum:dav_svn_time_format
+dav_svn_uncheckout	./subversion/mod_dav_svn/version.c	/^static dav_error *dav_svn_uncheckout(dav_resource *resource)$/;"	f	file:
+dav_svn_uri_info	./subversion/mod_dav_svn/dav_svn.h	/^} dav_svn_uri_info;$/;"	t
+dav_svn_versionable	./subversion/mod_dav_svn/version.c	/^static int dav_svn_versionable(const dav_resource *resource)$/;"	f	file:
+dav_svn_vsn_control	./subversion/mod_dav_svn/version.c	/^static dav_error *dav_svn_vsn_control(dav_resource *resource,$/;"	f	file:
+dav_svn_walk	./subversion/mod_dav_svn/repos.c	/^static dav_error * dav_svn_walk(const dav_walk_params *params, int depth,$/;"	f	file:
+dav_svn_walker_context	./subversion/mod_dav_svn/repos.c	/^} dav_svn_walker_context;$/;"	t	file:
+dav_svn_working_to_regular_resource	./subversion/mod_dav_svn/repos.c	/^dav_error * dav_svn_working_to_regular_resource(dav_resource *resource)$/;"	f
+dav_svn_write_stream	./subversion/mod_dav_svn/repos.c	/^static dav_error * dav_svn_write_stream(dav_stream *stream, const void *buf,$/;"	f	file:
+dav_svn_write_to_filter	./subversion/mod_dav_svn/repos.c	/^static svn_error_t *dav_svn_write_to_filter(void *baton,$/;"	f	file:
+dav_svn_xslt_uri	./subversion/mod_dav_svn/mod_dav_svn.c	/^static const char *dav_svn_xslt_uri(cmd_parms *cmd, void *config,$/;"	f	file:
+daytime_tests	./subversion/tests/libsvn_subr/time-test.c	/^static struct date_test daytime_tests[] = {$/;"	v	file:
+db_path	./subversion/libsvn_repos/repos.h	/^  char *db_path;$/;"	m	struct:svn_repos_t
+db_txn	./subversion/libsvn_fs/trail.h	/^  DB_TXN *db_txn;$/;"	m	struct:trail_t
+decode_baton	./subversion/libsvn_delta/svndiff.c	/^struct decode_baton$/;"	s	file:
+decode_baton	./subversion/libsvn_subr/quoprint.c	/^struct decode_baton {$/;"	s	file:
+decode_baton	./subversion/libsvn_subr/svn_base64.c	/^struct decode_baton {$/;"	s	file:
+decode_bytes	./subversion/libsvn_subr/quoprint.c	/^decode_bytes (svn_stringbuf_t *str, const char *data, apr_size_t len,$/;"	f	file:
+decode_bytes	./subversion/libsvn_subr/svn_base64.c	/^decode_bytes (svn_stringbuf_t *str, const char *data, apr_size_t len,$/;"	f	file:
+decode_data	./subversion/libsvn_subr/quoprint.c	/^decode_data (void *baton, const char *data, apr_size_t *len)$/;"	f	file:
+decode_data	./subversion/libsvn_subr/svn_base64.c	/^decode_data (void *baton, const char *data, apr_size_t *len)$/;"	f	file:
+decode_group	./subversion/libsvn_subr/svn_base64.c	/^decode_group (const unsigned char *in, char *out)$/;"	f	file:
+decode_instruction	./subversion/libsvn_delta/svndiff.c	/^decode_instruction (svn_txdelta_op_t *op,$/;"	f	file:
+decode_int	./subversion/libsvn_delta/svndiff.c	/^decode_int (svn_filesize_t *val,$/;"	f	file:
+default_editor	./subversion/libsvn_delta/default_editor.c	/^static const svn_delta_editor_t default_editor =$/;"	v	file:
+default_warning_func	./subversion/libsvn_fs/fs.c	/^default_warning_func (void *baton, svn_error_t *err)$/;"	f	file:
+defn_from_id	./subversion/libsvn_ra_dav/props.c	/^static const elem_defn *defn_from_id(svn_ra_dav__xml_elmid id)$/;"	f	file:
+delete	./subversion/libsvn_repos/delta.c	/^delete (struct context *c, $/;"	f	file:
+delete	./subversion/tests/libsvn_fs/fs-test.c	/^delete (const char **msg,$/;"	f	file:
+delete_activity	./subversion/libsvn_ra_dav/commit.c	/^static svn_error_t * delete_activity(void *edit_baton,$/;"	f	file:
+delete_args	./subversion/libsvn_fs/tree.c	/^struct delete_args$/;"	s	file:
+delete_entry	./subversion/include/svn_delta.h	/^  svn_error_t *(*delete_entry) (const char *path,$/;"	m	struct:svn_delta_editor_t
+delete_entry	./subversion/libsvn_client/commit_util.c	/^delete_entry (const char *path,$/;"	f	file:
+delete_entry	./subversion/libsvn_client/repos_diff.c	/^delete_entry (const char *path,$/;"	f	file:
+delete_entry	./subversion/libsvn_delta/cancel.c	/^delete_entry (const char *path,$/;"	f	file:
+delete_entry	./subversion/libsvn_delta/default_editor.c	/^delete_entry (const char *path,$/;"	f	file:
+delete_entry	./subversion/libsvn_repos/commit.c	/^delete_entry (const char *path,$/;"	f	file:
+delete_entry	./subversion/libsvn_repos/dump.c	/^delete_entry (const char *path,$/;"	f	file:
+delete_entry	./subversion/libsvn_repos/node_tree.c	/^delete_entry (const char *path,$/;"	f	file:
+delete_entry	./subversion/libsvn_wc/diff.c	/^delete_entry (const char *path,$/;"	f	file:
+delete_entry	./subversion/libsvn_wc/status.c	/^delete_entry (const char *path,$/;"	f	file:
+delete_entry	./subversion/libsvn_wc/update_editor.c	/^delete_entry (const char *path, $/;"	f	file:
+delete_mutables	./subversion/tests/libsvn_fs/fs-test.c	/^delete_mutables (const char **msg,$/;"	f	file:
+delete_path	./subversion/include/svn_ra.h	/^  svn_error_t *(*delete_path) (void *report_baton,$/;"	m	struct:svn_ra_reporter_t
+delete_path	./subversion/svnserve/serve.c	/^static svn_error_t *delete_path(svn_ra_svn_conn_t *conn, apr_pool_t *pool,$/;"	f	file:
+delete_rep	./subversion/tests/libsvn_fs/strings-reps-test.c	/^delete_rep (const char **msg, $/;"	f	file:
+delete_strings	./subversion/libsvn_fs/reps-strings.c	/^delete_strings (apr_array_header_t *keys, $/;"	f	file:
+delete_subtree	./subversion/libsvn_delta/compose_delta.c	/^delete_subtree (range_index_t *ndx, range_index_node_t *node)$/;"	f	file:
+delete_txn_tree	./subversion/libsvn_fs/revs-txns.c	/^delete_txn_tree (svn_fs_t *fs,$/;"	f	file:
+delete_urls	./subversion/libsvn_client/delete.c	/^delete_urls (svn_client_commit_info_t **commit_info,$/;"	f	file:
+deleted	./subversion/include/svn_wc.h	/^  svn_boolean_t deleted;$/;"	m	struct:svn_wc_entry_t
+deleted_entries	./subversion/libsvn_repos/dump.c	/^  apr_hash_t *deleted_entries;$/;"	m	struct:dir_baton	file:
+deleted_in_repos	./subversion/libsvn_client/status.c	/^  svn_boolean_t deleted_in_repos;          \/* target is deleted in repos *\/$/;"	m	struct:status_baton	file:
+delta	./subversion/libsvn_fs/fs.h	/^    } delta;$/;"	m
+delta_base	./subversion/mod_dav_svn/dav_svn.h	/^  const char *delta_base;$/;"	m	struct:dav_resource_private
+delta_baton	./subversion/mod_dav_svn/repos.c	/^  void *delta_baton;$/;"	m	struct:dav_stream	file:
+delta_dirs	./subversion/libsvn_repos/delta.c	/^delta_dirs (struct context *c, $/;"	f	file:
+delta_files	./subversion/libsvn_repos/delta.c	/^delta_files (struct context *c, $/;"	f	file:
+delta_handler	./subversion/mod_dav_svn/repos.c	/^  svn_txdelta_window_handler_t delta_handler;$/;"	m	struct:dav_stream	file:
+delta_proplists	./subversion/libsvn_repos/delta.c	/^delta_proplists (struct context *c,$/;"	f	file:
+delta_string_keys	./subversion/libsvn_fs/reps-strings.c	/^delta_string_keys (apr_array_header_t **keys,$/;"	f	file:
+delta_window_print	./subversion/tests/libsvn_delta/delta-window-test.h	/^delta_window_print (const svn_txdelta_window_t *window,$/;"	f
+delta_window_size_estimate	./subversion/tests/libsvn_delta/delta-window-test.h	/^delta_window_size_estimate (const svn_txdelta_window_t *window)$/;"	f
+deltify_committed_args	./subversion/libsvn_fs/tree.c	/^struct deltify_committed_args$/;"	s	file:
+deltify_etc	./subversion/libsvn_ra_local/ra_plugin.c	/^deltify_etc (svn_revnum_t new_revision,$/;"	f	file:
+deltify_etc_baton	./subversion/libsvn_ra_local/ra_plugin.c	/^struct deltify_etc_baton$/;"	s	file:
+deltify_mutable	./subversion/libsvn_fs/tree.c	/^deltify_mutable (svn_fs_t *fs,$/;"	f	file:
+deny	./subversion/mod_authz_svn/mod_authz_svn.c	/^    int deny;$/;"	m	struct:parse_authz_baton	file:
+descend	./subversion/libsvn_wc/status.c	/^  svn_boolean_t descend;$/;"	m	struct:edit_baton	file:
+description	./subversion/include/svn_ra.h	/^  const char *description;$/;"	m	struct:svn_ra_plugin_t
+dest	./subversion/libsvn_repos/repos.c	/^  const char *dest;     \/* target location to construct *\/$/;"	m	struct:hotcopy_ctx_t	file:
+dest	./subversion/libsvn_wc/update_editor.c	/^  apr_file_t *dest;$/;"	m	struct:handler_baton	file:
+detailed	./subversion/clients/cmdline/status-cmd.c	/^  svn_boolean_t detailed;$/;"	m	struct:status_baton	file:
+detect_changed	./subversion/libsvn_repos/log.c	/^detect_changed (apr_hash_t **changed,$/;"	f	file:
+diff	./subversion/svnserve/serve.c	/^static svn_error_t *diff(svn_ra_svn_conn_t *conn, apr_pool_t *pool,$/;"	f	file:
+diff3_cmd	./subversion/libsvn_client/diff.c	/^  const char *diff3_cmd;$/;"	m	struct:merge_cmd_baton	file:
+diff3_cmd	./subversion/libsvn_wc/log.c	/^  const char *diff3_cmd;            \/* external diff3 cmd, or null if none *\/$/;"	m	struct:log_runner	file:
+diff3_cmd	./subversion/libsvn_wc/update_editor.c	/^  const char *diff3_cmd;$/;"	m	struct:edit_baton	file:
+diff_baton	./subversion/libsvn_client/blame.c	/^struct diff_baton$/;"	s	file:
+diff_callbacks	./subversion/libsvn_client/repos_diff.c	/^  const svn_wc_diff_callbacks_t *diff_callbacks;$/;"	m	struct:edit_baton	file:
+diff_cmd	./subversion/clients/cmdline/cl.h	/^  const char *diff_cmd;          \/* the external diff command to use *\/$/;"	m	struct:svn_cl__opt_state_t
+diff_cmd_baton	./subversion/libsvn_client/diff.c	/^struct diff_cmd_baton {$/;"	s	file:
+diff_cmd_baton	./subversion/libsvn_client/repos_diff.c	/^  void *diff_cmd_baton;$/;"	m	struct:edit_baton	file:
+diff_diff3_seed	./subversion/tests/libsvn_diff/diff-diff3-test.c	/^static apr_uint32_t diff_diff3_seed;$/;"	v	file:
+diff_diff3_seed	./subversion/tests/libsvn_subr/utf-test.c	/^static apr_uint32_t diff_diff3_seed;$/;"	v	file:
+diff_dir_added	./subversion/libsvn_client/diff.c	/^diff_dir_added (svn_wc_adm_access_t *adm_access,$/;"	f	file:
+diff_dir_deleted	./subversion/libsvn_client/diff.c	/^diff_dir_deleted (svn_wc_adm_access_t *adm_access,$/;"	f	file:
+diff_file_added	./subversion/libsvn_client/diff.c	/^diff_file_added (svn_wc_adm_access_t *adm_access,$/;"	f	file:
+diff_file_changed	./subversion/libsvn_client/diff.c	/^diff_file_changed (svn_wc_adm_access_t *adm_access,$/;"	f	file:
+diff_file_deleted_no_diff	./subversion/libsvn_client/diff.c	/^diff_file_deleted_no_diff (svn_wc_adm_access_t *adm_access,$/;"	f	file:
+diff_file_deleted_with_diff	./subversion/libsvn_client/diff.c	/^diff_file_deleted_with_diff (svn_wc_adm_access_t *adm_access,$/;"	f	file:
+diff_label	./subversion/libsvn_client/diff.c	/^diff_label (const char *path,$/;"	f	file:
+diff_props_changed	./subversion/libsvn_client/diff.c	/^diff_props_changed (svn_wc_adm_access_t *adm_access,$/;"	f	file:
+diff_repos_repos	./subversion/libsvn_client/diff.c	/^diff_repos_repos (const apr_array_header_t *options,$/;"	f	file:
+diff_repos_wc	./subversion/libsvn_client/diff.c	/^diff_repos_wc (const apr_array_header_t *options,$/;"	f	file:
+diff_wc_wc	./subversion/libsvn_client/diff.c	/^diff_wc_wc (const apr_array_header_t *options,$/;"	f	file:
+digest	./subversion/libsvn_delta/text_delta.c	/^  unsigned char digest[APR_MD5_DIGESTSIZE]; $/;"	m	struct:svn_txdelta_stream_t	file:
+digest	./subversion/libsvn_fs/tree.c	/^  unsigned char *digest;  \/* OUT parameter, APR_MD5_DIGESTSIZE bytes long *\/$/;"	m	struct:file_checksum_args	file:
+digest	./subversion/libsvn_wc/update_editor.c	/^  unsigned char digest[APR_MD5_DIGESTSIZE];$/;"	m	struct:file_baton	file:
+dir_added	./subversion/include/svn_wc.h	/^  svn_error_t *(*dir_added) (svn_wc_adm_access_t *adm_access,$/;"	m	struct:svn_wc_diff_callbacks_t
+dir_baton	./subversion/libsvn_client/export.c	/^struct dir_baton$/;"	s	file:
+dir_baton	./subversion/libsvn_client/repos_diff.c	/^  struct dir_baton *dir_baton;$/;"	m	struct:dir_baton	file:
+dir_baton	./subversion/libsvn_client/repos_diff.c	/^struct dir_baton {$/;"	s	file:
+dir_baton	./subversion/libsvn_delta/cancel.c	/^struct dir_baton$/;"	s	file:
+dir_baton	./subversion/libsvn_delta/path_driver.c	/^  void *dir_baton;   \/* the dir baton. *\/$/;"	m	struct:dir_stack_t	file:
+dir_baton	./subversion/libsvn_repos/commit.c	/^struct dir_baton$/;"	s	file:
+dir_baton	./subversion/libsvn_repos/dump.c	/^struct dir_baton$/;"	s	file:
+dir_baton	./subversion/libsvn_wc/diff.c	/^  struct dir_baton *dir_baton;$/;"	m	struct:dir_baton	file:
+dir_baton	./subversion/libsvn_wc/diff.c	/^struct dir_baton {$/;"	s	file:
+dir_baton	./subversion/libsvn_wc/status.c	/^  struct dir_baton *dir_baton;$/;"	m	struct:file_baton	file:
+dir_baton	./subversion/libsvn_wc/status.c	/^struct dir_baton$/;"	s	file:
+dir_baton	./subversion/libsvn_wc/update_editor.c	/^struct dir_baton$/;"	s	file:
+dir_deleted	./subversion/include/svn_wc.h	/^  svn_error_t *(*dir_deleted) (svn_wc_adm_access_t *adm_access,$/;"	m	struct:svn_wc_diff_callbacks_t
+dir_delta_get_editor	./subversion/tests/libsvn_repos/dir-delta-editor.c	/^dir_delta_get_editor (const svn_delta_editor_t **editor,$/;"	f
+dir_deltas	./subversion/tests/libsvn_repos/repos-test.c	/^dir_deltas (const char **msg,$/;"	f	file:
+dir_entries_args	./subversion/libsvn_fs/tree.c	/^struct dir_entries_args$/;"	s	file:
+dir_entry_id_from_node	./subversion/libsvn_fs/dag.c	/^dir_entry_id_from_node (const svn_fs_id_t **id_p, $/;"	f	file:
+dir_item_t	./subversion/libsvn_ra_dav/fetch.c	/^} dir_item_t;$/;"	t	file:
+dir_make	./subversion/libsvn_subr/io.c	/^dir_make (const char *path, apr_fileperms_t perm,$/;"	f	file:
+dir_stack_t	./subversion/libsvn_delta/path_driver.c	/^typedef struct dir_stack_t$/;"	s	file:
+dir_stack_t	./subversion/libsvn_delta/path_driver.c	/^} dir_stack_t;$/;"	t	file:
+directory_elements_diff	./subversion/libsvn_wc/diff.c	/^directory_elements_diff (struct dir_baton *dir_baton,$/;"	f	file:
+dirents	./subversion/libsvn_fs/revs-txns.c	/^  apr_hash_t **dirents;$/;"	m	struct:get_dirents_args	file:
+dirs	./subversion/libsvn_ra_dav/fetch.c	/^  apr_array_header_t *dirs;  \/* stack of directory batons\/vsn_urls *\/$/;"	m	file:
+disable_merge_response	./subversion/libsvn_ra_dav/commit.c	/^  svn_boolean_t disable_merge_response;$/;"	m	file:
+discount_trailing_dot_slash	./subversion/libsvn_subr/path.c	/^discount_trailing_dot_slash (const char *path,$/;"	f	file:
+display_original_in_conflict	./subversion/libsvn_diff/diff_file.c	/^  svn_boolean_t display_original_in_conflict;$/;"	m	struct:svn_diff3__file_output_baton_t	file:
+display_prop_diffs	./subversion/libsvn_client/diff.c	/^display_prop_diffs (const apr_array_header_t *propchanges,$/;"	f	file:
+display_prop_diffs	./subversion/svnlook/main.c	/^display_prop_diffs (const apr_array_header_t *prop_diffs,$/;"	f	file:
+display_resolved_conflicts	./subversion/libsvn_diff/diff_file.c	/^  svn_boolean_t display_resolved_conflicts;$/;"	m	struct:svn_diff3__file_output_baton_t	file:
+do_auth	./subversion/libsvn_ra_svn/client.c	/^static svn_error_t *do_auth(ra_svn_session_baton_t *sess,$/;"	f	file:
+do_author	./subversion/svnlook/main.c	/^do_author (svnlook_ctxt_t *c, apr_pool_t *pool)$/;"	f	file:
+do_cat	./subversion/svnlook/main.c	/^do_cat (svnlook_ctxt_t *c, const char *path, apr_pool_t *pool)$/;"	f	file:
+do_changed	./subversion/svnlook/main.c	/^do_changed (svnlook_ctxt_t *c, apr_pool_t *pool)$/;"	f	file:
+do_checkout	./subversion/libsvn_ra_dav/commit.c	/^static svn_error_t * do_checkout(commit_ctx_t *cc,$/;"	f	file:
+do_checksum	./subversion/libsvn_ra_dav/fetch.c	/^  svn_boolean_t do_checksum;  \/* only accumulate checksum if set *\/$/;"	m	file:
+do_close	./subversion/libsvn_wc/lock.c	/^do_close (svn_wc_adm_access_t *adm_access,$/;"	f	file:
+do_date	./subversion/svnlook/main.c	/^do_date (svnlook_ctxt_t *c, apr_pool_t *pool)$/;"	f	file:
+do_diff	./subversion/include/svn_ra.h	/^  svn_error_t *(*do_diff) (void *session_baton,$/;"	m	struct:svn_ra_plugin_t
+do_diff	./subversion/libsvn_client/diff.c	/^do_diff (const apr_array_header_t *options,$/;"	f	file:
+do_diff	./subversion/svnlook/main.c	/^do_diff (svnlook_ctxt_t *c, apr_pool_t *pool)$/;"	f	file:
+do_diff	./subversion/tests/libsvn_diff/diff-test.c	/^do_diff(svn_stream_t *ostream,$/;"	f	file:
+do_diff3	./subversion/tests/libsvn_diff/diff3-test.c	/^do_diff3(svn_stream_t *ostream,$/;"	f	file:
+do_diff4	./subversion/tests/libsvn_diff/diff4-test.c	/^do_diff4(svn_stream_t *ostream,$/;"	f	file:
+do_dirs_changed	./subversion/svnlook/main.c	/^do_dirs_changed (svnlook_ctxt_t *c, apr_pool_t *pool)$/;"	f	file:
+do_entry_deletion	./subversion/libsvn_wc/update_editor.c	/^do_entry_deletion (struct edit_baton *eb,$/;"	f	file:
+do_exclude	./subversion/svndumpfilter/main.c	/^  svn_boolean_t       do_exclude;$/;"	m	struct:parse_baton_t	file:
+do_history	./subversion/svnlook/main.c	/^do_history (svnlook_ctxt_t *c, $/;"	f	file:
+do_io_file_wrapper_cleanup	./subversion/libsvn_subr/io.c	/^do_io_file_wrapper_cleanup (apr_file_t *file, apr_status_t status, $/;"	f	file:
+do_item_commit	./subversion/libsvn_client/commit_util.c	/^do_item_commit (void **dir_baton,$/;"	f	file:
+do_job	./contrib/client-side/svn-push/svn-push.c	/^do_job (apr_pool_t * pool, const char *src_url, const char *dest_url,$/;"	f	file:
+do_log	./subversion/svnlook/main.c	/^do_log (svnlook_ctxt_t *c, svn_boolean_t print_size, apr_pool_t *pool)$/;"	f	file:
+do_merge	./subversion/libsvn_client/diff.c	/^do_merge (const char *URL1,$/;"	f	file:
+do_one_diff	./subversion/tests/libsvn_delta/vdelta-test.c	/^do_one_diff (apr_file_t *source_file, apr_file_t *target_file,$/;"	f	file:
+do_open	./subversion/libsvn_wc/lock.c	/^do_open (svn_wc_adm_access_t **adm_access,$/;"	f	file:
+do_pget	./subversion/svnlook/main.c	/^do_pget (svnlook_ctxt_t *c,$/;"	f	file:
+do_plist	./subversion/svnlook/main.c	/^do_plist (svnlook_ctxt_t *c,$/;"	f	file:
+do_proppatch	./subversion/libsvn_ra_dav/commit.c	/^static svn_error_t * do_proppatch(svn_ra_session_t *ras,$/;"	f	file:
+do_random_combine_test	./subversion/tests/libsvn_delta/random-test.c	/^do_random_combine_test (const char **msg,$/;"	f	file:
+do_renumber_revs	./subversion/svndumpfilter/main.c	/^  svn_boolean_t       do_renumber_revs;$/;"	m	struct:parse_baton_t	file:
+do_resources	./subversion/mod_dav_svn/merge.c	/^static svn_error_t *do_resources(const dav_svn_repos *repos,$/;"	f	file:
+do_retry	./subversion/libsvn_fs/trail.c	/^do_retry (svn_fs_t *fs,$/;"	f	file:
+do_setprop	./subversion/libsvn_ra_dav/props.c	/^do_setprop(ne_buffer *body, $/;"	f	file:
+do_single_file_merge	./subversion/libsvn_client/diff.c	/^do_single_file_merge (const char *URL1,$/;"	f	file:
+do_skip	./subversion/svndumpfilter/main.c	/^  svn_boolean_t    do_skip;$/;"	m	struct:node_baton_t	file:
+do_status	./subversion/include/svn_ra.h	/^  svn_error_t *(*do_status) (void *session_baton,$/;"	m	struct:svn_ra_plugin_t
+do_switch	./subversion/include/svn_ra.h	/^  svn_error_t *(*do_switch) (void *session_baton,$/;"	m	struct:svn_ra_plugin_t
+do_test_num	./subversion/tests/svn_tests_main.c	/^do_test_num (const char *progname, $/;"	f	file:
+do_tree	./subversion/svnlook/main.c	/^do_tree (svnlook_ctxt_t *c, $/;"	f	file:
+do_update	./subversion/include/svn_ra.h	/^  svn_error_t *(*do_update) (void *session_baton,$/;"	m	struct:svn_ra_plugin_t
+done	./subversion/libsvn_fs/reps-strings.c	/^  svn_boolean_t done;$/;"	m	struct:compose_handler_baton	file:
+done	./subversion/libsvn_ra_svn/editorp.c	/^  svn_boolean_t done;$/;"	m	file:
+done	./subversion/libsvn_subr/svn_base64.c	/^  svn_boolean_t done;           \/* True if we already saw an '=' *\/$/;"	m	struct:decode_baton	file:
+done	./subversion/svnversion/main.c	/^  svn_boolean_t done;     \/* note completion of our task. *\/$/;"	m	struct:status_baton	file:
+drev_end_element	./subversion/libsvn_ra_dav/fetch.c	/^static int drev_end_element(void *userdata, const svn_ra_dav__xml_elm_t *elm,$/;"	f	file:
+drev_report_elements	./subversion/libsvn_ra_dav/fetch.c	/^static const svn_ra_dav__xml_elm_t drev_report_elements[] =$/;"	v	file:
+drev_start_element	./subversion/libsvn_ra_dav/fetch.c	/^static int drev_start_element(void *userdata, const svn_ra_dav__xml_elm_t *elm,$/;"	f	file:
+drev_validate_element	./subversion/libsvn_ra_dav/fetch.c	/^static int drev_validate_element(void *userdata, svn_ra_dav__xml_elmid parent,$/;"	f	file:
+drop_empty_revs	./subversion/svndumpfilter/main.c	/^  svn_boolean_t       drop_empty_revs;$/;"	m	struct:parse_baton_t	file:
+drop_empty_revs	./subversion/svndumpfilter/main.c	/^  svn_boolean_t drop_empty_revs;         \/* --drop-empty-revs   *\/$/;"	m	struct:svndumpfilter_opt_state	file:
+dropped_nodes	./subversion/svndumpfilter/main.c	/^  apr_array_header_t *dropped_nodes;$/;"	m	struct:parse_baton_t	file:
+dry_run	./subversion/clients/cmdline/cl.h	/^  svn_boolean_t dry_run;         \/* try operation but make no changes *\/$/;"	m	struct:svn_cl__opt_state_t
+dry_run	./subversion/libsvn_client/diff.c	/^  svn_boolean_t dry_run;$/;"	m	struct:merge_cmd_baton	file:
+dry_run	./subversion/libsvn_client/repos_diff.c	/^  svn_boolean_t dry_run;$/;"	m	struct:edit_baton	file:
+dst_noderev_id	./subversion/libsvn_fs/fs.h	/^  const svn_fs_id_t *dst_noderev_id;$/;"	m
+dst_path	./subversion/libsvn_client/copy.c	/^  const char *dst_path;$/;"	m	struct:path_driver_cb_baton	file:
+dst_path	./subversion/mod_dav_svn/update.c	/^  const char *dst_path;$/;"	m	file:
+dstream	./subversion/libsvn_ra_svn/editorp.c	/^  svn_stream_t *dstream;  \/* svndiff stream for apply_textdelta *\/$/;"	m	file:
+dummy_window_handler	./subversion/mod_dav_svn/update.c	/^static svn_error_t * dummy_window_handler(svn_txdelta_window_t *window,$/;"	f	file:
+dump_contents	./subversion/svnlook/main.c	/^dump_contents (apr_file_t *fh,$/;"	f	file:
+dump_core	./subversion/tests/libsvn_diff/diff-diff3-test.c	/^dump_core (const char **msg,$/;"	f	file:
+dump_file_contents	./subversion/tests/libsvn_delta/random-test.c	/^dump_file_contents (apr_file_t *fp)$/;"	f	file:
+dump_node	./subversion/libsvn_repos/dump.c	/^dump_node (struct edit_baton *eb,$/;"	f	file:
+dump_opt_state	./subversion/svndumpfilter/main.c	/^dump_opt_state (struct svndumpfilter_opt_state *opt_state,$/;"	f	file:
+eb	./subversion/libsvn_client/commit_util.c	/^  struct edit_baton *eb;$/;"	m	struct:item_baton	file:
+eb	./subversion/libsvn_ra_svn/editor.c	/^  ra_svn_edit_baton_t *eb;$/;"	m	file:
+eb	./subversion/libsvn_ra_svn/editorp.c	/^  ra_svn_edit_baton_t *eb;$/;"	m	file:
+edit_base_path	./subversion/libsvn_repos/delta.c	/^  const char *edit_base_path;$/;"	m	struct:context	file:
+edit_baton	./subversion/libsvn_client/commit_util.c	/^  void *edit_baton;                    \/* commit editor's baton *\/$/;"	m	struct:path_driver_cb_baton	file:
+edit_baton	./subversion/libsvn_client/commit_util.c	/^struct edit_baton$/;"	s	file:
+edit_baton	./subversion/libsvn_client/copy.c	/^  void *edit_baton;$/;"	m	struct:path_driver_cb_baton	file:
+edit_baton	./subversion/libsvn_client/export.c	/^  struct edit_baton *edit_baton;$/;"	m	struct:dir_baton	file:
+edit_baton	./subversion/libsvn_client/export.c	/^  struct edit_baton *edit_baton;$/;"	m	struct:file_baton	file:
+edit_baton	./subversion/libsvn_client/export.c	/^struct edit_baton$/;"	s	file:
+edit_baton	./subversion/libsvn_client/repos_diff.c	/^  struct edit_baton *edit_baton;$/;"	m	struct:dir_baton	file:
+edit_baton	./subversion/libsvn_client/repos_diff.c	/^  struct edit_baton *edit_baton;$/;"	m	struct:file_baton	file:
+edit_baton	./subversion/libsvn_client/repos_diff.c	/^struct edit_baton {$/;"	s	file:
+edit_baton	./subversion/libsvn_delta/cancel.c	/^  void *edit_baton;$/;"	m	struct:dir_baton	file:
+edit_baton	./subversion/libsvn_delta/cancel.c	/^  void *edit_baton;$/;"	m	struct:file_baton	file:
+edit_baton	./subversion/libsvn_delta/cancel.c	/^struct edit_baton$/;"	s	file:
+edit_baton	./subversion/libsvn_ra_dav/fetch.c	/^  void *edit_baton;$/;"	m	file:
+edit_baton	./subversion/libsvn_ra_svn/client.c	/^  void *edit_baton;$/;"	m	file:
+edit_baton	./subversion/libsvn_ra_svn/editor.c	/^  void *edit_baton;$/;"	m	file:
+edit_baton	./subversion/libsvn_ra_svn/editorp.c	/^  void *edit_baton;$/;"	m	file:
+edit_baton	./subversion/libsvn_repos/commit.c	/^  struct edit_baton *edit_baton;$/;"	m	struct:dir_baton	file:
+edit_baton	./subversion/libsvn_repos/commit.c	/^  struct edit_baton *edit_baton;$/;"	m	struct:file_baton	file:
+edit_baton	./subversion/libsvn_repos/commit.c	/^struct edit_baton$/;"	s	file:
+edit_baton	./subversion/libsvn_repos/dump.c	/^  struct edit_baton *edit_baton;$/;"	m	struct:dir_baton	file:
+edit_baton	./subversion/libsvn_repos/dump.c	/^struct edit_baton$/;"	s	file:
+edit_baton	./subversion/libsvn_repos/node_tree.c	/^  struct edit_baton *edit_baton;$/;"	m	struct:node_baton	file:
+edit_baton	./subversion/libsvn_repos/node_tree.c	/^struct edit_baton$/;"	s	file:
+edit_baton	./subversion/libsvn_repos/replay.c	/^  void *edit_baton;$/;"	m	struct:path_driver_cb_baton	file:
+edit_baton	./subversion/libsvn_wc/diff.c	/^  struct edit_baton *edit_baton;$/;"	m	struct:dir_baton	file:
+edit_baton	./subversion/libsvn_wc/diff.c	/^  struct edit_baton *edit_baton;$/;"	m	struct:file_baton	file:
+edit_baton	./subversion/libsvn_wc/diff.c	/^struct edit_baton {$/;"	s	file:
+edit_baton	./subversion/libsvn_wc/status.c	/^  struct edit_baton *edit_baton;$/;"	m	struct:dir_baton	file:
+edit_baton	./subversion/libsvn_wc/status.c	/^  struct edit_baton *edit_baton;$/;"	m	struct:file_baton	file:
+edit_baton	./subversion/libsvn_wc/status.c	/^struct edit_baton$/;"	s	file:
+edit_baton	./subversion/libsvn_wc/update_editor.c	/^  struct edit_baton *edit_baton;$/;"	m	struct:dir_baton	file:
+edit_baton	./subversion/libsvn_wc/update_editor.c	/^  struct edit_baton *edit_baton;$/;"	m	struct:file_baton	file:
+edit_baton	./subversion/libsvn_wc/update_editor.c	/^struct edit_baton$/;"	s	file:
+edit_baton	./subversion/tests/libsvn_repos/dir-delta-editor.c	/^  struct edit_baton *edit_baton;$/;"	m	struct:file_baton	file:
+edit_baton	./subversion/tests/libsvn_repos/dir-delta-editor.c	/^struct edit_baton$/;"	s	file:
+edit_baton	./subversion/tests/svn_test_editor.c	/^  struct edit_baton *edit_baton;$/;"	m	struct:node_baton	file:
+edit_baton	./subversion/tests/svn_test_editor.c	/^struct edit_baton$/;"	s	file:
+edit_key	./subversion/libsvn_fs/fs.h	/^  const char *edit_key;$/;"	m
+editor	./subversion/bindings/swig/swigutil_java.c	/^  jobject editor;       \/* the editor handling the callbacks *\/$/;"	m	file:
+editor	./subversion/bindings/swig/swigutil_pl.c	/^    SV *editor;     \/* the editor handling the callbacks *\/$/;"	m	file:
+editor	./subversion/bindings/swig/swigutil_py.c	/^  PyObject *editor;     \/* the editor handling the callbacks *\/$/;"	m	file:
+editor	./subversion/libsvn_client/commit_util.c	/^  const svn_delta_editor_t *editor;    \/* commit editor *\/$/;"	m	struct:path_driver_cb_baton	file:
+editor	./subversion/libsvn_client/copy.c	/^  const svn_delta_editor_t *editor;$/;"	m	struct:path_driver_cb_baton	file:
+editor	./subversion/libsvn_ra_dav/fetch.c	/^  const svn_delta_editor_t *editor;$/;"	m	file:
+editor	./subversion/libsvn_ra_svn/client.c	/^  const svn_delta_editor_t *editor;$/;"	m	file:
+editor	./subversion/libsvn_ra_svn/editor.c	/^  const svn_delta_editor_t *editor;$/;"	m	file:
+editor	./subversion/libsvn_ra_svn/editorp.c	/^  const svn_delta_editor_t *editor;$/;"	m	file:
+editor	./subversion/libsvn_repos/delta.c	/^  const svn_delta_editor_t *editor;$/;"	m	struct:context	file:
+editor	./subversion/libsvn_repos/replay.c	/^  const svn_delta_editor_t *editor;$/;"	m	struct:path_driver_cb_baton	file:
+editor_cmd	./subversion/clients/cmdline/cl.h	/^  const char *editor_cmd;        \/* external editor command. *\/$/;"	m	struct:svn_cl__opt_state_t
+editor_cmd	./subversion/clients/cmdline/util.c	/^  const char *editor_cmd;  \/* editor specified via --editor-cmd, else NULL *\/$/;"	m	struct:log_msg_baton	file:
+editor_name	./subversion/tests/svn_test_editor.c	/^  const char *editor_name;$/;"	m	struct:edit_baton	file:
+eldest	./subversion/libsvn_client/blame.c	/^  struct rev *eldest;      \/* The eldest revision processed *\/$/;"	m	struct:log_message_baton	file:
+elem_definitions	./subversion/libsvn_ra_dav/props.c	/^static const elem_defn elem_definitions[] =$/;"	v	file:
+elem_defn	./subversion/libsvn_ra_dav/props.c	/^} elem_defn;$/;"	t	file:
+element_converter_t	./subversion/bindings/swig/swigutil_pl.c	/^typedef SV *(*element_converter_t)(void *value, void *ctx);$/;"	t	file:
+elements	./subversion/libsvn_ra_dav/util.c	/^  const svn_ra_dav__xml_elm_t *elements;     \/* old-style elements table *\/$/;"	m	file:
+empty	./subversion/tests/libsvn_fs/skel-test.c	/^empty (apr_pool_t *pool)$/;"	f	file:
+empty_file	./subversion/libsvn_client/repos_diff.c	/^  const char *empty_file;$/;"	m	struct:edit_baton	file:
+empty_props_p	./subversion/libsvn_wc/props.c	/^empty_props_p (svn_boolean_t *empty_p,$/;"	f	file:
+encode_baton	./subversion/libsvn_subr/quoprint.c	/^struct encode_baton {$/;"	s	file:
+encode_baton	./subversion/libsvn_subr/svn_base64.c	/^struct encode_baton {$/;"	s	file:
+encode_bytes	./subversion/libsvn_subr/quoprint.c	/^encode_bytes (svn_stringbuf_t *str, const char *data, apr_size_t len,$/;"	f	file:
+encode_bytes	./subversion/libsvn_subr/svn_base64.c	/^encode_bytes (svn_stringbuf_t *str, const char *data, apr_size_t len,$/;"	f	file:
+encode_data	./subversion/libsvn_subr/quoprint.c	/^encode_data (void *baton, const char *data, apr_size_t *len)$/;"	f	file:
+encode_data	./subversion/libsvn_subr/svn_base64.c	/^encode_data (void *baton, const char *data, apr_size_t *len)$/;"	f	file:
+encode_group	./subversion/libsvn_subr/svn_base64.c	/^encode_group (const unsigned char *in, char *out)$/;"	f	file:
+encode_int	./subversion/libsvn_delta/svndiff.c	/^encode_int (char *p, svn_filesize_t val)$/;"	f	file:
+encode_partial_group	./subversion/libsvn_subr/svn_base64.c	/^encode_partial_group (svn_stringbuf_t *str, const unsigned char *extra,$/;"	f	file:
+encoder_baton	./subversion/libsvn_delta/svndiff.c	/^struct encoder_baton {$/;"	s	file:
+encoding	./subversion/clients/cmdline/cl.h	/^  const char *encoding;          \/* the locale\/encoding of the data*\/$/;"	m	struct:svn_cl__opt_state_t
+encoding	./subversion/libsvn_ra_dav/fetch.c	/^  svn_stringbuf_t *encoding;$/;"	m	file:
+encoding	./subversion/libsvn_ra_dav/props.c	/^  const char *encoding; \/* property encoding (or NULL) *\/$/;"	m	struct:propfind_ctx_t	file:
+end	./subversion/bindings/com/MarshalArray.h	/^        end()$/;"	f	class:CComDynamicMarshalledUnkArray
+end_element	./subversion/libsvn_ra_dav/fetch.c	/^static int end_element(void *userdata, int state,$/;"	f	file:
+end_element	./subversion/libsvn_ra_dav/merge.c	/^static int end_element(void *userdata, const svn_ra_dav__xml_elm_t *elm,$/;"	f	file:
+end_element	./subversion/libsvn_ra_dav/options.c	/^static int end_element(void *userdata, const svn_ra_dav__xml_elm_t *elm,$/;"	f	file:
+end_element	./subversion/libsvn_ra_dav/props.c	/^static int end_element(void *userdata, $/;"	f	file:
+end_err_element	./subversion/libsvn_ra_dav/util.c	/^static int end_err_element(void *userdata, const svn_ra_dav__xml_elm_t *elm,$/;"	f	file:
+end_handler	./subversion/libsvn_subr/xml.c	/^  svn_xml_end_elem end_handler;$/;"	m	struct:svn_xml_parser_t	file:
+end_revision	./subversion/clients/cmdline/cl.h	/^  svn_opt_revision_t start_revision, end_revision;$/;"	m	struct:svn_cl__opt_state_t
+end_revision	./subversion/svnadmin/main.c	/^  svn_opt_revision_t start_revision, end_revision;  \/* -r X[:Y] *\/$/;"	m	struct:svnadmin_opt_state	file:
+end_revision	./subversion/svndumpfilter/main.c	/^  svn_opt_revision_t end_revision;       \/* not implemented.    *\/$/;"	m	struct:svndumpfilter_opt_state	file:
+endelm_cb	./subversion/libsvn_ra_dav/util.c	/^  svn_ra_dav__xml_endelm_cb *endelm_cb;      \/* old-style endelm callback *\/$/;"	m	file:
+endp	./subversion/libsvn_diff/diff_file.c	/^  char       *endp[3];$/;"	m	struct:svn_diff3__file_output_baton_t	file:
+endp	./subversion/libsvn_diff/diff_file.c	/^  char *endp[4];$/;"	m	struct:svn_diff__file_baton_t	file:
+ensure_auth_dirs	./subversion/libsvn_subr/config_file.c	/^ensure_auth_dirs (const char *path,$/;"	f	file:
+entries	./subversion/libsvn_wc/entries.c	/^  apr_hash_t *entries; $/;"	m	struct:entries_accumulator	file:
+entries	./subversion/libsvn_wc/lock.c	/^  apr_hash_t *entries;$/;"	m	struct:svn_wc_adm_access_t	file:
+entries	./subversion/tests/fs-helpers.h	/^  svn_test__tree_entry_t *entries;$/;"	m	struct:svn_test__tree_t
+entries_accumulator	./subversion/libsvn_wc/entries.c	/^struct entries_accumulator$/;"	s	file:
+entries_hidden	./subversion/libsvn_wc/lock.c	/^  apr_hash_t *entries_hidden;$/;"	m	struct:svn_wc_adm_access_t	file:
+entries_modified	./subversion/libsvn_wc/log.c	/^  svn_boolean_t entries_modified;$/;"	m	struct:log_runner	file:
+entry	./subversion/include/svn_wc.h	/^  svn_wc_entry_t *entry;$/;"	m	struct:svn_wc_status_t
+entry	./subversion/libsvn_fs/tree.c	/^  char *entry;$/;"	m	struct:parent_path_t	file:
+entryLog	./subversion/bindings/java/javahl/native/JNIUtil.h	/^	enum { noLog, errorLog, exceptionLog, entryLog } LogLevel;$/;"	e	enum:JNIUtil::<anonymous>
+entry_props	./subversion/libsvn_repos/delta.c	/^  svn_boolean_t entry_props;$/;"	m	struct:context	file:
+entry_walk_callbacks	./subversion/clients/cmdline/info-cmd.c	/^entry_walk_callbacks =$/;"	v	file:
+env	./subversion/libsvn_fs/fs.h	/^  DB_ENV *env;$/;"	m	struct:svn_fs_t
+eol_style_val	./subversion/libsvn_client/export.c	/^  const svn_string_t *eol_style_val;$/;"	m	struct:file_baton	file:
+equal_string	./subversion/libsvn_client/diff.c	/^static const char equal_string[] = $/;"	v	file:
+equal_string	./subversion/svnlook/main.c	/^static const char equal_string[] = $/;"	v	file:
+erase_from_wc	./subversion/libsvn_wc/adm_ops.c	/^erase_from_wc (const char *path,$/;"	f	file:
+erase_unversioned_from_wc	./subversion/libsvn_wc/adm_ops.c	/^erase_unversioned_from_wc (const char *path,$/;"	f	file:
+err	./subversion/libsvn_client/delete.c	/^  svn_error_t *err; \/* the error generated for an undeletable path. *\/$/;"	m	struct:status_baton	file:
+err	./subversion/libsvn_ra_dav/fetch.c	/^  svn_error_t *err;             \/* propagate an error out of the reader *\/$/;"	m	file:
+err	./subversion/libsvn_ra_dav/fetch.c	/^  svn_error_t *err;$/;"	m	file:
+err	./subversion/libsvn_ra_dav/log.c	/^  svn_error_t *err;$/;"	m	struct:log_baton	file:
+err	./subversion/libsvn_ra_dav/merge.c	/^  svn_error_t *err;$/;"	m	file:
+err	./subversion/libsvn_ra_svn/editor.c	/^  svn_error_t *err;                     \/* Tracks delayed errors. *\/$/;"	m	file:
+err	./subversion/svnserve/serve.c	/^  svn_error_t *err;$/;"	m	file:
+err_abort	./subversion/libsvn_subr/error.c	/^static apr_status_t err_abort (void *data)$/;"	f	file:
+err_defn	./subversion/libsvn_subr/error.c	/^} err_defn;$/;"	t	file:
+errcode	./subversion/libsvn_subr/error.c	/^  svn_errno_t errcode;$/;"	m	file:
+errdesc	./subversion/libsvn_subr/error.c	/^  const char *errdesc;$/;"	m	file:
+errfile	./subversion/libsvn_client/diff.c	/^  apr_file_t *errfile;$/;"	m	struct:diff_cmd_baton	file:
+error	./subversion/libsvn_subr/xml.c	/^  svn_error_t *error;$/;"	m	struct:svn_xml_parser_t	file:
+errorLog	./subversion/bindings/java/javahl/native/JNIUtil.h	/^	enum { noLog, errorLog, exceptionLog, entryLog } LogLevel;$/;"	e	enum:JNIUtil::<anonymous>
+error_elements	./subversion/libsvn_ra_dav/util.c	/^static const svn_ra_dav__xml_elm_t error_elements[] =$/;"	v	file:
+error_file	./subversion/libsvn_subr/error.c	/^static const char *error_file = NULL;$/;"	v	file:
+error_info	./subversion/libsvn_delta/text_delta.c	/^  const char *error_info;       \/* Optional extra info for error returns. *\/$/;"	m	struct:apply_baton	file:
+error_line	./subversion/libsvn_subr/error.c	/^static long error_line = -1;$/;"	v	file:
+error_on_early_close	./subversion/libsvn_delta/svndiff.c	/^  svn_boolean_t error_on_early_close;$/;"	m	struct:decode_baton	file:
+estimate_unparsed_size	./subversion/libsvn_fs/util/skel.c	/^estimate_unparsed_size (skel_t *skel)$/;"	f	file:
+examine_copy_inheritance	./subversion/libsvn_fs/tree.c	/^examine_copy_inheritance (const char **copy_id,$/;"	f	file:
+exceptionLog	./subversion/bindings/java/javahl/native/JNIUtil.h	/^	enum { noLog, errorLog, exceptionLog, entryLog } LogLevel;$/;"	e	enum:JNIUtil::<anonymous>
+executable_val	./subversion/libsvn_client/export.c	/^  const svn_string_t *executable_val;$/;"	m	struct:file_baton	file:
+expand_author	./subversion/tests/libsvn_wc/translate-test.c	/^expand_author (const char **msg,$/;"	f	file:
+expand_author_date	./subversion/tests/libsvn_wc/translate-test.c	/^expand_author_date (const char **msg,$/;"	f	file:
+expand_author_date_rev_url	./subversion/tests/libsvn_wc/translate-test.c	/^expand_author_date_rev_url (const char **msg,$/;"	f	file:
+expand_author_rev	./subversion/tests/libsvn_wc/translate-test.c	/^expand_author_rev (const char **msg,$/;"	f	file:
+expand_date	./subversion/tests/libsvn_wc/translate-test.c	/^expand_date (const char **msg,$/;"	f	file:
+expand_option_value	./subversion/libsvn_subr/config.c	/^expand_option_value (svn_config_t *cfg, cfg_section_t *section,$/;"	f	file:
+expand_rev	./subversion/tests/libsvn_wc/translate-test.c	/^expand_rev (const char **msg,$/;"	f	file:
+expand_rev_url	./subversion/tests/libsvn_wc/translate-test.c	/^expand_rev_url (const char **msg,$/;"	f	file:
+expanded	./subversion/libsvn_subr/config.c	/^  svn_boolean_t expanded;$/;"	m	struct:cfg_option_t	file:
+expat_data_handler	./subversion/libsvn_subr/xml.c	/^static void expat_data_handler(void *userData, const XML_Char *s, int len)$/;"	f	file:
+expat_end_handler	./subversion/libsvn_subr/xml.c	/^static void expat_end_handler(void *userData, const XML_Char *name)$/;"	f	file:
+expat_start_handler	./subversion/libsvn_subr/xml.c	/^static void expat_start_handler(void *userData,$/;"	f	file:
+explicit_atom	./subversion/libsvn_fs/util/skel.c	/^explicit_atom (const char *data,$/;"	f	file:
+extend_with_adm_name	./subversion/libsvn_wc/adm_files.c	/^extend_with_adm_name (const char *path,$/;"	f	file:
+extensions	./subversion/clients/cmdline/cl.h	/^  const char *extensions;        \/* subprocess extension args *\/ \/* UTF-8! *\/$/;"	m	struct:svn_cl__opt_state_t
+externals	./subversion/libsvn_client/export.c	/^  apr_hash_t *externals;$/;"	m	struct:edit_baton	file:
+externals	./subversion/libsvn_wc/status.c	/^  apr_hash_t *externals;$/;"	m	struct:edit_baton	file:
+externals_new	./subversion/libsvn_client/externals.c	/^  apr_hash_t *externals_new;$/;"	m	struct:handle_externals_desc_change_baton	file:
+externals_new	./subversion/libsvn_wc/wc.h	/^  apr_hash_t *externals_new;$/;"	m	struct:svn_wc_traversal_info_t
+externals_old	./subversion/libsvn_client/externals.c	/^  apr_hash_t *externals_old;$/;"	m	struct:handle_externals_desc_change_baton	file:
+externals_old	./subversion/libsvn_wc/wc.h	/^  apr_hash_t *externals_old;$/;"	m	struct:svn_wc_traversal_info_t
+externals_prop_changed	./subversion/libsvn_wc/update_editor.c	/^externals_prop_changed (apr_array_header_t *propchanges)$/;"	f	file:
+f_mutex	./subversion/bindings/java/javahl/native/JNICriticalSection.h	/^	JNIMutex * f_mutex;$/;"	m	class:JNICriticalSection
+f_mutex	./subversion/bindings/java/javahl/native/JNIMutex.h	/^	apr_thread_mutex_t * f_mutex;$/;"	m	class:JNIMutex
+fail	./subversion/libsvn_ra_svn/cram.c	/^static svn_error_t *fail(svn_ra_svn_conn_t *conn, apr_pool_t *pool,$/;"	f	file:
+fail	./subversion/libsvn_ra_svn/gssapi.c	/^static svn_error_t *fail(svn_ra_svn_conn_t *conn, apr_pool_t *pool,$/;"	f	file:
+fail	./subversion/libsvn_ra_svn/gssapi.c	92;"	d	file:
+fail	./subversion/tests/libsvn_fs/skel-test.c	/^fail (apr_pool_t *pool, const char *fmt, ...)$/;"	f	file:
+fail	./subversion/tests/libsvn_subr/config-test.c	/^fail (apr_pool_t *pool, const char *fmt, ...)$/;"	f	file:
+fail	./subversion/tests/libsvn_subr/string-test.c	/^fail (apr_pool_t *pool, const char *fmt, ...)$/;"	f	file:
+failure_old_tests	./subversion/tests/libsvn_subr/time-test.c	/^static const char *failure_old_tests[] = {$/;"	v	file:
+failure_tests	./subversion/tests/libsvn_subr/time-test.c	/^static const char *failure_tests[] = {$/;"	v	file:
+false_keys	./subversion/tests/libsvn_subr/config-test.c	/^static const char *false_keys[] = {"false1", "false2", "false3", "false4",$/;"	v	file:
+fb	./subversion/libsvn_wc/update_editor.c	/^  struct file_baton *fb;$/;"	m	struct:handler_baton	file:
+fd	./subversion/libsvn_subr/config_file.c	/^  FILE *fd;$/;"	m	struct:parse_context_t	file:
+feedback_stream	./subversion/libsvn_repos/dump.c	/^  svn_stream_t *feedback_stream;$/;"	m	struct:edit_baton	file:
+fetch_content	./subversion/libsvn_ra_dav/fetch.c	/^  svn_boolean_t fetch_content;$/;"	m	file:
+fetch_file_reader	./subversion/libsvn_ra_dav/fetch.c	/^static void fetch_file_reader(void *userdata, const char *buf, size_t len)$/;"	f	file:
+fetch_props	./subversion/libsvn_ra_dav/commit.c	/^static const ne_propname fetch_props[] =$/;"	v	file:
+fetch_props	./subversion/libsvn_ra_dav/fetch.c	/^  svn_boolean_t fetch_props;$/;"	m	file:
+fetch_youngest_rev	./subversion/tests/libsvn_fs/fs-test.c	/^fetch_youngest_rev (const char **msg,$/;"	f	file:
+fetched_baseprops	./subversion/libsvn_wc/diff.c	/^  svn_boolean_t fetched_baseprops; \/* did we get the working props yet? *\/$/;"	m	struct:dir_baton	file:
+fetched_baseprops	./subversion/libsvn_wc/diff.c	/^  svn_boolean_t fetched_baseprops; \/* did we get the working props yet? *\/$/;"	m	struct:file_baton	file:
+file	./subversion/include/svn_types.h	/^  const char *file;$/;"	m	struct:svn_error_t
+file	./subversion/libsvn_diff/diff_file.c	/^  apr_file_t *file[2];$/;"	m	struct:svn_diff__file_output_baton_t	file:
+file	./subversion/libsvn_diff/diff_file.c	/^  apr_file_t *file[4];$/;"	m	struct:svn_diff__file_baton_t	file:
+file	./subversion/libsvn_subr/config_file.c	/^  const char *file;$/;"	m	struct:parse_context_t	file:
+file	./subversion/libsvn_subr/stream.c	/^  apr_file_t *file;$/;"	m	struct:baton_apr	file:
+file_added	./subversion/include/svn_wc.h	/^  svn_error_t *(*file_added) (svn_wc_adm_access_t *adm_access,$/;"	m	struct:svn_wc_diff_callbacks_t
+file_baton	./subversion/libsvn_client/commit_util.c	/^  void *file_baton;$/;"	m	struct:file_mod_t	file:
+file_baton	./subversion/libsvn_client/export.c	/^struct file_baton$/;"	s	file:
+file_baton	./subversion/libsvn_client/repos_diff.c	/^struct file_baton {$/;"	s	file:
+file_baton	./subversion/libsvn_delta/cancel.c	/^struct file_baton$/;"	s	file:
+file_baton	./subversion/libsvn_ra_dav/fetch.c	/^  void *file_baton;$/;"	m	file:
+file_baton	./subversion/libsvn_repos/commit.c	/^struct file_baton$/;"	s	file:
+file_baton	./subversion/libsvn_wc/diff.c	/^struct file_baton {$/;"	s	file:
+file_baton	./subversion/libsvn_wc/status.c	/^struct file_baton$/;"	s	file:
+file_baton	./subversion/libsvn_wc/update_editor.c	/^struct file_baton$/;"	s	file:
+file_baton	./subversion/tests/libsvn_repos/dir-delta-editor.c	/^struct file_baton$/;"	s	file:
+file_changed	./subversion/include/svn_wc.h	/^  svn_error_t *(*file_changed) (svn_wc_adm_access_t *adm_access,$/;"	m	struct:svn_wc_diff_callbacks_t
+file_checksum_args	./subversion/libsvn_fs/tree.c	/^struct file_checksum_args$/;"	s	file:
+file_contents_baton_t	./subversion/libsvn_fs/tree.c	/^typedef struct file_contents_baton_t$/;"	s	file:
+file_contents_baton_t	./subversion/libsvn_fs/tree.c	/^} file_contents_baton_t;$/;"	t	file:
+file_deleted	./subversion/include/svn_wc.h	/^  svn_error_t *(*file_deleted) (svn_wc_adm_access_t *adm_access,$/;"	m	struct:svn_wc_diff_callbacks_t
+file_diff	./subversion/libsvn_wc/diff.c	/^file_diff (struct dir_baton *dir_baton,$/;"	f	file:
+file_end_revision	./subversion/libsvn_client/repos_diff.c	/^  apr_file_t *file_end_revision;$/;"	m	struct:file_baton	file:
+file_integrity_helper	./subversion/tests/libsvn_fs/fs-test.c	/^file_integrity_helper (apr_size_t filesize, apr_uint32_t *seed,$/;"	f	file:
+file_length_args	./subversion/libsvn_fs/tree.c	/^struct file_length_args$/;"	s	file:
+file_mod_t	./subversion/libsvn_client/commit_util.c	/^struct file_mod_t$/;"	s	file:
+file_mods	./subversion/libsvn_client/commit_util.c	/^  apr_hash_t *file_mods;               \/* hash: path->file_mod_t *\/$/;"	m	struct:path_driver_cb_baton	file:
+file_name_get	./subversion/libsvn_subr/io.c	/^file_name_get (const char **fname_utf8, apr_file_t *file, apr_pool_t *pool)$/;"	f	file:
+file_pool	./subversion/libsvn_ra_dav/fetch.c	/^  apr_pool_t *file_pool;$/;"	m	file:
+file_printf_from_utf8	./subversion/libsvn_client/diff.c	/^file_printf_from_utf8 (apr_file_t *fptr, const char *format, ...)$/;"	f	file:
+file_read_ctx_t	./subversion/libsvn_ra_dav/fetch.c	/^} file_read_ctx_t;$/;"	t	file:
+file_start_revision	./subversion/libsvn_client/repos_diff.c	/^  apr_file_t *file_start_revision;$/;"	m	struct:file_baton	file:
+file_stream	./subversion/libsvn_fs/tree.c	/^  svn_stream_t *file_stream;$/;"	m	struct:file_contents_baton_t	file:
+file_stream	./subversion/libsvn_fs/tree.c	/^  svn_stream_t *file_stream;$/;"	m	struct:text_baton_t	file:
+file_write_ctx_t	./subversion/libsvn_ra_dav/fetch.c	/^} file_write_ctx_t;$/;"	t	file:
+file_xfer_under_path	./subversion/libsvn_wc/log.c	/^file_xfer_under_path (svn_wc_adm_access_t *adm_access,$/;"	f	file:
+filedata	./subversion/clients/cmdline/cl.h	/^  svn_stringbuf_t *filedata;     \/* contents of file used as option data *\/$/;"	m	struct:svn_cl__opt_state_t
+filename	./subversion/libsvn_client/add.c	/^  const char *filename;$/;"	m	file:
+filter	./subversion/libsvn_ra_svn/gssapi.c	/^    struct svn_ra_conn_filter_st filter;$/;"	m	struct:gssapi_filter	file:
+filter	./subversion/libsvn_ra_svn/ra_svn.h	/^  struct svn_ra_conn_filter_st *filter;$/;"	m	struct:svn_ra_svn_conn_st
+filter_props	./subversion/libsvn_ra_dav/fetch.c	/^filter_props (apr_hash_t *props,$/;"	f	file:
+filtering_vtable	./subversion/svndumpfilter/main.c	/^svn_repos_parser_fns_t filtering_vtable =$/;"	v
+finalized	./subversion/libsvn_fs/reps-strings.c	/^  svn_boolean_t finalized;$/;"	m	struct:rep_write_baton	file:
+find_child_by_name	./subversion/libsvn_repos/node_tree.c	/^find_child_by_name (svn_repos_node_t *parent, $/;"	f	file:
+find_match_len	./subversion/libsvn_delta/vdelta.c	/^find_match_len (const char *match, const char *from, const char *end)$/;"	f	file:
+find_matching_string	./subversion/libsvn_subr/time.c	/^find_matching_string (char *str, apr_size_t size, const char strings[][4])$/;"	f	file:
+find_mech	./subversion/libsvn_ra_svn/client.c	/^static svn_boolean_t find_mech(apr_array_header_t *mechlist, const char *mech)$/;"	f	file:
+find_option	./subversion/libsvn_subr/config.c	/^find_option (svn_config_t *cfg, const char *section, const char *option,$/;"	f	file:
+find_real_base_location	./subversion/libsvn_repos/node_tree.c	/^find_real_base_location (const char **path_p,$/;"	f	file:
+find_repos	./subversion/svnserve/serve.c	/^static svn_error_t *find_repos(const char *url, const char *root,$/;"	f	file:
+find_rule	./subversion/libsvn_subr/date.c	/^find_rule (char tchar)$/;"	f	file:
+find_tunnel_agent	./subversion/libsvn_ra_svn/client.c	/^static svn_error_t *find_tunnel_agent(const char *tunnel, const char *user,$/;"	f	file:
+find_undeletables	./subversion/libsvn_client/delete.c	/^find_undeletables (void *baton,$/;"	f	file:
+fingerprint	./subversion/include/svn_auth.h	/^  const char *fingerprint;$/;"	m	struct:svn_auth_ssl_server_cert_info_t
+finish_decoding_data	./subversion/libsvn_subr/quoprint.c	/^finish_decoding_data (void *baton)$/;"	f	file:
+finish_decoding_data	./subversion/libsvn_subr/svn_base64.c	/^finish_decoding_data (void *baton)$/;"	f	file:
+finish_encoding_data	./subversion/libsvn_subr/quoprint.c	/^finish_encoding_data (void *baton)$/;"	f	file:
+finish_encoding_data	./subversion/libsvn_subr/svn_base64.c	/^finish_encoding_data (void *baton)$/;"	f	file:
+finish_report	./subversion/include/svn_ra.h	/^  svn_error_t *(*finish_report) (void *report_baton,$/;"	m	struct:svn_ra_reporter_t
+finish_report	./subversion/libsvn_repos/reporter.c	/^finish_report (void *report_baton,$/;"	f	file:
+finish_report	./subversion/svnserve/serve.c	/^static svn_error_t *finish_report(svn_ra_svn_conn_t *conn, apr_pool_t *pool,$/;"	f	file:
+first_credentials	./subversion/include/svn_auth.h	/^  svn_error_t * (*first_credentials) (void **credentials,$/;"	m	struct:svn_auth_provider_t
+flags	./subversion/libsvn_ra_dav/ra_dav.h	/^  unsigned int flags;$/;"	m
+fname	./subversion/libsvn_ra_dav/commit.c	/^  svn_stringbuf_t *fname;$/;"	m	file:
+fold_change	./subversion/libsvn_fs/bdb/changes-table.c	/^fold_change (apr_hash_t *changes,$/;"	f	file:
+fold_entry	./subversion/libsvn_wc/entries.c	/^fold_entry (apr_hash_t *entries,$/;"	f	file:
+fold_scheduling	./subversion/libsvn_wc/entries.c	/^fold_scheduling (apr_hash_t *entries,$/;"	f	file:
+for_each_option	./subversion/libsvn_subr/config.c	/^for_each_option (svn_config_t *cfg, void *baton, apr_pool_t *pool,$/;"	f	file:
+force	./subversion/clients/cmdline/cl.h	/^  svn_boolean_t force;           \/* be more forceful, as in "svn rm -f ..." *\/$/;"	m	struct:svn_cl__opt_state_t
+force	./subversion/libsvn_client/diff.c	/^  svn_boolean_t force;$/;"	m	struct:merge_cmd_baton	file:
+force	./subversion/libsvn_client/export.c	/^  svn_boolean_t force;$/;"	m	struct:edit_baton	file:
+force_diff_output	./subversion/libsvn_client/diff.c	/^  svn_boolean_t force_diff_output;$/;"	m	struct:diff_cmd_baton	file:
+force_log	./subversion/clients/cmdline/cl.h	/^  svn_boolean_t force_log;       \/* force validity of a suspect log msg file *\/$/;"	m	struct:svn_cl__opt_state_t
+formatBufferSize	./subversion/bindings/java/javahl/native/JNIUtil.h	/^	enum { formatBufferSize = 2048 };$/;"	e	enum:JNIUtil::<anonymous>
+found_entry	./subversion/include/svn_wc.h	/^  svn_error_t *(*found_entry) (const char *path,$/;"	m	struct:svn_wc_entry_callbacks_t
+free_block	./subversion/libsvn_delta/compose_delta.c	/^free_block (void *ptr, alloc_block_t **free_list)$/;"	f	file:
+free_list	./subversion/libsvn_delta/compose_delta.c	/^  alloc_block_t *free_list;$/;"	m	struct:range_index_t	file:
+free_range_index_node	./subversion/libsvn_delta/compose_delta.c	/^free_range_index_node (range_index_t *ndx, range_index_node_t *node)$/;"	f	file:
+free_range_list	./subversion/libsvn_delta/compose_delta.c	/^free_range_list (range_list_node_t *list, range_index_t *ndx)$/;"	f	file:
+from_path	./subversion/libsvn_fs/tree.c	/^  const char *from_path;$/;"	m	struct:copy_args	file:
+from_root	./subversion/libsvn_fs/tree.c	/^  svn_fs_root_t *from_root;$/;"	m	struct:copy_args	file:
+fs	./subversion/libsvn_fs/dag.c	/^  svn_fs_t *fs;$/;"	m	struct:dag_node_t	file:
+fs	./subversion/libsvn_fs/reps-strings.c	/^  svn_fs_t *fs;$/;"	m	struct:rep_read_baton	file:
+fs	./subversion/libsvn_fs/reps-strings.c	/^  svn_fs_t *fs;$/;"	m	struct:rep_write_baton	file:
+fs	./subversion/libsvn_fs/reps-strings.c	/^  svn_fs_t *fs;$/;"	m	struct:write_svndiff_strings_baton	file:
+fs	./subversion/libsvn_fs/revs-txns.c	/^  svn_fs_t *fs;$/;"	m	struct:change_txn_prop_args	file:
+fs	./subversion/libsvn_fs/revs-txns.h	/^  svn_fs_t *fs;$/;"	m	struct:svn_fs_txn_t
+fs	./subversion/libsvn_fs/trail.h	/^  svn_fs_t *fs;$/;"	m	struct:trail_t
+fs	./subversion/libsvn_fs/tree.c	/^  svn_fs_t *fs; \/* the filesystem *\/$/;"	m	struct:deltify_committed_args	file:
+fs	./subversion/libsvn_fs/tree.c	/^  svn_fs_t *fs;$/;"	m	struct:svn_fs_history_t	file:
+fs	./subversion/libsvn_fs/tree.c	/^  svn_fs_t *fs;$/;"	m	struct:svn_fs_root_t	file:
+fs	./subversion/libsvn_ra_local/ra_local.h	/^  svn_fs_t *fs;$/;"	m	struct:svn_ra_local__session_baton_t
+fs	./subversion/libsvn_ra_local/ra_plugin.c	/^  svn_fs_t *fs;                    \/* the fs to deltify in *\/$/;"	m	struct:deltify_etc_baton	file:
+fs	./subversion/libsvn_repos/commit.c	/^  svn_fs_t *fs;$/;"	m	struct:edit_baton	file:
+fs	./subversion/libsvn_repos/load.c	/^  svn_fs_t *fs;$/;"	m	struct:parse_baton	file:
+fs	./subversion/libsvn_repos/node_tree.c	/^  svn_fs_t *fs;$/;"	m	struct:edit_baton	file:
+fs	./subversion/libsvn_repos/repos.h	/^  svn_fs_t *fs;$/;"	m	struct:svn_repos_t
+fs	./subversion/mod_dav_svn/dav_svn.h	/^  svn_fs_t *fs;$/;"	m
+fs	./subversion/svnlook/main.c	/^  svn_fs_t *fs;$/;"	m	struct:print_history_baton	file:
+fs	./subversion/svnlook/main.c	/^  svn_fs_t *fs;$/;"	m	struct:svnlook_ctxt_t	file:
+fs	./subversion/svnserve/serve.c	/^  svn_fs_t *fs;            \/* For convenience; same as svn_repos_fs(repos) *\/$/;"	m	file:
+fs	./subversion/tests/libsvn_fs/changes-test.c	/^  svn_fs_t *fs;$/;"	m	struct:changes_args	file:
+fs	./subversion/tests/libsvn_fs/fs-test.c	/^  svn_fs_t *fs;$/;"	m	struct:check_id_args	file:
+fs	./subversion/tests/libsvn_fs/fs-test.c	/^  svn_fs_t *fs;$/;"	m	struct:get_txn_args	file:
+fs	./subversion/tests/libsvn_fs/strings-reps-test.c	/^  svn_fs_t *fs;$/;"	m	struct:rep_args	file:
+fs	./subversion/tests/libsvn_fs/strings-reps-test.c	/^  svn_fs_t *fs;$/;"	m	struct:string_args	file:
+fs	./subversion/tests/libsvn_repos/dir-delta-editor.c	/^  svn_fs_t *fs;$/;"	m	struct:edit_baton	file:
+fs_parent_path	./subversion/mod_dav_svn/mod_dav_svn.c	/^  const char *fs_parent_path;   \/* path to parent of SVN FS'es  *\/$/;"	m	file:
+fs_path	./subversion/libsvn_ra_local/ra_local.h	/^  const char *fs_path;$/;"	m	struct:svn_ra_local__session_baton_t
+fs_path	./subversion/mod_dav_svn/dav_svn.h	/^  const char *fs_path;$/;"	m
+fs_path	./subversion/mod_dav_svn/mod_dav_svn.c	/^  const char *fs_path;          \/* path to the SVN FS *\/$/;"	m	file:
+fs_path	./subversion/svnserve/serve.c	/^  const char *fs_path;     \/* Decoded base path inside repository *\/$/;"	m	file:
+fs_path	./subversion/svnserve/serve.c	/^  const char *fs_path;$/;"	m	file:
+fs_root	./subversion/libsvn_repos/dump.c	/^  svn_fs_root_t *fs_root;$/;"	m	struct:edit_baton	file:
+fs_warning_handler	./subversion/tests/fs-helpers.c	/^fs_warning_handler (void *baton, svn_error_t *err)$/;"	f	file:
+fulltext	./subversion/libsvn_fs/fs.h	/^    } fulltext;$/;"	m
+func	./subversion/include/svn_test.h	/^  svn_test_driver_t func;$/;"	m	struct:svn_test_descriptor_t
+func	./subversion/libsvn_fs/trail.c	/^  void (*func) (void *baton);$/;"	m	struct:undo	file:
+g_AuExBatFile	./packages/win32-innosetup/tools/svnpath/main.c	/^static char g_AuExBatFile[17] = "C:\\\\Autoexec.bat";$/;"	v	file:
+g_AuExSvnFile	./packages/win32-innosetup/tools/svnpath/main.c	/^static char g_AuExSvnFile[17] = "C:\\\\Autoexec.svn";$/;"	v	file:
+g_cSvnLinePath	./packages/win32-innosetup/tools/svnpath/main.c	/^char g_cSvnLinePath[256];   \/*                                       *\/$/;"	v
+g_cSvnLineRem1	./packages/win32-innosetup/tools/svnpath/main.c	/^char g_cSvnLineRem1[80];    \/* Look at the svn_set_auexlines routine *\/$/;"	v
+g_cSvnLineRem2	./packages/win32-innosetup/tools/svnpath/main.c	/^char g_cSvnLineRem2[80];    \/* for setting the values                *\/$/;"	v
+g_finalizedObjects	./subversion/bindings/java/javahl/native/JNIUtil.h	/^	static std::list<SVNClient*> g_finalizedObjects;$/;"	m	class:JNIUtil
+g_finalizedObjectsMutex	./subversion/bindings/java/javahl/native/JNIUtil.h	/^	static JNIMutex *g_finalizedObjectsMutex;$/;"	m	class:JNIUtil
+g_globalPoolMutext	./subversion/bindings/java/javahl/native/JNIUtil.h	/^    static JNIMutex *g_globalPoolMutext;$/;"	m	class:JNIUtil
+g_inInit	./subversion/bindings/java/javahl/native/JNIUtil.h	/^	static bool g_inInit;$/;"	m	class:JNIUtil
+g_initEnv	./subversion/bindings/java/javahl/native/JNIUtil.h	/^	static JNIEnv *g_initEnv;$/;"	m	class:JNIUtil
+g_initException	./subversion/bindings/java/javahl/native/JNIUtil.h	/^	static bool g_initException;$/;"	m	class:JNIUtil
+g_initFormatBuffer	./subversion/bindings/java/javahl/native/JNIUtil.h	/^	static char g_initFormatBuffer[formatBufferSize];$/;"	m	class:JNIUtil
+g_key	./subversion/bindings/java/javahl/native/JNIThreadData.h	/^	static apr_threadkey_t * g_key;$/;"	m	class:JNIThreadData
+g_logLevel	./subversion/bindings/java/javahl/native/JNIUtil.h	/^	static int g_logLevel;$/;"	m	class:JNIUtil
+g_logMutex	./subversion/bindings/java/javahl/native/JNIUtil.h	/^	static JNIMutex *g_logMutex;$/;"	m	class:JNIUtil
+g_logStream	./subversion/bindings/java/javahl/native/JNIUtil.h	/^	static std::ofstream g_logStream;$/;"	m	class:JNIUtil
+g_pool	./subversion/bindings/java/javahl/native/JNIUtil.h	/^	static apr_pool_t* g_pool;$/;"	m	class:JNIUtil
+gen_implicit_length_all_chars	./subversion/tests/libsvn_fs/skel-test.c	/^gen_implicit_length_all_chars (apr_size_t *len_p)$/;"	f	file:
+generate_delta_tree	./subversion/svnlook/main.c	/^generate_delta_tree (svn_repos_node_t **tree,$/;"	f	file:
+generate_label	./subversion/svnlook/main.c	/^generate_label (const char **label,$/;"	f	file:
+generate_random_file	./subversion/tests/libsvn_delta/random-test.c	/^generate_random_file (apr_uint32_t maxlen,$/;"	f	file:
+generate_status_code	./subversion/clients/cmdline/status.c	/^generate_status_code (enum svn_wc_status_kind status)$/;"	f	file:
+generate_test_bytes	./subversion/tests/libsvn_subr/stream-test.c	/^generate_test_bytes(int num_bytes, apr_pool_t *pool)$/;"	f	file:
+get_access	./subversion/svnserve/serve.c	/^static enum access_type get_access(server_baton_t *b, enum authn_type auth)$/;"	f	file:
+get_activity_collection	./subversion/libsvn_ra_dav/commit.c	/^static svn_error_t * get_activity_collection(commit_ctx_t *cc,$/;"	f	file:
+get_all	./subversion/libsvn_wc/status.c	/^  svn_boolean_t get_all;$/;"	m	struct:edit_baton	file:
+get_array_size	./subversion/tests/svn_tests_main.c	/^get_array_size (void)$/;"	f	file:
+get_attr	./subversion/libsvn_ra_dav/fetch.c	/^static const char *get_attr(const char **atts, const char *which)$/;"	f	file:
+get_attr	./subversion/libsvn_ra_dav/log.c	/^static const char *get_attr(const char **atts, const char *which)$/;"	f	file:
+get_bucket	./subversion/libsvn_delta/vdelta.c	/^get_bucket (const hash_table_t *table, const char *key)$/;"	f	file:
+get_category_config	./subversion/libsvn_subr/config.c	/^get_category_config (svn_config_t **cfg,$/;"	f	file:
+get_chunk_offset	./subversion/libsvn_fs/reps-strings.c	/^get_chunk_offset (svn_fs__representation_t *rep,$/;"	f	file:
+get_commit_editor	./subversion/include/svn_ra.h	/^  svn_error_t *(*get_commit_editor) (void *session_baton,$/;"	m	struct:svn_ra_plugin_t
+get_copy_inheritance	./subversion/libsvn_fs/tree.c	/^get_copy_inheritance (copy_id_inherit_t *inherit_p,$/;"	f	file:
+get_ctxt_baton	./subversion/svnlook/main.c	/^get_ctxt_baton (svnlook_ctxt_t **baton_p,$/;"	f	file:
+get_dag	./subversion/libsvn_fs/tree.c	/^get_dag (dag_node_t **dag_node_p,$/;"	f	file:
+get_dated_rev	./subversion/svnserve/serve.c	/^static svn_error_t *get_dated_rev(svn_ra_svn_conn_t *conn, apr_pool_t *pool,$/;"	f	file:
+get_dated_revision	./subversion/include/svn_ra.h	/^  svn_error_t *(*get_dated_revision) (void *session_baton,$/;"	m	struct:svn_ra_plugin_t
+get_delta_base	./subversion/libsvn_ra_dav/fetch.c	/^static svn_error_t *get_delta_base(const char **delta_base,$/;"	f	file:
+get_dir	./subversion/include/svn_ra.h	/^  svn_error_t *(*get_dir) (void *session_baton,$/;"	m	struct:svn_ra_plugin_t
+get_dir	./subversion/svnserve/serve.c	/^static svn_error_t *get_dir(svn_ra_svn_conn_t *conn, apr_pool_t *pool,$/;"	f	file:
+get_dir_contents	./subversion/libsvn_client/ls.c	/^get_dir_contents (apr_hash_t *dirents,$/;"	f	file:
+get_dir_entries	./subversion/libsvn_fs/dag.c	/^get_dir_entries (apr_hash_t **entries_p,$/;"	f	file:
+get_dir_entries	./subversion/tests/fs-helpers.c	/^get_dir_entries (apr_hash_t *tree_entries,$/;"	f	file:
+get_dir_status	./subversion/libsvn_wc/status.c	/^get_dir_status (struct edit_baton *eb,$/;"	f	file:
+get_dirents_args	./subversion/libsvn_fs/revs-txns.c	/^struct get_dirents_args$/;"	s	file:
+get_dirprops_from_ra	./subversion/libsvn_client/repos_diff.c	/^get_dirprops_from_ra (struct dir_baton *b)$/;"	f	file:
+get_dump_editor	./subversion/libsvn_repos/dump.c	/^get_dump_editor (const svn_delta_editor_t **editor,$/;"	f	file:
+get_empty_file	./subversion/libsvn_client/repos_diff.c	/^get_empty_file (struct edit_baton *b,$/;"	f	file:
+get_empty_string	./subversion/tests/libsvn_fs/skel-test.c	/^get_empty_string (apr_pool_t *pool)$/;"	f	file:
+get_entry_url	./subversion/libsvn_wc/update_editor.c	/^get_entry_url (svn_wc_adm_access_t *associated_access,$/;"	f	file:
+get_file	./subversion/include/svn_ra.h	/^  svn_error_t *(*get_file) (void *session_baton,$/;"	m	struct:svn_ra_plugin_t
+get_file	./subversion/svnserve/serve.c	/^static svn_error_t *get_file(svn_ra_svn_conn_t *conn, apr_pool_t *pool,$/;"	f	file:
+get_file_digest	./subversion/tests/libsvn_fs/fs-test.c	/^get_file_digest (unsigned char digest[APR_MD5_DIGESTSIZE],$/;"	f	file:
+get_file_from_ra	./subversion/libsvn_client/repos_diff.c	/^get_file_from_ra (struct file_baton *b)$/;"	f	file:
+get_file_mime_types	./subversion/libsvn_client/repos_diff.c	/^get_file_mime_types (const char **mimetype1,$/;"	f	file:
+get_file_reader	./subversion/libsvn_ra_dav/fetch.c	/^static void get_file_reader(void *userdata, const char *buf, size_t len)$/;"	f	file:
+get_from_path_map	./subversion/libsvn_repos/reporter.c	/^static const char *get_from_path_map(apr_hash_t *hash,$/;"	f	file:
+get_from_path_map	./subversion/mod_dav_svn/update.c	/^static const char *get_from_path_map(apr_hash_t *hash,$/;"	f	file:
+get_fs_path	./subversion/svnserve/serve.c	/^static svn_error_t *get_fs_path(const char *repos_url, const char *url,$/;"	f	file:
+get_func	./subversion/libsvn_ra_dav/commit.c	/^  svn_ra_get_wc_prop_func_t get_func;$/;"	m	file:
+get_ideal_changes	./subversion/tests/libsvn_fs/changes-test.c	/^get_ideal_changes (const char *txn_id,$/;"	f	file:
+get_key_and_bump	./subversion/libsvn_fs/bdb/strings-table.c	/^get_key_and_bump (svn_fs_t *fs, const char **key, trail_t *trail)$/;"	f	file:
+get_last_history_rev	./subversion/mod_dav_svn/util.c	/^get_last_history_rev (svn_revnum_t *revision,$/;"	f	file:
+get_latest_rev	./subversion/svnserve/serve.c	/^static svn_error_t *get_latest_rev(svn_ra_svn_conn_t *conn, apr_pool_t *pool,$/;"	f	file:
+get_latest_revnum	./subversion/include/svn_ra.h	/^  svn_error_t *(*get_latest_revnum) (void *session_baton,$/;"	m	struct:svn_ra_plugin_t
+get_local_mimetypes	./subversion/libsvn_wc/diff.c	/^get_local_mimetypes (const char **pristine_mimetype,$/;"	f	file:
+get_log	./subversion/include/svn_ra.h	/^  svn_error_t *(*get_log) (void *session_baton,$/;"	m	struct:svn_ra_plugin_t
+get_name	./subversion/mod_dav_svn/deadprops.c	/^static void get_name(dav_db *db, dav_prop_name *pname)$/;"	f	file:
+get_next_length	./subversion/libsvn_fs/bdb/strings-table.c	/^get_next_length (apr_size_t *length, DBC *cursor, DBT *query)$/;"	f	file:
+get_node_props	./subversion/libsvn_ra_local/ra_plugin.c	/^get_node_props (apr_hash_t **props,$/;"	f	file:
+get_node_revision	./subversion/libsvn_fs/dag.c	/^get_node_revision (svn_fs__node_revision_t **noderev_p,$/;"	f	file:
+get_ntou_xlate_handle	./subversion/libsvn_subr/utf.c	/^get_ntou_xlate_handle (apr_xlate_t **ret, apr_pool_t *pool)$/;"	f	file:
+get_one_window	./subversion/libsvn_fs/reps-strings.c	/^get_one_window (struct compose_handler_baton *cb,$/;"	f	file:
+get_os_username	./subversion/libsvn_client/simple_providers.c	/^get_os_username (apr_pool_t *pool)$/;"	f	file:
+get_parent_access	./subversion/libsvn_client/repos_diff.c	/^get_parent_access (svn_wc_adm_access_t **parent_access,$/;"	f	file:
+get_path_access	./subversion/libsvn_client/repos_diff.c	/^get_path_access (svn_wc_adm_access_t **path_access,$/;"	f	file:
+get_path_ancestor_length	./subversion/libsvn_subr/path.c	/^get_path_ancestor_length (const char *path1,$/;"	f	file:
+get_path_encoding	./subversion/libsvn_subr/path.c	/^get_path_encoding (svn_boolean_t *path_is_utf8, apr_pool_t *pool)$/;"	f	file:
+get_path_revision	./subversion/libsvn_repos/delta.c	/^get_path_revision (svn_fs_root_t *root,$/;"	f	file:
+get_property	./subversion/svnlook/main.c	/^get_property (svn_string_t **prop_value \/* native *\/,$/;"	f	file:
+get_props	./subversion/svnserve/serve.c	/^static svn_error_t *get_props(apr_hash_t **props, svn_fs_root_t *root,$/;"	f	file:
+get_ra_editor	./subversion/libsvn_client/commit.c	/^get_ra_editor (void **ra_baton, $/;"	f	file:
+get_ra_local_plugin	./subversion/tests/libsvn_ra_local/ra-local-test.c	/^get_ra_local_plugin (svn_ra_plugin_t **plugin)$/;"	f	file:
+get_readability	./subversion/libsvn_repos/fs-wrap.c	/^get_readability (int *can_read,$/;"	f	file:
+get_real_fs_path	./subversion/mod_dav_svn/update.c	/^get_real_fs_path(item_baton_t *baton, apr_pool_t *pool)$/;"	f	file:
+get_repos	./subversion/libsvn_repos/repos.c	/^get_repos (svn_repos_t **repos_p,$/;"	f	file:
+get_repos_path	./subversion/mod_dav_svn/deadprops.c	/^static const char *get_repos_path (struct dav_resource_private *info)$/;"	f	file:
+get_repos_propname	./subversion/mod_dav_svn/deadprops.c	/^static void get_repos_propname(dav_db *db, const dav_prop_name *name,$/;"	f	file:
+get_repos_root	./subversion/include/svn_ra.h	/^  svn_error_t *(*get_repos_root) (void *session_baton,$/;"	m	struct:svn_ra_plugin_t
+get_rev_txn	./subversion/libsvn_fs/revs-txns.c	/^get_rev_txn (svn_fs__transaction_t **txn_p,$/;"	f	file:
+get_root	./subversion/svnlook/main.c	/^get_root (svn_fs_root_t **root,$/;"	f	file:
+get_root_args	./subversion/libsvn_fs/tree.c	/^struct get_root_args$/;"	s	file:
+get_server_settings	./subversion/libsvn_ra_dav/session.c	/^static svn_error_t *get_server_settings(const char **proxy_host,$/;"	f	file:
+get_test_editor	./subversion/libsvn_client/commit_util.c	/^get_test_editor (const svn_delta_editor_t **editor,$/;"	f	file:
+get_time	./subversion/libsvn_repos/rev_hunt.c	/^get_time (apr_time_t *tm,$/;"	f	file:
+get_txn	./subversion/libsvn_fs/revs-txns.c	/^get_txn (svn_fs__transaction_t **txn_p,$/;"	f	file:
+get_txn_args	./subversion/tests/libsvn_fs/fs-test.c	/^struct get_txn_args$/;"	s	file:
+get_uton_xlate_handle	./subversion/libsvn_subr/utf.c	/^get_uton_xlate_handle (apr_xlate_t **ret, apr_pool_t *pool)$/;"	f	file:
+get_uuid	./subversion/include/svn_ra.h	/^  svn_error_t *(*get_uuid) (void *session_baton,$/;"	m	struct:svn_ra_plugin_t
+get_uuid_args	./subversion/libsvn_fs/uuid.c	/^struct get_uuid_args $/;"	s	file:
+get_value	./subversion/mod_dav_svn/deadprops.c	/^static dav_error *get_value(dav_db *db, const dav_prop_name *name,$/;"	f	file:
+get_version_url	./subversion/libsvn_ra_dav/commit.c	/^static svn_error_t * get_version_url(commit_ctx_t *cc,$/;"	f	file:
+get_wc_prop	./subversion/include/svn_ra.h	/^  svn_ra_get_wc_prop_func_t get_wc_prop;$/;"	m	struct:svn_ra_callbacks_t
+get_wc_prop	./subversion/libsvn_client/ra.c	/^get_wc_prop (void *baton,$/;"	f	file:
+get_xlate_handle	./subversion/libsvn_subr/utf.c	/^get_xlate_handle (apr_xlate_t **ret,$/;"	f	file:
+get_youngest_rev	./subversion/tests/libsvn_ra_local/ra-local-test.c	/^get_youngest_rev (const char **msg)$/;"	f	file:
+getetag_pathetic	./subversion/mod_dav_svn/repos.c	/^static const char * getetag_pathetic(const dav_resource *resource)$/;"	f	file:
+gmt_tests	./subversion/tests/libsvn_subr/time-test.c	/^static struct date_test gmt_tests[] = {$/;"	v	file:
+got_first	./subversion/libsvn_subr/auth.c	/^  svn_boolean_t got_first;      \/* did we get the provider's first creds? *\/$/;"	m	struct:svn_auth_iterstate_t	file:
+got_status	./subversion/libsvn_ra_svn/editorp.c	/^  svn_boolean_t got_status;$/;"	m	file:
+group_contains_user	./subversion/mod_authz_svn/mod_authz_svn.c	/^static int group_contains_user(svn_config_t *cfg,$/;"	f	file:
+gss_fail	./subversion/libsvn_ra_svn/gssapi.c	/^static svn_error_t *gss_fail(svn_ra_svn_conn_t *conn, apr_pool_t *pool,$/;"	f	file:
+gss_fail	./subversion/libsvn_ra_svn/gssapi.c	91;"	d	file:
+gssapi_filter	./subversion/libsvn_ra_svn/gssapi.c	/^struct gssapi_filter {$/;"	s	file:
+gut_directory	./subversion/libsvn_repos/reporter.c	/^gut_directory (const char *path,$/;"	f	file:
+had_dropped_nodes	./subversion/svndumpfilter/main.c	/^  svn_boolean_t    had_dropped_nodes;$/;"	m	struct:revision_baton_t	file:
+handle_auth_request	./subversion/libsvn_ra_svn/client.c	/^static svn_error_t *handle_auth_request(ra_svn_session_baton_t *sess,$/;"	f	file:
+handle_child_process_error	./subversion/libsvn_ra_svn/client.c	/^static void handle_child_process_error(apr_pool_t *pool, apr_status_t status,$/;"	f	file:
+handle_dir_entry	./subversion/libsvn_wc/status.c	/^handle_dir_entry (struct edit_baton *eb,$/;"	f	file:
+handle_external_item_change	./subversion/libsvn_client/externals.c	/^handle_external_item_change (const void *key, apr_ssize_t klen,$/;"	f	file:
+handle_external_item_change_baton	./subversion/libsvn_client/externals.c	/^struct handle_external_item_change_baton$/;"	s	file:
+handle_externals_desc_change	./subversion/libsvn_client/externals.c	/^handle_externals_desc_change (const void *key, apr_ssize_t klen,$/;"	f	file:
+handle_externals_desc_change_baton	./subversion/libsvn_client/externals.c	/^struct handle_externals_desc_change_baton$/;"	s	file:
+handle_resource	./subversion/libsvn_ra_dav/merge.c	/^static svn_error_t * handle_resource(merge_ctx_t *mc,$/;"	f	file:
+handle_start_tag	./subversion/libsvn_wc/entries.c	/^handle_start_tag (void *userData, const char *tagname, const char **atts)$/;"	f	file:
+handle_statii	./subversion/libsvn_wc/status.c	/^handle_statii (struct edit_baton *eb,$/;"	f	file:
+handle_unknown	./subversion/libsvn_ra_dav/util.c	/^handle_unknown(const svn_ra_dav__xml_elm_t **elem_pointer,$/;"	f	file:
+handler	./subversion/bindings/swig/swigutil_java.c	/^  jobject handler;      \/* the window handler (a callable) *\/$/;"	m	file:
+handler	./subversion/include/svn_ra_svn.h	/^  svn_ra_svn_command_handler handler;$/;"	m	struct:svn_ra_svn_cmd_entry_t
+handler	./subversion/libsvn_ra_dav/fetch.c	/^  svn_txdelta_window_handler_t handler;$/;"	m	file:
+handler	./subversion/libsvn_ra_svn/editorp.c	/^  svn_error_t *(*handler)(svn_ra_svn_conn_t *conn, apr_pool_t *pool,$/;"	m	file:
+handler	./subversion/mod_dav_svn/update.c	/^  svn_txdelta_window_handler_t handler;$/;"	m	struct:window_handler_baton	file:
+handler_baton	./subversion/bindings/swig/swigutil_java.c	/^} handler_baton;$/;"	t	file:
+handler_baton	./subversion/libsvn_client/export.c	/^struct handler_baton$/;"	s	file:
+handler_baton	./subversion/libsvn_ra_dav/fetch.c	/^  void *handler_baton;$/;"	m	file:
+handler_baton	./subversion/libsvn_wc/update_editor.c	/^struct handler_baton$/;"	s	file:
+handler_baton	./subversion/mod_dav_svn/update.c	/^  void *handler_baton;$/;"	m	struct:window_handler_baton	file:
+harvest_committables	./subversion/libsvn_client/commit_util.c	/^harvest_committables (apr_hash_t *committables,$/;"	f	file:
+has_nodes	./subversion/svndumpfilter/main.c	/^  svn_boolean_t    has_nodes;$/;"	m	struct:revision_baton_t	file:
+has_props	./subversion/include/svn_types.h	/^  svn_boolean_t has_props;$/;"	m	struct:svn_dirent_t
+has_props	./subversion/svndumpfilter/main.c	/^  svn_boolean_t    has_props;$/;"	m	struct:node_baton_t	file:
+has_props	./subversion/svndumpfilter/main.c	/^  svn_boolean_t    has_props;$/;"	m	struct:revision_baton_t	file:
+has_repos_path	./subversion/mod_dav_svn/repos.c	/^  int has_repos_path;$/;"	m	struct:special_defn	file:
+has_text	./subversion/svndumpfilter/main.c	/^  svn_boolean_t    has_text;$/;"	m	struct:node_baton_t	file:
+hash	./subversion/libsvn_diff/token.c	/^  apr_uint32_t          hash;$/;"	m	struct:svn_diff__node_t	file:
+hash_key	./subversion/libsvn_subr/config.c	/^  const char *hash_key;$/;"	m	struct:cfg_option_t	file:
+hash_key	./subversion/libsvn_subr/config.c	/^  const char *hash_key;$/;"	m	struct:cfg_section_t	file:
+hash_slot_t	./subversion/libsvn_delta/vdelta.c	/^typedef struct hash_slot_t {$/;"	s	file:
+hash_slot_t	./subversion/libsvn_delta/vdelta.c	/^} hash_slot_t;$/;"	t	file:
+hash_stash	./subversion/libsvn_wc/status.c	/^hash_stash (void *baton,$/;"	f	file:
+hash_table_t	./subversion/libsvn_delta/vdelta.c	/^typedef struct hash_table_t {$/;"	s	file:
+hash_table_t	./subversion/libsvn_delta/vdelta.c	/^} hash_table_t;$/;"	t	file:
+have_executable	./subversion/libsvn_client/add.c	/^  svn_boolean_t have_executable;$/;"	m	file:
+have_processed_parent	./subversion/libsvn_client/commit.c	/^have_processed_parent (apr_array_header_t *commit_items,$/;"	f	file:
+header	./subversion/svndumpfilter/main.c	/^  svn_stringbuf_t *header;$/;"	m	struct:node_baton_t	file:
+header	./subversion/svndumpfilter/main.c	/^  svn_stringbuf_t *header;$/;"	m	struct:revision_baton_t	file:
+header_bytes	./subversion/libsvn_delta/svndiff.c	/^  int header_bytes;$/;"	m	struct:decode_baton	file:
+header_done	./subversion/libsvn_delta/svndiff.c	/^  svn_boolean_t header_done;$/;"	m	struct:encoder_baton	file:
+header_read	./subversion/libsvn_fs/reps-strings.c	/^  apr_size_t header_read;$/;"	m	struct:write_svndiff_strings_baton	file:
+help	./subversion/clients/cmdline/cl.h	/^  svn_boolean_t help;            \/* print usage message *\/$/;"	m	struct:svn_cl__opt_state_t
+help	./subversion/include/svn_opt.h	/^  const char *help;$/;"	m	struct:svn_opt_subcommand_desc_t
+help	./subversion/svnadmin/main.c	/^  svn_boolean_t help;                               \/* --help or -? *\/$/;"	m	struct:svnadmin_opt_state	file:
+help	./subversion/svndumpfilter/main.c	/^  svn_boolean_t help;                    \/* --help or -?        *\/$/;"	m	struct:svndumpfilter_opt_state	file:
+help	./subversion/svnlook/main.c	/^  svn_boolean_t help;             \/* --help *\/$/;"	m	struct:svnlook_opt_state	file:
+help	./subversion/svnserve/main.c	/^static void help(apr_pool_t *pool)$/;"	f	file:
+hex_decode	./subversion/libsvn_ra_svn/cram.c	/^static svn_boolean_t hex_decode(char *hashval, const char *hexval)$/;"	f	file:
+hex_encode	./subversion/libsvn_ra_svn/cram.c	/^static void hex_encode(char *hexval, const char *hashval)$/;"	f	file:
+hex_to_int	./subversion/libsvn_ra_svn/cram.c	/^static int hex_to_int(char c)$/;"	f	file:
+hextab	./subversion/libsvn_subr/quoprint.c	/^static const char hextab[] = "0123456789ABCDEF";$/;"	v	file:
+hi	./subversion/mod_dav_svn/deadprops.c	/^  apr_hash_index_t *hi;$/;"	m	struct:dav_db	file:
+history	./subversion/libsvn_fs/tree.c	/^  svn_fs_history_t *history;$/;"	m	struct:history_prev_args	file:
+history_prev_args	./subversion/libsvn_fs/tree.c	/^struct history_prev_args$/;"	s	file:
+history_to_revs_array	./subversion/libsvn_repos/log.c	/^history_to_revs_array (void *baton,$/;"	f	file:
+history_to_revs_array	./subversion/tests/libsvn_repos/repos-test.c	/^history_to_revs_array (void *baton,$/;"	f	file:
+hook_path	./subversion/libsvn_repos/repos.h	/^  char *hook_path;$/;"	m	struct:svn_repos_t
+hostname	./subversion/include/svn_auth.h	/^  const char *hostname;$/;"	m	struct:svn_auth_ssl_server_cert_info_t
+hotcopy_ctx_t	./subversion/libsvn_repos/repos.c	/^struct hotcopy_ctx_t {$/;"	s	file:
+hotcopy_structure	./subversion/libsvn_repos/repos.c	/^static svn_error_t *hotcopy_structure (void *baton,$/;"	f	file:
+hour	./subversion/tests/libsvn_subr/time-test.c	/^  apr_int32_t hour;$/;"	m	struct:date_test	file:
+href	./subversion/libsvn_ra_dav/fetch.c	/^  svn_stringbuf_t *href;$/;"	m	file:
+href	./subversion/libsvn_ra_dav/merge.c	/^  svn_stringbuf_t *href;   \/* current response *\/$/;"	m	file:
+href_parent	./subversion/libsvn_ra_dav/merge.c	/^  int href_parent;         \/* what element is the DAV:href appearing within? *\/$/;"	m	file:
+href_parent	./subversion/libsvn_ra_dav/ra_dav.h	/^  int href_parent;$/;"	m
+human_timestamp_format	./subversion/libsvn_subr/time.c	/^static const char * const human_timestamp_format =$/;"	v	file:
+human_timestamp_format_suffix	./subversion/libsvn_subr/time.c	/^static const char * const human_timestamp_format_suffix =$/;"	v	file:
+hunk	./subversion/libsvn_diff/diff_file.c	/^  svn_stringbuf_t *hunk;$/;"	m	struct:svn_diff__file_output_baton_t	file:
+hunk_length	./subversion/libsvn_diff/diff_file.c	/^  apr_off_t   hunk_length[2];$/;"	m	struct:svn_diff__file_output_baton_t	file:
+hunk_start	./subversion/libsvn_diff/diff_file.c	/^  apr_off_t   hunk_start[2];$/;"	m	struct:svn_diff__file_output_baton_t	file:
+id	./subversion/include/svn_fs.h	/^  const svn_fs_id_t *id;$/;"	m	struct:svn_fs_dirent_t
+id	./subversion/include/svn_subst.h	/^  const svn_string_t *id;$/;"	m	struct:svn_subst_keywords_t
+id	./subversion/libsvn_fs/dag.c	/^  svn_fs_id_t *id;$/;"	m	struct:dag_node_t	file:
+id	./subversion/libsvn_fs/revs-txns.c	/^  const char *id;$/;"	m	struct:change_txn_prop_args	file:
+id	./subversion/libsvn_fs/revs-txns.c	/^  const char *id;$/;"	m	struct:txn_proplist_args	file:
+id	./subversion/libsvn_fs/revs-txns.c	/^  const svn_fs_id_t *id;$/;"	m	struct:get_dirents_args	file:
+id	./subversion/libsvn_fs/revs-txns.c	/^  const svn_fs_id_t *id;$/;"	m	struct:remove_node_args	file:
+id	./subversion/libsvn_fs/revs-txns.h	/^  const char *id;$/;"	m	struct:svn_fs_txn_t
+id	./subversion/libsvn_fs/tree.c	/^  const svn_fs_id_t *id;      \/* The node id of for we want the predecessor. *\/$/;"	m	struct:txn_pred_id_args	file:
+id	./subversion/libsvn_fs/tree.c	/^  const svn_fs_id_t *id;$/;"	m	struct:node_kind_args	file:
+id	./subversion/libsvn_fs/tree.c	/^  const svn_fs_id_t *id;$/;"	m	struct:txn_pred_count_args	file:
+id	./subversion/libsvn_ra_dav/props.c	/^  svn_ra_dav__xml_elmid id;$/;"	m	file:
+id	./subversion/libsvn_ra_dav/ra_dav.h	/^  svn_ra_dav__xml_elmid id;$/;"	m
+id	./subversion/tests/libsvn_fs/fs-test.c	/^  const svn_fs_id_t *id;$/;"	m	struct:check_id_args	file:
+id_check_ancestor	./subversion/libsvn_fs/tree.c	/^id_check_ancestor (svn_boolean_t *is_ancestor,$/;"	f	file:
+id_p	./subversion/libsvn_fs/tree.c	/^  const svn_fs_id_t **id_p;$/;"	m	struct:node_id_args	file:
+idx	./subversion/libsvn_fs/tree.c	/^  int idx;          \/* Index into the keys array for this cache item's key. *\/$/;"	m	struct:dag_node_cache_t	file:
+idx	./subversion/libsvn_fs/uuid.c	/^  int idx;$/;"	m	struct:get_uuid_args	file:
+idx	./subversion/libsvn_fs/uuid.c	/^  int idx;$/;"	m	struct:set_uuid_args	file:
+ignore_ancestry	./subversion/clients/cmdline/cl.h	/^  svn_boolean_t ignore_ancestry; \/* ignore ancestry for merge-y operations *\/$/;"	m	struct:svn_cl__opt_state_t
+ignore_ancestry	./subversion/libsvn_repos/delta.c	/^  svn_boolean_t ignore_ancestry;$/;"	m	struct:context	file:
+ignore_ancestry	./subversion/libsvn_repos/reporter.c	/^  svn_boolean_t ignore_ancestry;$/;"	m	struct:report_baton_t	file:
+ignores	./subversion/libsvn_wc/status.c	/^  apr_array_header_t *ignores;$/;"	m	struct:edit_baton	file:
+implicit_atom	./subversion/libsvn_fs/util/skel.c	/^implicit_atom (const char *data,$/;"	f	file:
+import	./subversion/libsvn_client/commit.c	/^import (const char *path,$/;"	f	file:
+import_dir	./subversion/libsvn_client/commit.c	/^import_dir (const svn_delta_editor_t *editor, $/;"	f	file:
+import_file	./subversion/libsvn_client/commit.c	/^import_file (const svn_delta_editor_t *editor,$/;"	f	file:
+in	./subversion/libsvn_subr/stream.c	/^  z_stream *in;                 \/* compressed stream for reading *\/$/;"	m	struct:zbaton	file:
+in_external	./subversion/clients/cmdline/notify.c	/^  svn_boolean_t in_external;$/;"	m	struct:notify_baton	file:
+in_file	./subversion/libsvn_ra_svn/ra_svn.h	/^  apr_file_t *in_file;$/;"	m	struct:svn_ra_svn_conn_st
+in_stream	./subversion/svndumpfilter/main.c	/^  svn_stream_t       *in_stream;$/;"	m	struct:parse_baton_t	file:
+in_txn_trail	./subversion/libsvn_fs/fs.h	/^  svn_boolean_t in_txn_trail;$/;"	m	struct:svn_fs_t
+incomplete	./subversion/include/svn_wc.h	/^  svn_boolean_t incomplete;$/;"	m	struct:svn_wc_entry_t
+incremental	./subversion/clients/cmdline/cl.h	/^  svn_boolean_t incremental;     \/* yield output suitable for concatenation *\/$/;"	m	struct:svn_cl__opt_state_t
+incremental	./subversion/svnadmin/main.c	/^  svn_boolean_t incremental;                        \/* --incremental *\/$/;"	m	struct:svnadmin_opt_state	file:
+indent_level	./subversion/tests/svn_test_editor.c	/^  int indent_level;$/;"	m	struct:node_baton	file:
+indentation	./subversion/tests/svn_test_editor.c	/^  int indentation;$/;"	m	struct:edit_baton	file:
+index	./subversion/tests/libsvn_diff/diff-diff3-test.c	/^  int index;  \/* Zero based line number *\/$/;"	m	struct:random_mod	file:
+index_node	./subversion/libsvn_delta/compose_delta.c	/^  range_index_node_t index_node;$/;"	m	union:alloc_block_t	file:
+info	./subversion/libsvn_client/commit_util.c	/^  svn_client_commit_info_t **info;$/;"	m	struct:commit_baton	file:
+info	./subversion/mod_dav_svn/repos.c	/^  dav_resource_private info;    \/* the info in res *\/$/;"	m	file:
+info_found_entry_callback	./subversion/clients/cmdline/info-cmd.c	/^info_found_entry_callback (const char *path,$/;"	f	file:
+init	./subversion/libsvn_fs/reps-strings.c	/^  svn_boolean_t init;$/;"	m	struct:compose_handler_baton	file:
+init_adm	./subversion/libsvn_wc/adm_files.c	/^init_adm (const char *path,$/;"	f	file:
+init_adm_file	./subversion/libsvn_wc/adm_files.c	/^init_adm_file (const char *path,$/;"	f	file:
+init_adm_tmp_area	./subversion/libsvn_wc/adm_files.c	/^init_adm_tmp_area (svn_wc_adm_access_t *adm_access,$/;"	f	file:
+init_char_types	./subversion/tests/libsvn_fs/skel-test.c	/^init_char_types (void)$/;"	f	file:
+init_params	./subversion/tests/libsvn_delta/random-test.c	/^static void init_params (apr_uint32_t *seed,$/;"	f	file:
+init_params	./subversion/tests/libsvn_subr/config-test.c	/^static svn_error_t *init_params (apr_pool_t *pool)$/;"	f	file:
+init_repos_dirs	./subversion/libsvn_repos/repos.c	/^init_repos_dirs (svn_repos_t *repos, const char *path, apr_pool_t *pool)$/;"	f	file:
+initfunc	./subversion/libsvn_ra/ra_loader.c	/^  svn_ra_init_func_t initfunc;$/;"	m	struct:ra_lib_defn	file:
+input_encoding	./subversion/libsvn_subr/cmdline.c	/^static const char *input_encoding = NULL;$/;"	v	file:
+insert_range	./subversion/libsvn_delta/compose_delta.c	/^insert_range (apr_size_t offset, apr_size_t limit, apr_size_t target_offset,$/;"	f	file:
+install_committed_file	./subversion/libsvn_wc/log.c	/^install_committed_file (svn_boolean_t *overwrote_working,$/;"	f	file:
+install_file	./subversion/libsvn_wc/update_editor.c	/^install_file (svn_wc_notify_state_t *content_state,$/;"	f	file:
+int_to_hex	./subversion/libsvn_ra_svn/cram.c	/^static char int_to_hex(int v)$/;"	f	file:
+interpret_kind	./subversion/libsvn_ra_svn/client.c	/^static svn_error_t *interpret_kind(const char *str, apr_pool_t *pool,$/;"	f	file:
+interpreter	./subversion/libsvn_fs/tree.c	/^  svn_txdelta_window_handler_t interpreter;$/;"	m	struct:txdelta_baton_t	file:
+interpreter_baton	./subversion/libsvn_fs/tree.c	/^  void *interpreter_baton;$/;"	m	struct:txdelta_baton_t	file:
+invalid_atoms	./subversion/tests/libsvn_fs/skel-test.c	/^static struct invalid_atoms$/;"	s	file:
+invalid_atoms	./subversion/tests/libsvn_fs/skel-test.c	/^} invalid_atoms[] = { { 1,  1, "(" },$/;"	v	file:
+invalid_utf8	./subversion/libsvn_subr/utf.c	/^invalid_utf8 (const char *data, apr_size_t len, apr_pool_t *pool)$/;"	f	file:
+invalidate_wc_props	./subversion/include/svn_ra.h	/^  svn_ra_invalidate_wc_props_func_t invalidate_wc_props;$/;"	m	struct:svn_ra_callbacks_t
+invalidate_wc_props	./subversion/libsvn_client/ra.c	/^invalidate_wc_props (void *baton,$/;"	f	file:
+invalidate_wcprop_for_entry	./subversion/libsvn_client/ra.c	/^invalidate_wcprop_for_entry (const char *path,$/;"	f	file:
+invalidate_wcprop_walk_baton	./subversion/libsvn_client/ra.c	/^struct invalidate_wcprop_walk_baton$/;"	s	file:
+io	./subversion/bindings/swig/swigutil_pl.c	/^    IO *io;$/;"	m	file:
+io_baton_t	./subversion/bindings/swig/swigutil_pl.c	/^} io_baton_t;$/;"	t	file:
+io_check_path	./subversion/libsvn_subr/io.c	/^io_check_path (const char *path,$/;"	f	file:
+io_handle_cleanup	./subversion/bindings/swig/swigutil_pl.c	/^static apr_status_t io_handle_cleanup (void *baton)$/;"	f	file:
+io_handle_close	./subversion/bindings/swig/swigutil_pl.c	/^static svn_error_t *io_handle_close (void *baton)$/;"	f	file:
+io_handle_read	./subversion/bindings/swig/swigutil_pl.c	/^static svn_error_t *io_handle_read (void *baton,$/;"	f	file:
+io_handle_write	./subversion/bindings/swig/swigutil_pl.c	/^static svn_error_t *io_handle_write (void *baton,$/;"	f	file:
+iota_contents_1	./subversion/tests/libsvn_fs/fs-test.c	3562;"	d	file:
+iota_contents_2	./subversion/tests/libsvn_fs/fs-test.c	3565;"	d	file:
+iota_contents_3	./subversion/tests/libsvn_fs/fs-test.c	3568;"	d	file:
+iota_contents_4	./subversion/tests/libsvn_fs/fs-test.c	3571;"	d	file:
+iota_contents_5	./subversion/tests/libsvn_fs/fs-test.c	3574;"	d	file:
+iota_contents_6	./subversion/tests/libsvn_fs/fs-test.c	3578;"	d	file:
+iota_contents_7	./subversion/tests/libsvn_fs/fs-test.c	3583;"	d	file:
+is_ancestor	./subversion/libsvn_fs/dag.c	/^  svn_boolean_t is_ancestor;$/;"	m	struct:is_ancestor_baton	file:
+is_ancestor_baton	./subversion/libsvn_fs/dag.c	/^struct is_ancestor_baton$/;"	s	file:
+is_ancestor_callback	./subversion/libsvn_fs/dag.c	/^is_ancestor_callback (void *baton,$/;"	f	file:
+is_atom	./subversion/libsvn_fs/util/skel.h	/^  svn_boolean_t is_atom;$/;"	m	struct:skel_t
+is_canonical	./subversion/libsvn_subr/path.c	/^is_canonical (const char *path,$/;"	f	file:
+is_checkout	./subversion/clients/cmdline/notify.c	/^  svn_boolean_t is_checkout;$/;"	m	struct:notify_baton	file:
+is_collection	./subversion/libsvn_ra_dav/ra_dav.h	/^  int is_collection;$/;"	m
+is_committed	./subversion/libsvn_fs/bdb/txn-table.c	/^is_committed (svn_fs__transaction_t *txn)$/;"	f	file:
+is_dir	./subversion/libsvn_fs/tree.c	/^  svn_boolean_t is_dir;$/;"	m	struct:txn_deltify_args	file:
+is_export	./subversion/clients/cmdline/notify.c	/^  svn_boolean_t is_export;$/;"	m	struct:notify_baton	file:
+is_export	./subversion/libsvn_client/externals.c	/^  svn_boolean_t is_export;$/;"	m	struct:handle_external_item_change_baton	file:
+is_export	./subversion/libsvn_client/externals.c	/^  svn_boolean_t is_export;$/;"	m	struct:handle_externals_desc_change_baton	file:
+is_external_path	./subversion/libsvn_wc/status.c	/^is_external_path (apr_hash_t *externals,$/;"	f	file:
+is_file	./subversion/libsvn_ra_svn/editorp.c	/^  svn_boolean_t is_file;$/;"	m	file:
+is_interesting	./subversion/libsvn_fs/tree.c	/^  svn_boolean_t is_interesting;$/;"	m	struct:svn_fs_history_t	file:
+is_move	./subversion/libsvn_client/copy.c	/^  svn_boolean_t is_move;$/;"	m	struct:path_driver_cb_baton	file:
+is_our_resource	./subversion/mod_dav_svn/repos.c	/^static int is_our_resource(const dav_resource *res1,$/;"	f	file:
+is_property	./subversion/libsvn_ra_dav/props.c	/^  int is_property;      \/* is it a property, or part of some structure? *\/$/;"	m	file:
+is_revision	./subversion/svnlook/main.c	/^  svn_boolean_t is_revision;$/;"	m	struct:svnlook_ctxt_t	file:
+is_revision_prop_name	./subversion/libsvn_client/prop_commands.c	/^is_revision_prop_name (const char *name)$/;"	f	file:
+is_sendable_status	./subversion/libsvn_wc/status.c	/^is_sendable_status (svn_wc_status_t *status,$/;"	f	file:
+is_svndiff	./subversion/mod_dav_svn/dav_svn.h	/^  int is_svndiff;$/;"	m	struct:dav_resource_private
+is_switch	./subversion/libsvn_ra_dav/fetch.c	/^  svn_boolean_t is_switch;$/;"	m	file:
+is_tunneled	./subversion/libsvn_ra_svn/client.c	/^  svn_boolean_t is_tunneled;$/;"	m	file:
+is_valid_change_skel	./subversion/libsvn_fs/util/fs_skels.c	/^is_valid_change_skel (skel_t *skel, svn_fs_path_change_kind_t *kind)$/;"	f	file:
+is_valid_checksum_skel	./subversion/libsvn_fs/util/fs_skels.c	/^is_valid_checksum_skel (skel_t *skel)$/;"	f	file:
+is_valid_copy_skel	./subversion/libsvn_fs/util/fs_skels.c	/^is_valid_copy_skel (skel_t *skel)$/;"	f	file:
+is_valid_node_revision_header_skel	./subversion/libsvn_fs/util/fs_skels.c	/^is_valid_node_revision_header_skel (skel_t *skel, skel_t **kind_p)$/;"	f	file:
+is_valid_node_revision_skel	./subversion/libsvn_fs/util/fs_skels.c	/^is_valid_node_revision_skel (skel_t *skel)$/;"	f	file:
+is_valid_prop_name	./subversion/libsvn_client/prop_commands.c	/^is_valid_prop_name (const char *name)$/;"	f	file:
+is_valid_proplist_skel	./subversion/libsvn_fs/util/fs_skels.c	/^is_valid_proplist_skel (skel_t *skel)$/;"	f	file:
+is_valid_rep_delta_chunk_skel	./subversion/libsvn_fs/util/fs_skels.c	/^is_valid_rep_delta_chunk_skel (skel_t *skel)$/;"	f	file:
+is_valid_representation_skel	./subversion/libsvn_fs/util/fs_skels.c	/^is_valid_representation_skel (skel_t *skel)$/;"	f	file:
+is_valid_revision_skel	./subversion/libsvn_fs/util/fs_skels.c	/^is_valid_revision_skel (skel_t *skel)$/;"	f	file:
+is_valid_transaction_skel	./subversion/libsvn_fs/util/fs_skels.c	/^is_valid_transaction_skel (skel_t *skel, svn_fs__transaction_kind_t *kind)$/;"	f	file:
+issuer_dname	./subversion/include/svn_auth.h	/^  const char *issuer_dname;$/;"	m	struct:svn_auth_ssl_server_cert_info_t
+item	./subversion/libsvn_client/commit_util.c	/^  svn_client_commit_item_t *item;$/;"	m	struct:file_mod_t	file:
+item_baton	./subversion/bindings/swig/swigutil_java.c	/^} item_baton;$/;"	t	file:
+item_baton	./subversion/bindings/swig/swigutil_pl.c	/^} item_baton;$/;"	t	file:
+item_baton	./subversion/bindings/swig/swigutil_py.c	/^} item_baton;$/;"	t	file:
+item_baton	./subversion/libsvn_client/commit_util.c	/^struct item_baton$/;"	s	file:
+item_baton_t	./subversion/mod_dav_svn/update.c	/^} item_baton_t;$/;"	t	file:
+jenv	./subversion/bindings/swig/swigutil_java.c	/^  JNIEnv *jenv;         \/* Java native interface structure *\/$/;"	m	file:
+k_uicbINTAsDecimalString	./subversion/bindings/com/misc.h	/^const UINT k_uicbINTAsDecimalString = sizeof("-2147483648") - 1;$/;"	v
+key	./subversion/include/svn_sorts.h	/^  const void *key;$/;"	m	struct:svn_sort__item_t
+key	./subversion/libsvn_fs/reps-strings.c	/^  const char *key; \/* string key for this window *\/$/;"	m	struct:window_write_t	file:
+key	./subversion/libsvn_fs/reps-strings.c	/^  const char *key;$/;"	m	struct:write_svndiff_strings_baton	file:
+key	./subversion/libsvn_subr/config.c	/^  const char *key;          \/* Provided by caller of svn_config_find_group *\/$/;"	m	struct:search_groups_baton	file:
+key	./subversion/libsvn_subr/date.c	/^  char key;                \/* The template char that this rule matches *\/$/;"	m	file:
+key	./subversion/tests/libsvn_fs/changes-test.c	/^  const char *key;$/;"	m	struct:changes_args	file:
+key	./subversion/tests/libsvn_fs/strings-reps-test.c	/^  const char *key;$/;"	m	struct:rep_args	file:
+key	./subversion/tests/libsvn_fs/strings-reps-test.c	/^  const char *key;$/;"	m	struct:string_args	file:
+key_test	./subversion/tests/libsvn_fs/key-test.c	/^key_test (const char **msg, $/;"	f	file:
+keywords_val	./subversion/libsvn_client/export.c	/^  const svn_string_t *keywords_val;$/;"	m	struct:file_baton	file:
+kind	./subversion/bindings/com/SVNStatus.h	/^        svn_node_kind_t kind;     \/* Is it a file, a dir, or... ?  *\/$/;"	m	class:CSVNStatus
+kind	./subversion/include/svn_client.h	/^  svn_node_kind_t kind;$/;"	m	struct:svn_client_commit_item_t
+kind	./subversion/include/svn_fs.h	/^  svn_node_kind_t kind;$/;"	m	struct:svn_fs_dirent_t
+kind	./subversion/include/svn_opt.h	/^  enum svn_opt_revision_kind kind;$/;"	m	struct:svn_opt_revision_t
+kind	./subversion/include/svn_ra_svn.h	/^  } kind;$/;"	m	struct:svn_ra_svn_item_t
+kind	./subversion/include/svn_repos.h	/^  svn_node_kind_t kind;$/;"	m	struct:svn_repos_node_t
+kind	./subversion/include/svn_types.h	/^  svn_node_kind_t kind;$/;"	m	struct:svn_dirent_t
+kind	./subversion/include/svn_wc.h	/^  svn_node_kind_t kind;$/;"	m	struct:svn_wc_entry_t
+kind	./subversion/libsvn_delta/compose_delta.c	/^  enum range_kind kind;$/;"	m	struct:range_list_node_t	file:
+kind	./subversion/libsvn_fs/dag.c	/^  svn_node_kind_t kind;$/;"	m	struct:dag_node_t	file:
+kind	./subversion/libsvn_fs/fs.h	/^  svn_fs__copy_kind_t kind;$/;"	m
+kind	./subversion/libsvn_fs/fs.h	/^  svn_fs__rep_kind_t kind;$/;"	m
+kind	./subversion/libsvn_fs/fs.h	/^  svn_fs__transaction_kind_t kind;$/;"	m
+kind	./subversion/libsvn_fs/fs.h	/^  svn_fs_path_change_kind_t kind;$/;"	m
+kind	./subversion/libsvn_fs/fs.h	/^  svn_node_kind_t kind;$/;"	m
+kind	./subversion/libsvn_fs/tree.c	/^  root_kind_t kind;$/;"	m	struct:svn_fs_root_t	file:
+kind	./subversion/libsvn_fs/tree.c	/^  svn_node_kind_t kind; \/* OUT parameter *\/$/;"	m	struct:node_kind_args	file:
+kind	./subversion/libsvn_repos/load.c	/^  svn_node_kind_t kind;$/;"	m	struct:node_baton	file:
+kind_word	./subversion/svnserve/serve.c	/^static const char *kind_word(svn_node_kind_t kind)$/;"	f	file:
+klen	./subversion/include/svn_sorts.h	/^  apr_ssize_t klen;$/;"	m	struct:svn_sort__item_t
+large_file_integrity	./subversion/tests/libsvn_fs/fs-test.c	/^large_file_integrity (const char **msg,$/;"	f	file:
+last_author	./subversion/include/svn_types.h	/^  const char *last_author;$/;"	m	struct:svn_dirent_t
+last_author	./subversion/libsvn_ra_dav/merge.c	/^  svn_stringbuf_t *last_author;    \/* DAV:creator-displayname for this$/;"	m	file:
+last_author	./subversion/mod_dav_svn/update.c	/^  const char *last_author;$/;"	m	file:
+last_changed_date	./subversion/libsvn_wc/update_editor.c	/^  const char *last_changed_date;$/;"	m	struct:file_baton	file:
+last_open_id	./subversion/libsvn_ra_dav/props.c	/^  svn_ra_dav__xml_elmid last_open_id; \/* the id of the last opened tag. *\/$/;"	m	struct:propfind_ctx_t	file:
+last_sview_len	./subversion/libsvn_delta/svndiff.c	/^  apr_size_t last_sview_len;$/;"	m	struct:decode_baton	file:
+last_sview_offset	./subversion/libsvn_delta/svndiff.c	/^  svn_filesize_t last_sview_offset;$/;"	m	struct:decode_baton	file:
+latest_length	./subversion/libsvn_diff/diff.h	/^  apr_off_t latest_length;$/;"	m	struct:svn_diff_t
+latest_start	./subversion/libsvn_diff/diff.h	/^  apr_off_t latest_start;$/;"	m	struct:svn_diff_t
+lcs	./subversion/libsvn_diff/lcs.c	/^    svn_diff__lcs_t      *lcs;$/;"	m	struct:svn_diff__snake_t	file:
+left	./subversion/libsvn_delta/compose_delta.c	/^  range_index_node_t *left, *right;$/;"	m	struct:range_index_node_t	file:
+left	./subversion/libsvn_diff/token.c	/^  svn_diff__node_t     *left;$/;"	m	struct:svn_diff__node_t	file:
+leftmod_error_chain	./subversion/libsvn_wc/update_editor.c	/^leftmod_error_chain (svn_error_t *err,$/;"	f	file:
+len	./subversion/include/svn_string.h	/^  apr_size_t len;$/;"	m	struct:svn_string_t
+len	./subversion/include/svn_string.h	/^  apr_size_t len;$/;"	m	struct:svn_stringbuf_t
+len	./subversion/libsvn_fs/reps-strings.c	/^  apr_size_t *len;             \/* How much to read \/ was read. *\/$/;"	m	struct:read_rep_args	file:
+len	./subversion/libsvn_fs/reps-strings.c	/^  apr_size_t len;               \/* How much to write. *\/$/;"	m	struct:write_rep_args	file:
+len	./subversion/libsvn_fs/util/skel.h	/^  apr_size_t len;$/;"	m	struct:skel_t
+len	./subversion/tests/libsvn_fs/skel-test.c	/^  apr_size_t len;$/;"	m	struct:invalid_atoms	file:
+len	./subversion/tests/libsvn_fs/strings-reps-test.c	/^  apr_size_t len;$/;"	m	struct:string_args	file:
+length	./subversion/include/svn_delta.h	/^  apr_size_t length;$/;"	m	struct:svn_txdelta_op_t
+length	./subversion/libsvn_delta/compose_delta.c	/^  int length;$/;"	m	struct:offset_index_t	file:
+length	./subversion/libsvn_diff/diff.h	/^  apr_off_t             length;$/;"	m	struct:svn_diff__lcs_t
+length	./subversion/libsvn_diff/diff_file.c	/^  apr_off_t length;$/;"	m	struct:svn_diff__file_token_t	file:
+length	./subversion/libsvn_diff/diff_file.c	/^  apr_size_t  length[2];$/;"	m	struct:svn_diff__file_output_baton_t	file:
+length	./subversion/libsvn_fs/tree.c	/^  svn_filesize_t length;       \/* OUT parameter *\/$/;"	m	struct:file_length_args	file:
+lf_to_cr	./subversion/tests/libsvn_wc/translate-test.c	/^lf_to_cr (const char **msg,$/;"	f	file:
+lf_to_crlf	./subversion/tests/libsvn_wc/translate-test.c	/^lf_to_crlf (const char **msg,$/;"	f	file:
+lf_to_crlf_expand_author	./subversion/tests/libsvn_wc/translate-test.c	/^lf_to_crlf_expand_author (const char **msg,$/;"	f	file:
+lf_to_crlf_unexpand_author	./subversion/tests/libsvn_wc/translate-test.c	/^lf_to_crlf_unexpand_author (const char **msg,$/;"	f	file:
+lf_to_lf	./subversion/tests/libsvn_wc/translate-test.c	/^lf_to_lf (const char **msg,$/;"	f	file:
+limit	./subversion/libsvn_delta/compose_delta.c	/^  apr_size_t limit;$/;"	m	struct:range_index_node_t	file:
+limit	./subversion/libsvn_delta/compose_delta.c	/^  apr_size_t limit;$/;"	m	struct:range_list_node_t	file:
+line	./subversion/include/svn_types.h	/^  long line;$/;"	m	struct:svn_error_t
+line	./subversion/libsvn_subr/config_file.c	/^  int line;$/;"	m	struct:parse_context_t	file:
+linelen	./subversion/libsvn_subr/quoprint.c	/^  int linelen;                  \/* Bytes output so far on this line *\/$/;"	m	struct:encode_baton	file:
+linelen	./subversion/libsvn_subr/svn_base64.c	/^  int linelen;                  \/* Bytes output so far on this line *\/$/;"	m	struct:encode_baton	file:
+lines	./subversion/tests/libsvn_wc/translate-test.c	/^const char *lines[] =$/;"	v
+link_path	./subversion/include/svn_ra.h	/^  svn_error_t *(*link_path) (void *report_baton,$/;"	m	struct:svn_ra_reporter_t
+link_path	./subversion/svnserve/serve.c	/^static svn_error_t *link_path(svn_ra_svn_conn_t *conn, apr_pool_t *pool,$/;"	f	file:
+link_test	./subversion/tests/libsvn_fs/fs-test.c	/^link_test (const char **msg,$/;"	f	file:
+linked_paths	./subversion/libsvn_repos/reporter.c	/^  apr_hash_t *linked_paths;$/;"	m	struct:report_baton_t	file:
+list	./subversion/include/svn_ra_svn.h	/^    apr_array_header_t *list;$/;"	m	union:svn_ra_svn_item_t::<anonymous>
+list	./subversion/libsvn_fs/util/skel.c	/^list (const char *data,$/;"	f	file:
+list_dblogs	./subversion/svnadmin/main.c	/^list_dblogs (apr_getopt_t *os, void *baton, svn_boolean_t only_unused, apr_pool_t *pool)$/;"	f	file:
+list_directory	./subversion/tests/libsvn_fs/fs-test.c	/^list_directory (const char **msg,$/;"	f	file:
+list_node	./subversion/libsvn_delta/compose_delta.c	/^  range_list_node_t list_node;$/;"	m	union:alloc_block_t	file:
+list_transactions_args	./subversion/libsvn_fs/revs-txns.c	/^struct list_transactions_args$/;"	s	file:
+load_base_props	./subversion/libsvn_wc/diff.c	/^load_base_props (struct file_baton *b)$/;"	f	file:
+load_ra_module	./subversion/libsvn_ra/ra_loader.c	/^load_ra_module (svn_ra_init_func_t *func,$/;"	f	file:
+local_path	./subversion/libsvn_ra_dav/commit.c	/^  const char *local_path;$/;"	m	file:
+localtz_tests	./subversion/tests/libsvn_subr/time-test.c	/^static struct date_test localtz_tests[] = {$/;"	v	file:
+locate_key	./subversion/libsvn_fs/bdb/strings-table.c	/^locate_key (apr_size_t *length,$/;"	f	file:
+lock_db_logs_file	./subversion/libsvn_repos/repos.c	/^lock_db_logs_file (svn_repos_t *repos,$/;"	f	file:
+lock_exists	./subversion/libsvn_wc/lock.c	/^  svn_boolean_t lock_exists;$/;"	m	struct:svn_wc_adm_access_t	file:
+lock_path	./subversion/libsvn_repos/repos.h	/^  char *lock_path;$/;"	m	struct:svn_repos_t
+locked	./subversion/include/svn_wc.h	/^  svn_boolean_t locked;$/;"	m	struct:svn_wc_status_t
+log_baton	./subversion/libsvn_ra_dav/log.c	/^struct log_baton$/;"	s	file:
+log_baton_t	./subversion/svnserve/serve.c	/^} log_baton_t;$/;"	t	file:
+log_cmd	./subversion/svnserve/serve.c	/^static svn_error_t *log_cmd(svn_ra_svn_conn_t *conn, apr_pool_t *pool,$/;"	f	file:
+log_do_committed	./subversion/libsvn_wc/log.c	/^log_do_committed (struct log_runner *loggy,$/;"	f	file:
+log_do_delete_entry	./subversion/libsvn_wc/log.c	/^log_do_delete_entry (struct log_runner *loggy, const char *name)$/;"	f	file:
+log_do_file_readonly	./subversion/libsvn_wc/log.c	/^log_do_file_readonly (struct log_runner *loggy,$/;"	f	file:
+log_do_file_timestamp	./subversion/libsvn_wc/log.c	/^log_do_file_timestamp (struct log_runner *loggy,$/;"	f	file:
+log_do_file_xfer	./subversion/libsvn_wc/log.c	/^log_do_file_xfer (struct log_runner *loggy,$/;"	f	file:
+log_do_merge	./subversion/libsvn_wc/log.c	/^log_do_merge (struct log_runner *loggy,$/;"	f	file:
+log_do_modify_entry	./subversion/libsvn_wc/log.c	/^log_do_modify_entry (struct log_runner *loggy,$/;"	f	file:
+log_do_modify_wcprop	./subversion/libsvn_wc/log.c	/^log_do_modify_wcprop (struct log_runner *loggy,$/;"	f	file:
+log_do_rm	./subversion/libsvn_wc/log.c	/^log_do_rm (struct log_runner *loggy, const char *name)$/;"	f	file:
+log_end_element	./subversion/libsvn_ra_dav/log.c	/^log_end_element(void *userdata,$/;"	f	file:
+log_message_baton	./subversion/libsvn_client/blame.c	/^struct log_message_baton {$/;"	s	file:
+log_message_prop	./subversion/libsvn_ra_dav/commit.c	/^static const ne_propname log_message_prop = { SVN_DAV_PROP_NS_SVN, "log" };$/;"	v	file:
+log_message_receiver	./subversion/clients/cmdline/log-cmd.c	/^log_message_receiver (void *baton,$/;"	f	file:
+log_message_receiver	./subversion/libsvn_client/blame.c	/^log_message_receiver (void *baton,$/;"	f	file:
+log_message_receiver_xml	./subversion/clients/cmdline/log-cmd.c	/^log_message_receiver_xml (void *baton,$/;"	f	file:
+log_msg	./subversion/libsvn_ra_dav/commit.c	/^  const char *log_msg;$/;"	m	file:
+log_msg	./subversion/libsvn_repos/commit.c	/^  const char *log_msg;$/;"	m	struct:edit_baton	file:
+log_msg_baton	./subversion/clients/cmdline/util.c	/^struct log_msg_baton$/;"	s	file:
+log_msg_baton	./subversion/include/svn_client.h	/^  void *log_msg_baton;$/;"	m	struct:svn_client_ctx_t
+log_msg_func	./subversion/include/svn_client.h	/^  svn_client_get_commit_log_t log_msg_func;$/;"	m	struct:svn_client_ctx_t
+log_receiver	./subversion/mod_dav_svn/log.c	/^static svn_error_t * log_receiver(void *baton,$/;"	f	file:
+log_receiver	./subversion/svnserve/serve.c	/^static svn_error_t *log_receiver(void *baton, apr_hash_t *changed_paths,$/;"	f	file:
+log_receiver_baton	./subversion/clients/cmdline/log-cmd.c	/^struct log_receiver_baton$/;"	s	file:
+log_receiver_baton	./subversion/mod_dav_svn/log.c	/^struct log_receiver_baton$/;"	s	file:
+log_runner	./subversion/libsvn_wc/log.c	/^struct log_runner$/;"	s	file:
+log_start_element	./subversion/libsvn_ra_dav/log.c	/^log_start_element(void *userdata,$/;"	f	file:
+log_validate	./subversion/libsvn_ra_dav/log.c	/^log_validate(void *userdata, svn_ra_dav__xml_elmid parent,$/;"	f	file:
+log_warning	./subversion/mod_dav_svn/repos.c	/^static void log_warning(void *baton, svn_error_t *err)$/;"	f	file:
+look_up_committable	./subversion/libsvn_client/commit_util.c	/^look_up_committable (apr_hash_t *committables,$/;"	f	file:
+lookup_token	./subversion/libsvn_ra_svn/editor.c	/^static svn_error_t *lookup_token(ra_svn_driver_state_t *ds, const char *token,$/;"	f	file:
+lookup_token	./subversion/libsvn_ra_svn/editorp.c	/^static svn_error_t *lookup_token(ra_svn_driver_state_t *ds, const char *token,$/;"	f	file:
+lx_dump_2revnum_ht	./subversion/svndumpfilter/main.c	/^lx_dump_2revnum_ht (apr_pool_t *p, apr_hash_t *ht)$/;"	f	file:
+lx_dump_cstring_ary	./subversion/svndumpfilter/main.c	/^lx_dump_cstring_ary (apr_array_header_t *array)$/;"	f	file:
+m_answer	./subversion/bindings/java/javahl/native/Prompter.h	/^	std::string m_answer;$/;"	m	class:Prompter
+m_array	./subversion/bindings/java/javahl/native/JNIByteArray.h	/^	jbyteArray m_array;$/;"	m	class:JNIByteArray
+m_bInCatchEveryThing	./subversion/bindings/java/javahl/native/JNIThreadData.h	/^	bool m_bInCatchEveryThing;$/;"	m	class:JNIThreadData
+m_callback	./subversion/bindings/java/javahl/native/BlameCallback.h	/^	jobject m_callback;$/;"	m	class:BlameCallback
+m_clazz	./subversion/bindings/java/javahl/native/JNIStackElement.h	/^	const char * m_clazz;$/;"	m	class:JNIStackElement
+m_data	./subversion/bindings/java/javahl/native/JNIByteArray.h	/^	jbyte *m_data;$/;"	m	class:JNIByteArray
+m_env	./subversion/bindings/java/javahl/native/JNIStringHolder.h	/^	JNIEnv *m_env;$/;"	m	class:JNIStringHolder
+m_env	./subversion/bindings/java/javahl/native/JNIThreadData.h	/^	JNIEnv *m_env;$/;"	m	class:JNIThreadData
+m_exceptionThrown	./subversion/bindings/java/javahl/native/JNIThreadData.h	/^	bool m_exceptionThrown;$/;"	m	class:JNIThreadData
+m_formatBuffer	./subversion/bindings/java/javahl/native/JNIThreadData.h	/^	char m_formatBuffer[JNIUtil::formatBufferSize];$/;"	m	class:JNIThreadData
+m_jtext	./subversion/bindings/java/javahl/native/JNIStringHolder.h	/^	jstring m_jtext;$/;"	m	class:JNIStringHolder
+m_lastPath	./subversion/bindings/java/javahl/native/SVNClient.h	/^    Path m_lastPath;$/;"	m	class:SVNClient
+m_maySave	./subversion/bindings/java/javahl/native/Prompter.h	/^	bool m_maySave;$/;"	m	class:Prompter
+m_method	./subversion/bindings/java/javahl/native/JNIStackElement.h	/^	const char * m_method;$/;"	m	class:JNIStackElement
+m_nSize	./subversion/bindings/com/MarshalArray.h	/^        int m_nSize;$/;"	m	class:CComDynamicMarshalledUnkArray
+m_notify	./subversion/bindings/java/javahl/native/Notify.h	/^	jobject m_notify;$/;"	m	class:Notify
+m_notify	./subversion/bindings/java/javahl/native/SVNClient.h	/^	Notify *m_notify;$/;"	m	class:SVNClient
+m_objectID	./subversion/bindings/java/javahl/native/JNIStackElement.h	/^	char m_objectID[JNIUtil::formatBufferSize];$/;"	m	class:JNIStackElement
+m_pUnk	./subversion/bindings/com/MarshalArray.h	/^                IUnknown* m_pUnk;$/;"	m	union:CComDynamicMarshalledUnkArray::<anonymous>
+m_pUnkMarshaler	./subversion/bindings/com/SVN.h	/^        CComPtr<IUnknown> m_pUnkMarshaler;$/;"	m	class:CSVNWorkingCopy
+m_pUnkMarshaler	./subversion/bindings/com/SVNStatus.h	/^        CComPtr<IUnknown> m_pUnkMarshaler;$/;"	m	class:CSVNStatus
+m_passWord	./subversion/bindings/java/javahl/native/SVNClient.h	/^    std::string m_passWord;$/;"	m	class:SVNClient
+m_path	./subversion/bindings/java/javahl/native/Path.h	/^    std::string m_path;$/;"	m	class:Path
+m_pool	./subversion/bindings/java/javahl/native/Pool.h	/^    apr_pool_t * m_pool;$/;"	m	class:Pool
+m_ppUnk	./subversion/bindings/com/MarshalArray.h	/^                IUnknown** m_ppUnk;$/;"	m	union:CComDynamicMarshalledUnkArray::<anonymous>
+m_prompter	./subversion/bindings/java/javahl/native/Prompter.h	/^	jobject m_prompter;$/;"	m	class:Prompter
+m_prompter	./subversion/bindings/java/javahl/native/SVNClient.h	/^	Prompter *m_prompter;$/;"	m	class:SVNClient
+m_requestPool	./subversion/bindings/java/javahl/native/JNIThreadData.h	/^    Pool *m_requestPool;$/;"	m	class:JNIThreadData
+m_revision	./subversion/bindings/java/javahl/native/Revision.h	/^    svn_opt_revision_t m_revision;$/;"	m	class:Revision
+m_str	./subversion/bindings/java/javahl/native/JNIStringHolder.h	/^	const char *m_str;$/;"	m	class:JNIStringHolder
+m_targetArray	./subversion/bindings/java/javahl/native/Targets.h	/^	jobjectArray m_targetArray;$/;"	m	class:Targets
+m_targets	./subversion/bindings/java/javahl/native/Targets.h	/^    std::vector<Path> m_targets;$/;"	m	class:Targets
+m_userName	./subversion/bindings/java/javahl/native/SVNClient.h	/^    std::string m_userName;$/;"	m	class:SVNClient
+m_version2	./subversion/bindings/java/javahl/native/Prompter.h	/^	bool m_version2;$/;"	m	class:Prompter
+m_version3	./subversion/bindings/java/javahl/native/Prompter.h	/^	bool m_version3;$/;"	m	class:Prompter
+machine	./subversion/libsvn_subr/utf_validate.c	/^static char machine [9][14] = {$/;"	v	file:
+main	./contrib/client-side/svn-push/svn-push.c	/^main (int argc, char *argv[])$/;"	f
+main	./packages/win32-innosetup/tools/svnpath/main.c	/^main (int argc, char *argv[])$/;"	f
+main	./subversion/clients/cmdline/main.c	/^main (int argc, const char * const *argv)$/;"	f
+main	./subversion/svnadmin/main.c	/^main (int argc, const char * const *argv)$/;"	f
+main	./subversion/svndumpfilter/main.c	/^main (int argc, const char * const *argv)$/;"	f
+main	./subversion/svnlook/main.c	/^main (int argc, const char * const *argv)$/;"	f
+main	./subversion/svnserve/main.c	/^int main(int argc, const char *const *argv)$/;"	f
+main	./subversion/svnversion/main.c	/^main(int argc, const char *argv[])$/;"	f
+main	./subversion/tests/libsvn_delta/svndiff-test.c	/^main (int argc, char **argv)$/;"	f
+main	./subversion/tests/libsvn_delta/vdelta-test.c	/^main (int argc, char **argv)$/;"	f
+main	./subversion/tests/libsvn_diff/diff-test.c	/^int main(int argc, char *argv[])$/;"	f
+main	./subversion/tests/libsvn_diff/diff3-test.c	/^int main(int argc, char *argv[])$/;"	f
+main	./subversion/tests/libsvn_diff/diff4-test.c	/^int main(int argc, char *argv[])$/;"	f
+main	./subversion/tests/libsvn_repos/md5args.c	/^main (int argc, const char * const *argv)$/;"	f
+main	./subversion/tests/libsvn_subr/target-test.c	/^int main(int argc, char **argv)$/;"	f
+main	./subversion/tests/svn_tests_main.c	/^main (int argc, char *argv[])$/;"	f
+main	./tools/examples/minimal_client.c	/^main (int argc, const char **argv)$/;"	f
+main	./tools/examples/svnserve-sgid.c	/^main(int argc, char **argv)$/;"	f
+main_commands	./subversion/svnserve/serve.c	/^static const svn_ra_svn_cmd_entry_t main_commands[] = {$/;"	v	file:
+make_base64_output_stream	./subversion/mod_dav_svn/update.c	/^static svn_stream_t * make_base64_output_stream(apr_bucket_brigade *bb,$/;"	f	file:
+make_baton	./subversion/bindings/swig/swigutil_java.c	/^static item_baton * make_baton(JNIEnv *jenv, apr_pool_t *pool,$/;"	f	file:
+make_baton	./subversion/bindings/swig/swigutil_pl.c	/^static item_baton * make_baton(apr_pool_t *pool,$/;"	f	file:
+make_baton	./subversion/bindings/swig/swigutil_py.c	/^static item_baton * make_baton(apr_pool_t *pool,$/;"	f	file:
+make_baton	./subversion/libsvn_client/commit_util.c	/^make_baton (struct edit_baton *eb,$/;"	f	file:
+make_child_baton	./subversion/mod_dav_svn/update.c	/^static item_baton_t *make_child_baton(item_baton_t *parent, $/;"	f	file:
+make_connection	./subversion/libsvn_ra_svn/client.c	/^static svn_error_t *make_connection(const char *hostname, unsigned short port,$/;"	f	file:
+make_dir_args	./subversion/libsvn_fs/tree.c	/^struct make_dir_args$/;"	s	file:
+make_dir_baton	./subversion/libsvn_client/repos_diff.c	/^make_dir_baton (const char *path,$/;"	f	file:
+make_dir_baton	./subversion/libsvn_repos/dump.c	/^make_dir_baton (const char *path,$/;"	f	file:
+make_dir_baton	./subversion/libsvn_wc/diff.c	/^make_dir_baton (const char *path,$/;"	f	file:
+make_dir_baton	./subversion/libsvn_wc/status.c	/^make_dir_baton (void **dir_baton,$/;"	f	file:
+make_dir_baton	./subversion/libsvn_wc/update_editor.c	/^make_dir_baton (const char *path,$/;"	f	file:
+make_editor	./subversion/libsvn_wc/update_editor.c	/^make_editor (svn_revnum_t *target_revision,$/;"	f	file:
+make_editor_baton	./subversion/libsvn_wc/diff.c	/^make_editor_baton (svn_wc_adm_access_t *anchor,$/;"	f	file:
+make_empty_adm	./subversion/libsvn_wc/adm_files.c	/^make_empty_adm (const char *path, apr_pool_t *pool)$/;"	f	file:
+make_entry	./subversion/libsvn_fs/dag.c	/^make_entry (dag_node_t **child_p,$/;"	f	file:
+make_error_internal	./subversion/libsvn_subr/error.c	/^make_error_internal (apr_status_t apr_err,$/;"	f	file:
+make_file	./subversion/tests/libsvn_diff/diff-diff3-test.c	/^make_file (const char *filename,$/;"	f	file:
+make_file_args	./subversion/libsvn_fs/tree.c	/^struct make_file_args$/;"	s	file:
+make_file_baton	./subversion/libsvn_client/repos_diff.c	/^make_file_baton (const char *path,$/;"	f	file:
+make_file_baton	./subversion/libsvn_wc/diff.c	/^make_file_baton (const char *path,$/;"	f	file:
+make_file_baton	./subversion/libsvn_wc/status.c	/^make_file_baton (struct dir_baton *parent_dir_baton, $/;"	f	file:
+make_file_baton	./subversion/libsvn_wc/update_editor.c	/^make_file_baton (struct dir_baton *pb,$/;"	f	file:
+make_fulltext_rep	./subversion/libsvn_fs/reps-strings.c	/^make_fulltext_rep (const char *str_key, $/;"	f	file:
+make_hash_key	./subversion/libsvn_subr/config.c	/^make_hash_key (char *key)$/;"	f	file:
+make_node_baton	./subversion/libsvn_repos/load.c	/^make_node_baton (apr_hash_t *headers,$/;"	f	file:
+make_nonce	./subversion/libsvn_ra_svn/cram.c	/^static apr_status_t make_nonce(apr_uint64_t *nonce)$/;"	f	file:
+make_ob_fs_root	./subversion/bindings/swig/swigutil_py.c	/^static PyObject *make_ob_fs_root(void *ptr)$/;"	f	file:
+make_ob_pool	./subversion/bindings/swig/swigutil_py.c	/^static PyObject *make_ob_pool(void *ptr)$/;"	f	file:
+make_ob_status	./subversion/bindings/swig/swigutil_py.c	/^static PyObject *make_ob_status(void *ptr)$/;"	f	file:
+make_ob_window	./subversion/bindings/swig/swigutil_py.c	/^static PyObject *make_ob_window(void *ptr)$/;"	f	file:
+make_parent_path	./subversion/libsvn_fs/tree.c	/^make_parent_path (dag_node_t *node,$/;"	f	file:
+make_path_mutable	./subversion/libsvn_fs/tree.c	/^make_path_mutable (svn_fs_root_t *root,$/;"	f	file:
+make_pointer	./subversion/bindings/swig/swigutil_java.c	/^static jobject make_pointer(JNIEnv* env, void *ptr)$/;"	f	file:
+make_pointer	./subversion/bindings/swig/swigutil_py.c	/^static PyObject *make_pointer(const char *typename, void *ptr)$/;"	f	file:
+make_random_file	./subversion/tests/libsvn_diff/diff-diff3-test.c	/^make_random_file (const char *filename,$/;"	f	file:
+make_random_merge_file	./subversion/tests/libsvn_diff/diff-diff3-test.c	/^make_random_merge_file (const char *filename,$/;"	f	file:
+make_reporter	./subversion/libsvn_ra_dav/fetch.c	/^make_reporter (void *session_baton,$/;"	f	file:
+make_reporter	./subversion/libsvn_ra_local/ra_plugin.c	/^make_reporter (void *session_baton,$/;"	f	file:
+make_reporter_baton	./subversion/libsvn_ra_local/ra_plugin.c	/^make_reporter_baton (svn_ra_local__session_baton_t *session,$/;"	f	file:
+make_revision_baton	./subversion/libsvn_repos/load.c	/^make_revision_baton (apr_hash_t *headers,$/;"	f	file:
+make_revision_root	./subversion/libsvn_fs/tree.c	/^make_revision_root (svn_fs_t *fs,$/;"	f	file:
+make_root	./subversion/libsvn_fs/tree.c	/^make_root (svn_fs_t *fs,$/;"	f	file:
+make_stream_baton	./subversion/bindings/swig/swigutil_java.c	/^static stream_baton_t *make_stream_baton(JNIEnv *jenv,$/;"	f	file:
+make_string_from_option	./subversion/libsvn_subr/config.c	/^make_string_from_option (const char **valuep, svn_config_t *cfg,$/;"	f	file:
+make_token	./subversion/libsvn_ra_svn/editor.c	/^static const char *make_token(char type, ra_svn_edit_baton_t *eb,$/;"	f	file:
+make_token	./subversion/libsvn_ra_svn/editorp.c	/^static const char *make_token(char type, ra_svn_edit_baton_t *eb,$/;"	f	file:
+make_tunnel	./subversion/libsvn_ra_svn/client.c	/^static svn_error_t *make_tunnel(const char **args, svn_ra_svn_conn_t **conn,$/;"	f	file:
+make_txn	./subversion/libsvn_fs/revs-txns.c	/^make_txn (svn_fs_t *fs,$/;"	f	file:
+make_txn_root	./subversion/libsvn_fs/tree.c	/^make_txn_root (svn_fs_t *fs,$/;"	f	file:
+map_or_read_file	./subversion/libsvn_diff/diff_file.c	/^map_or_read_file(apr_file_t **file,$/;"	f	file:
+mark_deleted	./subversion/libsvn_wc/status.c	/^mark_deleted (void *baton,$/;"	f	file:
+mark_tree	./subversion/libsvn_wc/adm_ops.c	/^mark_tree (svn_wc_adm_access_t *adm_access, $/;"	f	file:
+match	./subversion/libsvn_subr/config.c	/^  const char *match;        \/* Filled in by search_groups *\/$/;"	m	struct:search_groups_baton	file:
+match_state	./subversion/libsvn_subr/date.c	/^} match_state;$/;"	t	file:
+max_rev	./subversion/svnversion/main.c	/^  svn_revnum_t max_rev;   \/* highest revision found. *\/$/;"	m	struct:status_baton	file:
+may_save	./subversion/include/svn_auth.h	/^  svn_boolean_t may_save;$/;"	m	struct:svn_auth_cred_simple_t
+may_save	./subversion/include/svn_auth.h	/^  svn_boolean_t may_save;$/;"	m	struct:svn_auth_cred_ssl_client_cert_pw_t
+may_save	./subversion/include/svn_auth.h	/^  svn_boolean_t may_save;$/;"	m	struct:svn_auth_cred_ssl_client_cert_t
+may_save	./subversion/include/svn_auth.h	/^  svn_boolean_t may_save;$/;"	m	struct:svn_auth_cred_ssl_server_trust_t
+may_save	./subversion/include/svn_auth.h	/^  svn_boolean_t may_save;$/;"	m	struct:svn_auth_cred_username_t
+maybe_add_with_history	./subversion/libsvn_repos/load.c	/^maybe_add_with_history (struct node_baton *nb,$/;"	f	file:
+maybe_bump_dir_info	./subversion/libsvn_wc/update_editor.c	/^maybe_bump_dir_info (struct edit_baton *eb,$/;"	f	file:
+maybe_convert_to_url	./subversion/libsvn_client/prop_commands.c	/^maybe_convert_to_url (const char **new_target,$/;"	f	file:
+maybe_print_realm	./subversion/clients/cmdline/prompt.c	/^maybe_print_realm (const char *realm, apr_pool_t *pool)$/;"	f	file:
+maybe_send_header	./subversion/mod_dav_svn/log.c	/^static svn_error_t * maybe_send_header(struct log_receiver_baton *lrb)$/;"	f	file:
+maybe_start_update_report	./subversion/mod_dav_svn/update.c	/^static svn_error_t * maybe_start_update_report(update_ctx_t *uc)$/;"	f	file:
+maybe_upgrade_format	./subversion/libsvn_wc/lock.c	/^maybe_upgrade_format (svn_wc_adm_access_t *adm_access, apr_pool_t *pool)$/;"	f	file:
+md5_checksum	./subversion/libsvn_repos/load.c	/^  const char *md5_checksum;     \/* null, if not available *\/$/;"	m	struct:node_baton	file:
+md5_context	./subversion/libsvn_delta/text_delta.c	/^  apr_md5_ctx_t md5_context;    \/* Leads to result_digest below. *\/$/;"	m	struct:apply_baton	file:
+md5_context	./subversion/libsvn_fs/reps-strings.c	/^  struct apr_md5_ctx_t md5_context;$/;"	m	struct:rep_read_baton	file:
+md5_context	./subversion/libsvn_fs/reps-strings.c	/^  struct apr_md5_ctx_t md5_context;$/;"	m	struct:rep_write_baton	file:
+md5_context	./subversion/libsvn_ra_dav/fetch.c	/^  apr_md5_ctx_t md5_context;  \/* accumulating checksum of file contents *\/$/;"	m	file:
+md5_digest	./subversion/libsvn_fs/reps-strings.c	/^  unsigned char md5_digest[APR_MD5_DIGESTSIZE];$/;"	m	struct:rep_write_baton	file:
+mday	./subversion/tests/libsvn_subr/time-test.c	/^  apr_int32_t mday;$/;"	m	struct:date_test	file:
+medium_file_integrity	./subversion/tests/libsvn_fs/fs-test.c	/^medium_file_integrity (const char **msg,$/;"	f	file:
+merge	./subversion/libsvn_fs/tree.c	/^merge (svn_stringbuf_t *conflict_p,$/;"	f	file:
+merge_adjacent_changes	./subversion/tests/libsvn_diff/diff-diff3-test.c	/^merge_adjacent_changes (const char **msg,$/;"	f	file:
+merge_args	./subversion/libsvn_fs/tree.c	/^struct merge_args$/;"	s	file:
+merge_callback	./subversion/libsvn_subr/config.c	/^merge_callback (void *baton, cfg_section_t *section, cfg_option_t *option)$/;"	f	file:
+merge_callbacks	./subversion/libsvn_client/diff.c	/^merge_callbacks =$/;"	v	file:
+merge_cmd	./subversion/clients/cmdline/cl.h	/^  const char *merge_cmd;         \/* the external merge command to use *\/$/;"	m	struct:svn_cl__opt_state_t
+merge_cmd_baton	./subversion/libsvn_client/diff.c	/^struct merge_cmd_baton {$/;"	s	file:
+merge_ctx_t	./subversion/libsvn_ra_dav/merge.c	/^} merge_ctx_t;$/;"	t	file:
+merge_dir_added	./subversion/libsvn_client/diff.c	/^merge_dir_added (svn_wc_adm_access_t *adm_access,$/;"	f	file:
+merge_dir_deleted	./subversion/libsvn_client/diff.c	/^merge_dir_deleted (svn_wc_adm_access_t *adm_access,$/;"	f	file:
+merge_elements	./subversion/libsvn_ra_dav/merge.c	/^static const svn_ra_dav__xml_elm_t merge_elements[] =$/;"	v	file:
+merge_file_added	./subversion/libsvn_client/diff.c	/^merge_file_added (svn_wc_adm_access_t *adm_access,$/;"	f	file:
+merge_file_changed	./subversion/libsvn_client/diff.c	/^merge_file_changed (svn_wc_adm_access_t *adm_access,$/;"	f	file:
+merge_file_deleted	./subversion/libsvn_client/diff.c	/^merge_file_deleted (svn_wc_adm_access_t *adm_access,$/;"	f	file:
+merge_props_changed	./subversion/libsvn_client/diff.c	/^merge_props_changed (svn_wc_adm_access_t *adm_access,$/;"	f	file:
+merge_rtype	./subversion/libsvn_ra_dav/merge.c	/^enum merge_rtype {$/;"	g	file:
+merge_with_part_already_present	./subversion/tests/libsvn_diff/diff-diff3-test.c	/^merge_with_part_already_present (const char **msg,$/;"	f	file:
+merging_commit	./subversion/tests/libsvn_fs/fs-test.c	/^merging_commit (const char **msg,$/;"	f	file:
+message	./subversion/clients/cmdline/cl.h	/^  const char *message;           \/* log message *\/$/;"	m	struct:svn_cl__opt_state_t
+message	./subversion/clients/cmdline/util.c	/^  const char *message;  \/* the message. *\/$/;"	m	struct:log_msg_baton	file:
+message	./subversion/include/svn_types.h	/^  const char *message;$/;"	m	struct:svn_error_t
+message_encoding	./subversion/clients/cmdline/util.c	/^  const char *message_encoding; \/* the locale\/encoding of the message. *\/$/;"	m	struct:log_msg_baton	file:
+mimetype	./subversion/libsvn_client/add.c	/^  const char *mimetype;$/;"	m	file:
+min	./subversion/tests/libsvn_subr/time-test.c	/^  apr_int32_t min;$/;"	m	struct:date_test	file:
+min_rev	./subversion/svnversion/main.c	/^  svn_revnum_t min_rev;   \/* lowest revision found. *\/$/;"	m	struct:status_baton	file:
+missing	./subversion/libsvn_wc/lock.c	/^static svn_wc_adm_access_t missing;$/;"	v	file:
+mixed_no_repair	./subversion/tests/libsvn_wc/translate-test.c	/^mixed_no_repair (const char **msg,$/;"	f	file:
+mixed_to_cr	./subversion/tests/libsvn_wc/translate-test.c	/^mixed_to_cr (const char **msg,$/;"	f	file:
+mixed_to_crlf	./subversion/tests/libsvn_wc/translate-test.c	/^mixed_to_crlf (const char **msg,$/;"	f	file:
+mixed_to_crlf_expand_author_date_rev_url	./subversion/tests/libsvn_wc/translate-test.c	/^mixed_to_crlf_expand_author_date_rev_url (const char **msg,$/;"	f	file:
+mixed_to_crlf_unexpand_author_date_rev_url	./subversion/tests/libsvn_wc/translate-test.c	/^mixed_to_crlf_unexpand_author_date_rev_url (const char **msg,$/;"	f	file:
+mixed_to_lf	./subversion/tests/libsvn_wc/translate-test.c	/^mixed_to_lf (const char **msg,$/;"	f	file:
+mixed_to_lf_expand_author_date	./subversion/tests/libsvn_wc/translate-test.c	/^mixed_to_lf_expand_author_date (const char **msg,$/;"	f	file:
+mixed_to_lf_unexpand_author_date	./subversion/tests/libsvn_wc/translate-test.c	/^mixed_to_lf_unexpand_author_date (const char **msg,$/;"	f	file:
+mkdir_urls	./subversion/libsvn_client/add.c	/^mkdir_urls (svn_client_commit_info_t **commit_info,$/;"	f	file:
+mod	./subversion/tests/libsvn_diff/diff-diff3-test.c	/^  int mod;    \/* Type of mod: 0, 1, 2 (can be interpreted as you like just$/;"	m	struct:random_mod	file:
+modified	./subversion/svnversion/main.c	/^  svn_boolean_t modified; \/* is anything modified? *\/$/;"	m	struct:status_baton	file:
+modified_length	./subversion/libsvn_diff/diff.h	/^  apr_off_t modified_length;$/;"	m	struct:svn_diff_t
+modified_start	./subversion/libsvn_diff/diff.h	/^  apr_off_t modified_start;$/;"	m	struct:svn_diff_t
+mon	./subversion/tests/libsvn_subr/time-test.c	/^  apr_int32_t mon;$/;"	m	struct:date_test	file:
+more	./subversion/libsvn_delta/text_delta.c	/^  svn_boolean_t more;           \/* TRUE if there are more data in the pool. *\/$/;"	m	struct:svn_txdelta_stream_t	file:
+msg	./subversion/libsvn_ra_dav/log.c	/^  const char *msg;$/;"	m	struct:log_baton	file:
+must_have_write_access	./subversion/svnserve/serve.c	/^static svn_error_t *must_have_write_access(svn_ra_svn_conn_t *conn,$/;"	f	file:
+mutable_root_node	./subversion/libsvn_fs/tree.c	/^mutable_root_node (dag_node_t **node_p,$/;"	f	file:
+my__realloc	./subversion/libsvn_subr/svn_string.c	/^my__realloc (char *data, apr_size_t oldsize, apr_size_t request, $/;"	f	file:
+my_commit_callback	./contrib/client-side/svn-push/svn-push.c	/^my_commit_callback (svn_revnum_t new_revision,$/;"	f	file:
+my_rand	./subversion/tests/libsvn_fs/fs-test.c	/^static int my_rand (int scalar, apr_uint32_t *seed)$/;"	f	file:
+my_simple_prompt_callback	./tools/examples/minimal_client.c	/^my_simple_prompt_callback (svn_auth_cred_simple_t **cred,$/;"	f	file:
+my_username_prompt_callback	./tools/examples/minimal_client.c	/^my_username_prompt_callback (svn_auth_cred_username_t **cred,$/;"	f	file:
+my_vcdiff_windoweater	./subversion/tests/svn_test_editor.c	/^my_vcdiff_windoweater (svn_txdelta_window_t *window, void *baton)$/;"	f	file:
+name	./subversion/include/svn_fs.h	/^  const char *name;$/;"	m	struct:svn_fs_dirent_t
+name	./subversion/include/svn_opt.h	/^  const char *name;$/;"	m	struct:svn_opt_subcommand_desc_t
+name	./subversion/include/svn_props.h	/^  const char *name;$/;"	m	struct:svn_prop_t
+name	./subversion/include/svn_ra.h	/^  const char *name;         $/;"	m	struct:svn_ra_plugin_t
+name	./subversion/include/svn_repos.h	/^  const char *name;$/;"	m	struct:svn_repos_node_t
+name	./subversion/include/svn_wc.h	/^  const char *name;$/;"	m	struct:svn_wc_entry_t
+name	./subversion/libsvn_fs/revs-txns.c	/^  const char *name;$/;"	m	struct:change_rev_prop_args	file:
+name	./subversion/libsvn_fs/revs-txns.c	/^  const char *name;$/;"	m	struct:change_txn_prop_args	file:
+name	./subversion/libsvn_fs/revs-txns.c	/^  const char *name;$/;"	m	struct:cleanup_txn_args	file:
+name	./subversion/libsvn_fs/revs-txns.c	/^  const char *name;$/;"	m	struct:open_txn_args	file:
+name	./subversion/libsvn_fs/tree.c	/^  const char *name;$/;"	m	struct:change_node_prop_args	file:
+name	./subversion/libsvn_ra_dav/props.c	/^  const char *name;$/;"	m	file:
+name	./subversion/libsvn_ra_dav/ra_dav.h	/^  const char *name;$/;"	m
+name	./subversion/libsvn_subr/config.c	/^  const char *name;$/;"	m	struct:cfg_option_t	file:
+name	./subversion/libsvn_subr/config.c	/^  const char *name;$/;"	m	struct:cfg_section_t	file:
+name	./subversion/libsvn_wc/status.c	/^  const char *name;$/;"	m	struct:dir_baton	file:
+name	./subversion/libsvn_wc/status.c	/^  const char *name;$/;"	m	struct:file_baton	file:
+name	./subversion/libsvn_wc/update_editor.c	/^  const char *name;$/;"	m	struct:dir_baton	file:
+name	./subversion/libsvn_wc/update_editor.c	/^  const char *name;$/;"	m	struct:file_baton	file:
+name	./subversion/mod_dav_svn/deadprops.c	/^  dav_prop_name name;$/;"	m	struct:dav_deadprop_rollback	file:
+name	./subversion/mod_dav_svn/repos.c	/^  const char *name;$/;"	m	struct:special_defn	file:
+name	./subversion/mod_dav_svn/update.c	/^  const char *name;    \/* the single-component name of this item *\/$/;"	m	file:
+names_p	./subversion/libsvn_fs/revs-txns.c	/^  apr_array_header_t **names_p;$/;"	m	struct:list_transactions_args	file:
+namestr	./subversion/libsvn_ra_dav/fetch.c	/^  svn_stringbuf_t *namestr;$/;"	m	file:
+need_parent	./subversion/libsvn_fs/dag.c	/^  svn_boolean_t need_parent; \/* TRUE if we only care about parenthood, not$/;"	m	struct:is_ancestor_baton	file:
+needs_header	./subversion/mod_dav_svn/log.c	/^  svn_boolean_t needs_header;$/;"	m	struct:log_receiver_baton	file:
+neon_failure_map	./subversion/libsvn_ra_dav/session.c	/^static const apr_uint32_t neon_failure_map[][2] =$/;"	v	file:
+neon_shim_baton_t	./subversion/libsvn_ra_dav/util.c	/^} neon_shim_baton_t;$/;"	t	file:
+new_URL	./subversion/libsvn_wc/update_editor.c	/^  const char *new_URL;$/;"	m	struct:dir_baton	file:
+new_URL	./subversion/libsvn_wc/update_editor.c	/^  const char *new_URL;$/;"	m	struct:file_baton	file:
+new_change_dir_prop	./contrib/client-side/svn-push/svn-push.c	/^new_change_dir_prop (void *dir_baton,$/;"	f
+new_change_file_prop	./contrib/client-side/svn-push/svn-push.c	/^new_change_file_prop (void *file_baton,$/;"	f
+new_data	./subversion/include/svn_delta.h	/^  const svn_string_t *new_data;$/;"	m	struct:svn_txdelta_window_t
+new_data	./subversion/libsvn_delta/delta.h	/^  svn_stringbuf_t *new_data;    \/* any new data used by the operations *\/$/;"	m	struct:svn_txdelta__ops_baton_t
+new_desc	./subversion/libsvn_client/externals.c	/^  apr_hash_t *new_desc;$/;"	m	struct:handle_external_item_change_baton	file:
+new_node_record	./subversion/include/svn_repos.h	/^  svn_error_t *(*new_node_record) (void **node_baton,$/;"	m	struct:svn_repos_parse_fns_t
+new_node_record	./subversion/libsvn_repos/load.c	/^new_node_record (void **node_baton,$/;"	f	file:
+new_node_record	./subversion/svndumpfilter/main.c	/^new_node_record (void **node_baton,$/;"	f	file:
+new_proplist	./subversion/tests/libsvn_subr/hashdump-test.c	/^apr_hash_t *proplist, *new_proplist;$/;"	v
+new_repository_path	./subversion/svnadmin/main.c	/^  const char *new_repository_path;                  \/* hotcopy dest. path *\/$/;"	m	struct:svnadmin_opt_state	file:
+new_rev	./subversion/libsvn_fs/tree.c	/^  svn_revnum_t new_rev;$/;"	m	struct:commit_args	file:
+new_rev	./subversion/libsvn_ra_svn/client.c	/^  svn_revnum_t *new_rev;$/;"	m	file:
+new_rev	./subversion/libsvn_repos/commit.c	/^  svn_revnum_t *new_rev;$/;"	m	struct:edit_baton	file:
+new_rev	./subversion/svnserve/serve.c	/^  svn_revnum_t *new_rev;$/;"	m	file:
+new_revision_record	./subversion/include/svn_repos.h	/^  svn_error_t *(*new_revision_record) (void **revision_baton,$/;"	m	struct:svn_repos_parse_fns_t
+new_revision_record	./subversion/libsvn_repos/load.c	/^new_revision_record (void **revision_baton,$/;"	f	file:
+new_revision_record	./subversion/svndumpfilter/main.c	/^new_revision_record (void **revision_baton,$/;"	f	file:
+new_target	./subversion/clients/cmdline/cl.h	/^  const char *new_target;        \/* diff target *\/$/;"	m	struct:svn_cl__opt_state_t
+newenv	./tools/examples/svnserve-sgid.c	/^char *newenv[] = { "PATH=\/bin:\/usr\/bin", "SHELL=\/bin\/sh", NULL };$/;"	v
+newline	./subversion/tests/svn_test_editor.c	/^newline (struct edit_baton *eb)$/;"	f	file:
+next	./subversion/libsvn_client/blame.c	/^  struct blame *next; \/* the next chunk *\/$/;"	m	struct:blame	file:
+next	./subversion/libsvn_client/blame.c	/^  struct rev *next;      \/* the next revision *\/$/;"	m	struct:rev	file:
+next	./subversion/libsvn_delta/compose_delta.c	/^  range_index_node_t *prev, *next;$/;"	m	struct:range_index_node_t	file:
+next	./subversion/libsvn_delta/compose_delta.c	/^  range_list_node_t *prev, *next;$/;"	m	struct:range_list_node_t	file:
+next	./subversion/libsvn_delta/vdelta.c	/^  struct hash_slot_t *next;$/;"	m	struct:hash_slot_t	file:
+next	./subversion/libsvn_diff/diff.h	/^  svn_diff__lcs_t      *next;$/;"	m	struct:svn_diff__lcs_t
+next	./subversion/libsvn_diff/diff.h	/^  svn_diff__position_t *next;$/;"	m	struct:svn_diff__position_t
+next	./subversion/libsvn_diff/diff.h	/^  svn_diff_t *next;$/;"	m	struct:svn_diff_t
+next	./subversion/libsvn_diff/diff_file.c	/^  struct svn_diff__file_token_t *next;$/;"	m	struct:svn_diff__file_token_t	file:
+next	./subversion/libsvn_fs/util/skel.h	/^  struct skel_t *next;$/;"	m	struct:skel_t
+next_credentials	./subversion/include/svn_auth.h	/^  svn_error_t * (*next_credentials) (void **credentials,$/;"	m	struct:svn_auth_provider_t
+next_entry_name	./subversion/libsvn_fs/tree.c	/^next_entry_name (const char **next_p,$/;"	f	file:
+next_free	./subversion/libsvn_delta/compose_delta.c	/^  alloc_block_t *next_free;$/;"	m	union:alloc_block_t	file:
+next_token	./subversion/libsvn_ra_svn/editor.c	/^  int next_token;$/;"	m	file:
+next_token	./subversion/libsvn_ra_svn/editorp.c	/^  int next_token;$/;"	m	file:
+noLog	./subversion/bindings/java/javahl/native/JNIUtil.h	/^	enum { noLog, errorLog, exceptionLog, entryLog } LogLevel;$/;"	e	enum:JNIUtil::<anonymous>
+no_auth_cache	./subversion/clients/cmdline/cl.h	/^  svn_boolean_t no_auth_cache;   \/* do not cache authentication information *\/$/;"	m	struct:svn_cl__opt_state_t
+no_autoprops	./subversion/clients/cmdline/cl.h	/^  svn_boolean_t no_autoprops;    \/* disable automatic properties *\/$/;"	m	struct:svn_cl__opt_state_t
+no_diff_deleted	./subversion/clients/cmdline/cl.h	/^  svn_boolean_t no_diff_deleted; \/* do not show diffs for deleted files *\/$/;"	m	struct:svn_cl__opt_state_t
+no_diff_deleted	./subversion/svnlook/main.c	/^  svn_boolean_t no_diff_deleted;  \/* --no-diff-deleted *\/$/;"	m	struct:svnlook_opt_state	file:
+no_diff_deleted	./subversion/svnlook/main.c	/^  svn_boolean_t no_diff_deleted;$/;"	m	struct:svnlook_ctxt_t	file:
+no_ignore	./subversion/clients/cmdline/cl.h	/^  svn_boolean_t no_ignore;       \/* disregard default ignores & svn:ignore's *\/$/;"	m	struct:svn_cl__opt_state_t
+no_ignore	./subversion/libsvn_wc/status.c	/^  svn_boolean_t no_ignore;$/;"	m	struct:edit_baton	file:
+node	./subversion/libsvn_diff/diff.h	/^  svn_diff__node_t     *node;$/;"	m	struct:svn_diff__position_t
+node	./subversion/libsvn_fs/tree.c	/^  dag_node_t *node; \/* NODE to be cached. *\/$/;"	m	struct:dag_node_cache_t	file:
+node	./subversion/libsvn_fs/tree.c	/^  dag_node_t *node;$/;"	m	struct:file_contents_baton_t	file:
+node	./subversion/libsvn_fs/tree.c	/^  dag_node_t *node;$/;"	m	struct:get_root_args	file:
+node	./subversion/libsvn_fs/tree.c	/^  dag_node_t *node;$/;"	m	struct:parent_path_t	file:
+node	./subversion/libsvn_fs/tree.c	/^  dag_node_t *node;$/;"	m	struct:text_baton_t	file:
+node	./subversion/libsvn_fs/tree.c	/^  dag_node_t *node;$/;"	m	struct:txdelta_baton_t	file:
+node	./subversion/libsvn_repos/node_tree.c	/^  svn_repos_node_t *node;$/;"	m	struct:edit_baton	file:
+node	./subversion/libsvn_repos/node_tree.c	/^  svn_repos_node_t *node;$/;"	m	struct:node_baton	file:
+node1_id	./subversion/libsvn_fs/dag.c	/^  const svn_fs_id_t *node1_id;$/;"	m	struct:is_ancestor_baton	file:
+node_baton	./subversion/libsvn_repos/load.c	/^struct node_baton$/;"	s	file:
+node_baton	./subversion/libsvn_repos/node_tree.c	/^struct node_baton$/;"	s	file:
+node_baton	./subversion/tests/svn_test_editor.c	/^struct node_baton$/;"	s	file:
+node_baton_t	./subversion/svndumpfilter/main.c	/^struct node_baton_t {$/;"	s	file:
+node_cache	./subversion/libsvn_fs/tree.c	/^  apr_hash_t *node_cache;$/;"	m	struct:svn_fs_root_t	file:
+node_cache_idx	./subversion/libsvn_fs/tree.c	/^  int node_cache_idx;$/;"	m	struct:svn_fs_root_t	file:
+node_cache_keys	./subversion/libsvn_fs/tree.c	/^  const char *node_cache_keys[SVN_FS_NODE_CACHE_MAX_KEYS];$/;"	m	struct:svn_fs_root_t	file:
+node_created_path_args	./subversion/libsvn_fs/tree.c	/^struct node_created_path_args {$/;"	s	file:
+node_created_rev_args	./subversion/libsvn_fs/tree.c	/^struct node_created_rev_args {$/;"	s	file:
+node_created_rev_args	./subversion/tests/libsvn_fs/fs-test.c	/^struct node_created_rev_args {$/;"	s	file:
+node_drop_count	./subversion/svndumpfilter/main.c	/^  apr_int32_t         node_drop_count;$/;"	m	struct:parse_baton_t	file:
+node_id	./subversion/libsvn_fs/id.h	/^  const char *node_id;$/;"	m	struct:svn_fs_id_t
+node_id_args	./subversion/libsvn_fs/tree.c	/^struct node_id_args {$/;"	s	file:
+node_kind	./subversion/libsvn_fs/tree.c	/^node_kind (svn_node_kind_t *kind_p,$/;"	f	file:
+node_kind_args	./subversion/libsvn_fs/tree.c	/^struct node_kind_args {$/;"	s	file:
+node_name	./subversion/include/svn_client.h	/^  svn_stringbuf_t *node_name;  $/;"	m	struct:svn_client_proplist_item_t
+node_path	./subversion/svndumpfilter/main.c	/^  svn_stringbuf_t *node_path;$/;"	m	struct:node_baton_t	file:
+node_pool	./subversion/libsvn_repos/node_tree.c	/^  apr_pool_t *node_pool;$/;"	m	struct:edit_baton	file:
+node_prop_args	./subversion/libsvn_fs/tree.c	/^struct node_prop_args$/;"	s	file:
+node_proplist_args	./subversion/libsvn_fs/tree.c	/^struct node_proplist_args {$/;"	s	file:
+node_props	./subversion/tests/libsvn_fs/fs-test.c	/^node_props (const char **msg,$/;"	f	file:
+node_rev_id	./subversion/include/svn_fs.h	/^  const svn_fs_id_t *node_rev_id;$/;"	m	struct:svn_fs_path_change_t
+node_revision	./subversion/libsvn_fs/dag.c	/^  svn_fs__node_revision_t *node_revision;$/;"	m	struct:dag_node_t	file:
+node_tree_delete_under_copy	./subversion/tests/libsvn_repos/repos-test.c	/^node_tree_delete_under_copy (const char **msg,$/;"	f	file:
+noderev_id	./subversion/libsvn_fs/fs.h	/^  const svn_fs_id_t *noderev_id;$/;"	m
+nodes	./subversion/libsvn_fs/fs.h	/^  DB *nodes;$/;"	m	struct:svn_fs_t
+non_interactive	./subversion/clients/cmdline/cl.h	/^  svn_boolean_t non_interactive; \/* do no interactive prompting *\/$/;"	m	struct:svn_cl__opt_state_t
+nonrecursive	./subversion/clients/cmdline/cl.h	/^  svn_boolean_t recursive, nonrecursive;$/;"	m	struct:svn_cl__opt_state_t
+noop	./subversion/tests/libsvn_wc/translate-test.c	/^noop (const char **msg,$/;"	f	file:
+not_a_dir_error	./subversion/libsvn_repos/delta.c	/^not_a_dir_error (const char *role, $/;"	f	file:
+not_found	./subversion/libsvn_fs/tree.c	/^not_found (svn_fs_root_t *root, const char *path)$/;"	f	file:
+not_txn	./subversion/libsvn_fs/tree.c	/^not_txn (svn_fs_root_t *root)$/;"	f	file:
+notice_ancestry	./subversion/clients/cmdline/cl.h	/^  svn_boolean_t notice_ancestry; \/* notice ancestry for diff-y operations *\/$/;"	m	struct:svn_cl__opt_state_t
+notify	./subversion/clients/cmdline/notify.c	/^notify (void *baton,$/;"	f	file:
+notify	./subversion/svnversion/main.c	/^notify (void *baton,$/;"	f	file:
+notify_baton	./subversion/clients/cmdline/notify.c	/^struct notify_baton$/;"	s	file:
+notify_baton	./subversion/include/svn_client.h	/^  void *notify_baton;$/;"	m	struct:svn_client_ctx_t
+notify_baton	./subversion/libsvn_client/export.c	/^  void *notify_baton;$/;"	m	struct:edit_baton	file:
+notify_baton	./subversion/libsvn_client/repos_diff.c	/^  void *notify_baton;$/;"	m	struct:edit_baton	file:
+notify_baton	./subversion/libsvn_wc/adm_ops.c	/^  void *notify_baton;$/;"	m	struct:resolve_callback_baton	file:
+notify_baton	./subversion/libsvn_wc/update_editor.c	/^  void *notify_baton;$/;"	m	struct:edit_baton	file:
+notify_func	./subversion/include/svn_client.h	/^  svn_wc_notify_func_t notify_func;$/;"	m	struct:svn_client_ctx_t
+notify_func	./subversion/libsvn_client/export.c	/^  svn_wc_notify_func_t notify_func;$/;"	m	struct:edit_baton	file:
+notify_func	./subversion/libsvn_client/repos_diff.c	/^  svn_wc_notify_func_t notify_func;$/;"	m	struct:edit_baton	file:
+notify_func	./subversion/libsvn_wc/adm_ops.c	/^  svn_wc_notify_func_t notify_func;$/;"	m	struct:resolve_callback_baton	file:
+notify_func	./subversion/libsvn_wc/update_editor.c	/^  svn_wc_notify_func_t notify_func;$/;"	m	struct:edit_baton	file:
+notify_path_prefix	./subversion/libsvn_client/commit_util.c	/^  const char *notify_path_prefix;      \/* notification path prefix *\/$/;"	m	struct:path_driver_cb_baton	file:
+nspace	./subversion/libsvn_ra_dav/ra_dav.h	/^  const char *nspace;$/;"	m
+num_buckets	./subversion/libsvn_delta/vdelta.c	/^  int num_buckets;              \/* Number of buckets in the table. *\/$/;"	m	struct:hash_table_t	file:
+num_entries	./subversion/tests/fs-helpers.h	/^  int num_entries;$/;"	m	struct:svn_test__tree_t
+num_lines	./subversion/clients/cmdline/log-cmd.c	/^num_lines (const char *msg)$/;"	f	file:
+num_ops	./subversion/include/svn_delta.h	/^  int num_ops;$/;"	m	struct:svn_txdelta_window_t
+num_ops	./subversion/libsvn_delta/delta.h	/^  int num_ops;                  \/* current number of ops *\/$/;"	m	struct:svn_txdelta__ops_baton_t
+num_revs	./subversion/tests/libsvn_repos/repos-test.c	/^  int num_revs;$/;"	m	struct:revisions_changed_results	file:
+number	./subversion/include/svn_opt.h	/^    svn_revnum_t number;$/;"	m	union:svn_opt_revision_t::<anonymous>
+number	./subversion/include/svn_ra_svn.h	/^    apr_uint64_t number;$/;"	m	union:svn_ra_svn_item_t::<anonymous>
+numcomponents	./subversion/mod_dav_svn/repos.c	/^  int numcomponents;$/;"	m	struct:special_defn	file:
+obj	./subversion/bindings/swig/swigutil_pl.c	/^    SV *obj;$/;"	m	file:
+octet_category	./subversion/libsvn_subr/utf_validate.c	/^static char octet_category[256] = {$/;"	v	file:
+offhours	./subversion/libsvn_subr/date.c	/^  apr_int32_t offhours;$/;"	m	file:
+offminutes	./subversion/libsvn_subr/date.c	/^  apr_int32_t offminutes;$/;"	m	file:
+offs	./subversion/libsvn_delta/compose_delta.c	/^  apr_size_t *offs;$/;"	m	struct:offset_index_t	file:
+offset	./subversion/include/svn_delta.h	/^  apr_size_t offset;$/;"	m	struct:svn_txdelta_op_t
+offset	./subversion/libsvn_delta/compose_delta.c	/^  apr_size_t offset;$/;"	m	struct:range_index_node_t	file:
+offset	./subversion/libsvn_delta/compose_delta.c	/^  apr_size_t offset;$/;"	m	struct:range_list_node_t	file:
+offset	./subversion/libsvn_diff/diff.h	/^  apr_off_t             offset;$/;"	m	struct:svn_diff__position_t
+offset	./subversion/libsvn_diff/diff_file.c	/^  apr_off_t offset;$/;"	m	struct:svn_diff__file_token_t	file:
+offset	./subversion/libsvn_fs/fs.h	/^  svn_filesize_t offset;$/;"	m
+offset	./subversion/libsvn_fs/reps-strings.c	/^  svn_filesize_t offset;$/;"	m	struct:rep_read_baton	file:
+offset	./subversion/libsvn_subr/date.c	/^  int offset;              \/* Where to store the any results of the action,$/;"	m	file:
+offset_in_chunk	./subversion/libsvn_diff/diff_file.c	96;"	d	file:
+offset_index_t	./subversion/libsvn_delta/compose_delta.c	/^typedef struct offset_index_t$/;"	s	file:
+offset_index_t	./subversion/libsvn_delta/compose_delta.c	/^} offset_index_t;$/;"	t	file:
+offset_to_chunk	./subversion/libsvn_diff/diff_file.c	95;"	d	file:
+okay_to_bump_path	./subversion/libsvn_ra_dav/merge.c	/^static svn_boolean_t okay_to_bump_path (const char *path,$/;"	f	file:
+old_change_dir_prop	./contrib/client-side/svn-push/svn-push.c	/^svn_error_t *(*old_change_dir_prop) (void *dir_baton,$/;"	v
+old_change_file_prop	./contrib/client-side/svn-push/svn-push.c	/^svn_error_t *(*old_change_file_prop) (void *file_baton,$/;"	v
+old_desc	./subversion/libsvn_client/externals.c	/^  apr_hash_t *old_desc;$/;"	m	struct:handle_external_item_change_baton	file:
+old_target	./subversion/clients/cmdline/cl.h	/^  const char *old_target;        \/* diff target *\/$/;"	m	struct:svn_cl__opt_state_t
+old_timestamp_format	./subversion/libsvn_subr/time.c	/^static const char * const old_timestamp_format =$/;"	v	file:
+oldest_dumped_rev	./subversion/libsvn_repos/dump.c	/^  svn_revnum_t oldest_dumped_rev;$/;"	m	struct:edit_baton	file:
+omit_log_message	./subversion/clients/cmdline/log-cmd.c	/^  svn_boolean_t omit_log_message;$/;"	m	struct:log_receiver_baton	file:
+op	./subversion/libsvn_fs/trail.c	/^  const char *op;$/;"	m	struct:trail_debug_t	file:
+open	./subversion/include/svn_ra.h	/^  svn_error_t *(*open) (void **session_baton,$/;"	m	struct:svn_ra_plugin_t
+open_adm_file	./subversion/libsvn_wc/adm_files.c	/^open_adm_file (apr_file_t **handle,$/;"	f	file:
+open_admin_tmp_file	./subversion/libsvn_client/ra.c	/^open_admin_tmp_file (apr_file_t **fp,$/;"	f	file:
+open_berkeley_filesystem	./subversion/tests/libsvn_fs/fs-test.c	/^open_berkeley_filesystem (const char **msg,$/;"	f	file:
+open_binary_read	./subversion/tests/libsvn_delta/vdelta-test.c	/^open_binary_read (const char *path, apr_pool_t *pool)$/;"	f	file:
+open_dir	./subversion/libsvn_delta/path_driver.c	/^open_dir (apr_array_header_t *db_stack,$/;"	f	file:
+open_directory	./subversion/include/svn_delta.h	/^  svn_error_t *(*open_directory) (const char *path,$/;"	m	struct:svn_delta_editor_t
+open_directory	./subversion/libsvn_client/commit_util.c	/^open_directory (const char *path,$/;"	f	file:
+open_directory	./subversion/libsvn_client/repos_diff.c	/^open_directory (const char *path,$/;"	f	file:
+open_directory	./subversion/libsvn_delta/cancel.c	/^open_directory (const char *path,$/;"	f	file:
+open_directory	./subversion/libsvn_repos/commit.c	/^open_directory (const char *path,$/;"	f	file:
+open_directory	./subversion/libsvn_repos/dump.c	/^open_directory (const char *path,$/;"	f	file:
+open_directory	./subversion/libsvn_repos/node_tree.c	/^open_directory (const char *path,$/;"	f	file:
+open_directory	./subversion/libsvn_wc/diff.c	/^open_directory (const char *path,$/;"	f	file:
+open_directory	./subversion/libsvn_wc/status.c	/^open_directory (const char *path,$/;"	f	file:
+open_directory	./subversion/libsvn_wc/update_editor.c	/^open_directory (const char *path,$/;"	f	file:
+open_file	./subversion/include/svn_delta.h	/^  svn_error_t *(*open_file) (const char *path,$/;"	m	struct:svn_delta_editor_t
+open_file	./subversion/libsvn_client/commit_util.c	/^open_file (const char *path,$/;"	f	file:
+open_file	./subversion/libsvn_client/repos_diff.c	/^open_file (const char *path,$/;"	f	file:
+open_file	./subversion/libsvn_delta/cancel.c	/^open_file (const char *path,$/;"	f	file:
+open_file	./subversion/libsvn_repos/commit.c	/^open_file (const char *path,$/;"	f	file:
+open_file	./subversion/libsvn_repos/dump.c	/^open_file (const char *path,$/;"	f	file:
+open_file	./subversion/libsvn_repos/node_tree.c	/^open_file (const char *path,$/;"	f	file:
+open_file	./subversion/libsvn_wc/diff.c	/^open_file (const char *path,$/;"	f	file:
+open_file	./subversion/libsvn_wc/status.c	/^open_file (const char *path,$/;"	f	file:
+open_file	./subversion/libsvn_wc/update_editor.c	/^open_file (const char *name,$/;"	f	file:
+open_helper	./subversion/mod_dav_svn/update.c	/^static svn_error_t * open_helper(svn_boolean_t is_dir,$/;"	f	file:
+open_item	./subversion/libsvn_delta/default_editor.c	/^open_item (const char *path,$/;"	f	file:
+open_path	./subversion/libsvn_fs/tree.c	/^open_path (parent_path_t **parent_path_p,$/;"	f	file:
+open_path_flags_t	./subversion/libsvn_fs/tree.c	/^typedef enum open_path_flags_t {$/;"	g	file:
+open_path_flags_t	./subversion/libsvn_fs/tree.c	/^} open_path_flags_t;$/;"	t	file:
+open_path_last_optional	./subversion/libsvn_fs/tree.c	/^  open_path_last_optional = 1$/;"	e	enum:open_path_flags_t	file:
+open_ra_session	./subversion/tests/libsvn_ra_local/ra-local-test.c	/^open_ra_session (const char **msg)$/;"	f	file:
+open_repos	./subversion/svnadmin/main.c	/^open_repos (svn_repos_t **repos,$/;"	f	file:
+open_root	./subversion/include/svn_delta.h	/^  svn_error_t *(*open_root) (void *edit_baton,$/;"	m	struct:svn_delta_editor_t
+open_root	./subversion/libsvn_client/commit_util.c	/^open_root (void *edit_baton,$/;"	f	file:
+open_root	./subversion/libsvn_client/export.c	/^open_root (void *edit_baton,$/;"	f	file:
+open_root	./subversion/libsvn_client/repos_diff.c	/^open_root (void *edit_baton,$/;"	f	file:
+open_root	./subversion/libsvn_delta/cancel.c	/^open_root (void *edit_baton,$/;"	f	file:
+open_root	./subversion/libsvn_delta/default_editor.c	/^open_root (void *edit_baton,$/;"	f	file:
+open_root	./subversion/libsvn_repos/commit.c	/^open_root (void *edit_baton,$/;"	f	file:
+open_root	./subversion/libsvn_repos/dump.c	/^open_root (void *edit_baton, $/;"	f	file:
+open_root	./subversion/libsvn_repos/node_tree.c	/^open_root (void *edit_baton,$/;"	f	file:
+open_root	./subversion/libsvn_wc/diff.c	/^open_root (void *edit_baton,$/;"	f	file:
+open_root	./subversion/libsvn_wc/status.c	/^open_root (void *edit_baton,$/;"	f	file:
+open_root	./subversion/libsvn_wc/update_editor.c	/^open_root (void *edit_baton,$/;"	f	file:
+open_root_internal	./subversion/libsvn_client/export.c	/^open_root_internal (const char *path,$/;"	f	file:
+open_tempfile	./subversion/tests/libsvn_delta/random-test.c	/^open_tempfile (const char *name_template, apr_pool_t *pool)$/;"	f	file:
+open_tmp_file	./subversion/include/svn_ra.h	/^  svn_error_t *(*open_tmp_file) (apr_file_t **fp,$/;"	m	struct:svn_ra_callbacks_t
+open_tmp_file	./subversion/libsvn_client/ra.c	/^open_tmp_file (apr_file_t **fp,$/;"	f	file:
+open_txn	./subversion/mod_dav_svn/version.c	/^static dav_error *open_txn(svn_fs_txn_t **ptxn, svn_fs_t *fs,$/;"	f	file:
+open_txn_args	./subversion/libsvn_fs/revs-txns.c	/^struct open_txn_args$/;"	s	file:
+open_writable_binary_file	./subversion/svnlook/main.c	/^open_writable_binary_file (apr_file_t **fh, $/;"	f	file:
+operator const char *	./subversion/bindings/java/javahl/native/JNIStringHolder.h	/^	operator const char *() { return m_str; }$/;"	f	class:JNIStringHolder
+ops	./subversion/include/svn_delta.h	/^  const svn_txdelta_op_t *ops;$/;"	m	struct:svn_txdelta_window_t
+ops	./subversion/libsvn_delta/delta.h	/^  svn_txdelta_op_t *ops;        \/* the operations *\/$/;"	m	struct:svn_txdelta__ops_baton_t
+ops_size	./subversion/libsvn_delta/delta.h	/^  int ops_size;                 \/* number of ops allocated *\/$/;"	m	struct:svn_txdelta__ops_baton_t
+opt_def	./subversion/tests/libsvn_subr/config-test.c	/^static const apr_getopt_option_t opt_def[] =$/;"	v	file:
+opt_state	./subversion/clients/cmdline/cl.h	/^  svn_cl__opt_state_t *opt_state;$/;"	m
+option	./subversion/libsvn_subr/config_file.c	/^  svn_stringbuf_t *option;$/;"	m	struct:parse_context_t	file:
+options	./subversion/libsvn_client/diff.c	/^  const apr_array_header_t *options;$/;"	m	struct:diff_cmd_baton	file:
+options	./subversion/libsvn_subr/config.c	/^  apr_hash_t *options;$/;"	m	struct:cfg_section_t	file:
+options_ctx_t	./subversion/libsvn_ra_dav/options.c	/^} options_ctx_t;$/;"	t	file:
+options_elements	./subversion/libsvn_ra_dav/options.c	/^static const svn_ra_dav__xml_elm_t options_elements[] =$/;"	v	file:
+options_table	./subversion/svnadmin/main.c	/^static const apr_getopt_option_t options_table[] =$/;"	v	file:
+options_table	./subversion/svndumpfilter/main.c	/^static const apr_getopt_option_t options_table[] =$/;"	v	file:
+options_table	./subversion/svnlook/main.c	/^static const apr_getopt_option_t options_table[] =$/;"	v	file:
+orig_path_1	./subversion/libsvn_client/diff.c	/^  const char *orig_path_1;$/;"	m	struct:diff_cmd_baton	file:
+orig_path_2	./subversion/libsvn_client/diff.c	/^  const char *orig_path_2;$/;"	m	struct:diff_cmd_baton	file:
+original_file	./subversion/libsvn_wc/diff.c	/^  apr_file_t *original_file;$/;"	m	struct:file_baton	file:
+original_length	./subversion/libsvn_diff/diff.h	/^  apr_off_t original_length;$/;"	m	struct:svn_diff_t
+original_start	./subversion/libsvn_diff/diff.h	/^  apr_off_t original_start;$/;"	m	struct:svn_diff_t
+original_userdata	./subversion/libsvn_ra_dav/util.c	/^  void *original_userdata;                   \/* userdata for callbacks *\/$/;"	m	file:
+out	./subversion/clients/cmdline/log-cmd.c	/^  svn_stream_t *out;$/;"	m	struct:log_receiver_baton	file:
+out	./subversion/libsvn_subr/stream.c	/^  z_stream *out;                \/* compressed stream for writing *\/$/;"	m	struct:zbaton	file:
+out_file	./subversion/libsvn_ra_svn/ra_svn.h	/^  apr_file_t *out_file;$/;"	m	struct:svn_ra_svn_conn_st
+out_of_date	./subversion/libsvn_repos/commit.c	/^out_of_date (const char *path, const char *txn_name)$/;"	f	file:
+out_stream	./subversion/svndumpfilter/main.c	/^  svn_stream_t       *out_stream;$/;"	m	struct:parse_baton_t	file:
+out_stream	./subversion/tests/svn_test_editor.c	/^  svn_stream_t *out_stream;$/;"	m	struct:edit_baton	file:
+outfile	./subversion/libsvn_client/diff.c	/^  apr_file_t *outfile;$/;"	m	struct:diff_cmd_baton	file:
+output	./subversion/libsvn_delta/svndiff.c	/^  svn_stream_t *output;$/;"	m	struct:encoder_baton	file:
+output	./subversion/libsvn_subr/quoprint.c	/^  svn_stream_t *output;$/;"	m	struct:decode_baton	file:
+output	./subversion/libsvn_subr/quoprint.c	/^  svn_stream_t *output;$/;"	m	struct:encode_baton	file:
+output	./subversion/libsvn_subr/svn_base64.c	/^  svn_stream_t *output;$/;"	m	struct:decode_baton	file:
+output	./subversion/libsvn_subr/svn_base64.c	/^  svn_stream_t *output;$/;"	m	struct:encode_baton	file:
+output	./subversion/mod_dav_svn/log.c	/^  ap_filter_t *output;$/;"	m	struct:log_receiver_baton	file:
+output	./subversion/mod_dav_svn/repos.c	/^  ap_filter_t *output;$/;"	m	file:
+output	./subversion/mod_dav_svn/update.c	/^  ap_filter_t *output;$/;"	m	file:
+output	./subversion/mod_dav_svn/update.c	/^  ap_filter_t *output;$/;"	m	struct:brigade_write_baton	file:
+output_common	./subversion/include/svn_diff.h	/^  svn_error_t *(*output_common)(void *output_baton,$/;"	m	struct:svn_diff_output_fns_t
+output_conflict	./subversion/include/svn_diff.h	/^  svn_error_t *(*output_conflict)(void *output_baton,$/;"	m	struct:svn_diff_output_fns_t
+output_diff_common	./subversion/include/svn_diff.h	/^  svn_error_t *(*output_diff_common)(void *output_baton,$/;"	m	struct:svn_diff_output_fns_t
+output_diff_latest	./subversion/include/svn_diff.h	/^  svn_error_t *(*output_diff_latest)(void *output_baton,$/;"	m	struct:svn_diff_output_fns_t
+output_diff_modified	./subversion/include/svn_diff.h	/^  svn_error_t *(*output_diff_modified)(void *output_baton,$/;"	m	struct:svn_diff_output_fns_t
+output_diff_modified	./subversion/libsvn_client/blame.c	/^output_diff_modified (void *baton,$/;"	f	file:
+output_encoding	./subversion/libsvn_subr/cmdline.c	/^static const char *output_encoding = NULL;$/;"	v	file:
+output_fns	./subversion/libsvn_client/blame.c	/^static const svn_diff_output_fns_t output_fns = {$/;"	v	file:
+output_stream	./subversion/libsvn_diff/diff_file.c	/^  svn_stream_t *output_stream;$/;"	m	struct:svn_diff3__file_output_baton_t	file:
+output_stream	./subversion/libsvn_diff/diff_file.c	/^  svn_stream_t *output_stream;$/;"	m	struct:svn_diff__file_output_baton_t	file:
+outstream	./subversion/libsvn_repos/load.c	/^  svn_stream_t *outstream;$/;"	m	struct:parse_baton	file:
+p	./subversion/mod_dav_svn/deadprops.c	/^  apr_pool_t *p;$/;"	m	struct:dav_db	file:
+param1	./subversion/tests/fs-helpers.h	/^  const char *param1; \/* command parameter (see above) *\/$/;"	m	struct:svn_test__txn_script_command_t
+parameters	./subversion/libsvn_subr/auth.c	/^  apr_hash_t *parameters;$/;"	m	struct:svn_auth_baton_t	file:
+params	./subversion/mod_dav_svn/repos.c	/^  const dav_walk_params *params;$/;"	m	file:
+parent	./subversion/include/svn_repos.h	/^  struct svn_repos_node_t *parent;$/;"	m	struct:svn_repos_node_t
+parent	./subversion/libsvn_diff/token.c	/^  svn_diff__node_t     *parent;$/;"	m	struct:svn_diff__node_t	file:
+parent	./subversion/libsvn_fs/tree.c	/^  struct parent_path_t *parent;$/;"	m	struct:parent_path_t	file:
+parent	./subversion/libsvn_repos/commit.c	/^  struct dir_baton *parent;$/;"	m	struct:dir_baton	file:
+parent	./subversion/libsvn_wc/update_editor.c	/^  struct bump_dir_info *parent;$/;"	m	struct:bump_dir_info	file:
+parent_baton	./subversion/libsvn_ra_dav/fetch.c	/^  void *parent_baton;$/;"	m	file:
+parent_baton	./subversion/libsvn_repos/node_tree.c	/^  struct node_baton *parent_baton;$/;"	m	struct:node_baton	file:
+parent_baton	./subversion/libsvn_wc/status.c	/^  struct dir_baton *parent_baton;$/;"	m	struct:dir_baton	file:
+parent_baton	./subversion/libsvn_wc/update_editor.c	/^  struct dir_baton *parent_baton;$/;"	m	struct:dir_baton	file:
+parent_baton	./subversion/tests/svn_test_editor.c	/^  struct node_baton *parent_baton;$/;"	m	struct:node_baton	file:
+parent_dir	./subversion/libsvn_client/externals.c	/^  const char *parent_dir;$/;"	m	struct:handle_external_item_change_baton	file:
+parent_dir	./subversion/libsvn_repos/load.c	/^  const char *parent_dir;$/;"	m	struct:parse_baton	file:
+parent_dir	./subversion/svnadmin/main.c	/^  const char *parent_dir;$/;"	m	struct:svnadmin_opt_state	file:
+parent_dir_baton	./subversion/libsvn_repos/dump.c	/^  struct dir_baton *parent_dir_baton;$/;"	m	struct:dir_baton	file:
+parent_path_path	./subversion/libsvn_fs/tree.c	/^parent_path_path (parent_path_t *parent_path,$/;"	f	file:
+parent_path_t	./subversion/libsvn_fs/tree.c	/^typedef struct parent_path_t$/;"	s	file:
+parent_path_t	./subversion/libsvn_fs/tree.c	/^} parent_path_t;$/;"	t	file:
+parse	./subversion/libsvn_fs/util/skel.c	/^parse (const char *data,$/;"	f	file:
+parse	./subversion/mod_dav_svn/repos.c	/^  int (*parse)(dav_resource_combined *comb, const char *path,$/;"	m	struct:special_defn	file:
+parse_authz_baton	./subversion/mod_authz_svn/mod_authz_svn.c	/^struct parse_authz_baton {$/;"	s	file:
+parse_authz_line	./subversion/mod_authz_svn/mod_authz_svn.c	/^static svn_boolean_t parse_authz_line(const char *name, const char *value,$/;"	f	file:
+parse_authz_lines	./subversion/mod_authz_svn/mod_authz_svn.c	/^static int parse_authz_lines(svn_config_t *cfg,$/;"	f	file:
+parse_authz_section	./subversion/mod_authz_svn/mod_authz_svn.c	/^static svn_boolean_t parse_authz_section(const char *section_name,$/;"	f	file:
+parse_authz_sections	./subversion/mod_authz_svn/mod_authz_svn.c	/^static int parse_authz_sections(svn_config_t *cfg,$/;"	f	file:
+parse_baton	./subversion/libsvn_repos/load.c	/^struct parse_baton$/;"	s	file:
+parse_baton_initialize	./subversion/svndumpfilter/main.c	/^parse_baton_initialize (struct parse_baton_t **pb,$/;"	f	file:
+parse_baton_t	./subversion/svndumpfilter/main.c	/^struct parse_baton_t {$/;"	s	file:
+parse_context_t	./subversion/libsvn_subr/config_file.c	/^typedef struct parse_context_t$/;"	s	file:
+parse_context_t	./subversion/libsvn_subr/config_file.c	/^} parse_context_t;$/;"	t	file:
+parse_cstr	./subversion/tests/libsvn_fs/skel-test.c	/^parse_cstr (char *str, apr_pool_t *pool)$/;"	f	file:
+parse_explicit_length	./subversion/tests/libsvn_fs/skel-test.c	/^parse_explicit_length (const char **msg, $/;"	f	file:
+parse_format_version	./subversion/libsvn_repos/load.c	/^parse_format_version (const char *versionstring, int *version)$/;"	f	file:
+parse_implicit_length	./subversion/tests/libsvn_fs/skel-test.c	/^parse_implicit_length (const char **msg, $/;"	f	file:
+parse_invalid_atoms	./subversion/tests/libsvn_fs/skel-test.c	/^parse_invalid_atoms (const char **msg, $/;"	f	file:
+parse_list	./subversion/tests/libsvn_fs/skel-test.c	/^parse_list (const char **msg, $/;"	f	file:
+parse_local_repos_path	./subversion/svnadmin/main.c	/^parse_local_repos_path (apr_getopt_t *os, $/;"	f	file:
+parse_one_rev	./subversion/libsvn_subr/opt.c	/^static char *parse_one_rev (svn_opt_revision_t *revision, char *str,$/;"	f	file:
+parse_option	./subversion/libsvn_subr/config_file.c	/^parse_option (int *pch, parse_context_t *ctx)$/;"	f	file:
+parse_path	./subversion/libsvn_subr/opt.c	/^parse_path (svn_opt_revision_t *rev,$/;"	f	file:
+parse_property_block	./subversion/libsvn_repos/load.c	/^parse_property_block (svn_stream_t *stream,$/;"	f	file:
+parse_proplist	./subversion/libsvn_ra_svn/client.c	/^static svn_error_t *parse_proplist(apr_array_header_t *list, apr_pool_t *pool,$/;"	f	file:
+parse_section	./subversion/libsvn_subr/config_win.c	/^parse_section (svn_config_t *cfg, HKEY hkey, const char *section,$/;"	f	file:
+parse_section_name	./subversion/libsvn_subr/config_file.c	/^parse_section_name (int *pch, parse_context_t *ctx)$/;"	f	file:
+parse_str	./subversion/tests/libsvn_fs/skel-test.c	/^parse_str (svn_stringbuf_t *str, apr_pool_t *pool)$/;"	f	file:
+parse_text_block	./subversion/libsvn_repos/load.c	/^parse_text_block (svn_stream_t *stream,$/;"	f	file:
+parse_url	./subversion/libsvn_ra_svn/client.c	/^static int parse_url(const char *url, const char **tunnel, const char **user,$/;"	f	file:
+parse_value	./subversion/libsvn_subr/config_file.c	/^parse_value (int *pch, parse_context_t *ctx)$/;"	f	file:
+parsed_request	./subversion/libsvn_ra_dav/util.c	/^parsed_request(ne_session *sess,$/;"	f	file:
+parser	./subversion/libsvn_ra_dav/props.c	/^  ne_xml_parser *parser; \/* xml parser handling the PROPSET request. *\/$/;"	m	struct:propfind_ctx_t	file:
+parser	./subversion/libsvn_subr/xml.c	/^  XML_Parser parser;$/;"	m	struct:svn_xml_parser_t	file:
+parser	./subversion/libsvn_wc/entries.c	/^  svn_xml_parser_t *parser;$/;"	m	struct:entries_accumulator	file:
+parser	./subversion/libsvn_wc/log.c	/^  svn_xml_parser_t *parser;$/;"	m	struct:log_runner	file:
+password	./subversion/include/svn_auth.h	/^  const char *password;$/;"	m	struct:svn_auth_cred_simple_t
+password	./subversion/include/svn_auth.h	/^  const char *password;$/;"	m	struct:svn_auth_cred_ssl_client_cert_pw_t
+password	./subversion/libsvn_ra_dav/session.c	/^  const char *password;  \/* Cannot be NULL, but "" is okay. *\/$/;"	m	struct:proxy_auth_baton	file:
+path	./subversion/include/svn_client.h	/^  const char *path;$/;"	m	struct:svn_client_commit_item_t
+path	./subversion/libsvn_client/blame.c	/^  const char *path;        \/* The path to be processed *\/$/;"	m	struct:log_message_baton	file:
+path	./subversion/libsvn_client/blame.c	/^  const char *path;      \/* the absolute repository path *\/$/;"	m	struct:rev	file:
+path	./subversion/libsvn_client/commit_util.c	/^  const char *path;$/;"	m	struct:edit_baton	file:
+path	./subversion/libsvn_client/commit_util.c	/^  const char *path;$/;"	m	struct:item_baton	file:
+path	./subversion/libsvn_client/diff.c	/^  const char *path;                   \/* The wc path of the second target, this$/;"	m	struct:merge_cmd_baton	file:
+path	./subversion/libsvn_client/export.c	/^  const char *path;$/;"	m	struct:dir_baton	file:
+path	./subversion/libsvn_client/export.c	/^  const char *path;$/;"	m	struct:file_baton	file:
+path	./subversion/libsvn_client/relocate.c	/^  const char *path;$/;"	m	struct:validator_baton_t	file:
+path	./subversion/libsvn_client/repos_diff.c	/^  const char *path;$/;"	m	struct:dir_baton	file:
+path	./subversion/libsvn_client/repos_diff.c	/^  const char *path;$/;"	m	struct:file_baton	file:
+path	./subversion/libsvn_client/repos_diff.c	/^  const char *path;$/;"	m	struct:temp_file_cleanup_s	file:
+path	./subversion/libsvn_diff/diff_file.c	/^  const char *path[2];$/;"	m	struct:svn_diff__file_output_baton_t	file:
+path	./subversion/libsvn_diff/diff_file.c	/^  const char *path[3];$/;"	m	struct:svn_diff3__file_output_baton_t	file:
+path	./subversion/libsvn_diff/diff_file.c	/^  const char *path[4];$/;"	m	struct:svn_diff__file_baton_t	file:
+path	./subversion/libsvn_fs/fs.h	/^  char *path;$/;"	m	struct:svn_fs_t
+path	./subversion/libsvn_fs/fs.h	/^  const char *path;$/;"	m
+path	./subversion/libsvn_fs/tree.c	/^  const char *path;         \/* Path for the node whose ancestry we seek. *\/$/;"	m	struct:copied_from_args	file:
+path	./subversion/libsvn_fs/tree.c	/^  const char *path;$/;"	m	struct:change_node_prop_args	file:
+path	./subversion/libsvn_fs/tree.c	/^  const char *path;$/;"	m	struct:delete_args	file:
+path	./subversion/libsvn_fs/tree.c	/^  const char *path;$/;"	m	struct:dir_entries_args	file:
+path	./subversion/libsvn_fs/tree.c	/^  const char *path;$/;"	m	struct:file_checksum_args	file:
+path	./subversion/libsvn_fs/tree.c	/^  const char *path;$/;"	m	struct:file_contents_baton_t	file:
+path	./subversion/libsvn_fs/tree.c	/^  const char *path;$/;"	m	struct:file_length_args	file:
+path	./subversion/libsvn_fs/tree.c	/^  const char *path;$/;"	m	struct:make_dir_args	file:
+path	./subversion/libsvn_fs/tree.c	/^  const char *path;$/;"	m	struct:make_file_args	file:
+path	./subversion/libsvn_fs/tree.c	/^  const char *path;$/;"	m	struct:node_created_path_args	file:
+path	./subversion/libsvn_fs/tree.c	/^  const char *path;$/;"	m	struct:node_created_rev_args	file:
+path	./subversion/libsvn_fs/tree.c	/^  const char *path;$/;"	m	struct:node_id_args	file:
+path	./subversion/libsvn_fs/tree.c	/^  const char *path;$/;"	m	struct:node_prop_args	file:
+path	./subversion/libsvn_fs/tree.c	/^  const char *path;$/;"	m	struct:node_proplist_args	file:
+path	./subversion/libsvn_fs/tree.c	/^  const char *path;$/;"	m	struct:svn_fs_history_t	file:
+path	./subversion/libsvn_fs/tree.c	/^  const char *path;$/;"	m	struct:text_baton_t	file:
+path	./subversion/libsvn_fs/tree.c	/^  const char *path;$/;"	m	struct:txdelta_baton_t	file:
+path	./subversion/libsvn_repos/commit.c	/^  const char *path; \/* the -absolute- path to this dir in the fs *\/$/;"	m	struct:dir_baton	file:
+path	./subversion/libsvn_repos/commit.c	/^  const char *path; \/* the -absolute- path to this file in the fs *\/$/;"	m	struct:file_baton	file:
+path	./subversion/libsvn_repos/dump.c	/^  const char *path;$/;"	m	struct:dir_baton	file:
+path	./subversion/libsvn_repos/dump.c	/^  const char *path;$/;"	m	struct:edit_baton	file:
+path	./subversion/libsvn_repos/load.c	/^  const char *path;$/;"	m	struct:node_baton	file:
+path	./subversion/libsvn_repos/repos.h	/^  char *path;$/;"	m	struct:svn_repos_t
+path	./subversion/libsvn_wc/diff.c	/^  const char *path;$/;"	m	struct:dir_baton	file:
+path	./subversion/libsvn_wc/diff.c	/^  const char *path;$/;"	m	struct:file_baton	file:
+path	./subversion/libsvn_wc/lock.c	/^  const char *path;$/;"	m	struct:svn_wc_adm_access_t	file:
+path	./subversion/libsvn_wc/status.c	/^  const char *path;$/;"	m	struct:dir_baton	file:
+path	./subversion/libsvn_wc/status.c	/^  const char *path;$/;"	m	struct:file_baton	file:
+path	./subversion/libsvn_wc/update_editor.c	/^  const char *path;$/;"	m	struct:bump_dir_info	file:
+path	./subversion/libsvn_wc/update_editor.c	/^  const char *path;$/;"	m	struct:dir_baton	file:
+path	./subversion/libsvn_wc/update_editor.c	/^  const char *path;$/;"	m	struct:file_baton	file:
+path	./subversion/mod_dav_svn/update.c	/^  const char *path;    \/* a telescoping extension of uc->anchor *\/$/;"	m	file:
+path	./subversion/tests/fs-helpers.h	/^  const char *path;     \/* full path of this node *\/$/;"	m	struct:svn_test__tree_entry_t
+path	./subversion/tests/fs-helpers.h	/^  const char *path; \/* path to resource in the filesystem *\/$/;"	m	struct:svn_test__txn_script_command_t
+path	./subversion/tests/libsvn_fs/fs-test.c	/^  const char *path;$/;"	m	struct:node_created_rev_args	file:
+path	./subversion/tests/libsvn_repos/dir-delta-editor.c	/^  const char *path;$/;"	m	struct:file_baton	file:
+path	./subversion/tests/libsvn_repos/repos-test.c	/^  const char *path;$/;"	m	struct:revisions_changed_results	file:
+path	./subversion/tests/svn_test_editor.c	/^  const char *path;$/;"	m	struct:node_baton	file:
+path1	./subversion/libsvn_fs/tree.c	/^  const char *path1;$/;"	m	struct:things_changed_args	file:
+path2	./subversion/libsvn_fs/tree.c	/^  const char *path2;$/;"	m	struct:things_changed_args	file:
+path2	./subversion/mod_dav_svn/update.c	/^  const char *path2;   \/* a telescoping extension of uc->dst_path *\/$/;"	m	file:
+path3	./subversion/mod_dav_svn/update.c	/^  const char *path3;   \/* a telescoping extension of uc->dst_path$/;"	m	file:
+path_driver_cb_baton	./subversion/libsvn_client/commit_util.c	/^struct path_driver_cb_baton$/;"	s	file:
+path_driver_cb_baton	./subversion/libsvn_client/copy.c	/^struct path_driver_cb_baton$/;"	s	file:
+path_driver_cb_baton	./subversion/libsvn_repos/replay.c	/^struct path_driver_cb_baton$/;"	s	file:
+path_driver_cb_func	./subversion/libsvn_client/add.c	/^path_driver_cb_func (void **dir_baton,$/;"	f	file:
+path_driver_cb_func	./subversion/libsvn_client/copy.c	/^path_driver_cb_func (void **dir_baton,$/;"	f	file:
+path_driver_cb_func	./subversion/libsvn_client/delete.c	/^path_driver_cb_func (void **dir_baton,$/;"	f	file:
+path_driver_cb_func	./subversion/libsvn_repos/replay.c	/^path_driver_cb_func (void **dir_baton,$/;"	f	file:
+path_end_revision	./subversion/libsvn_client/repos_diff.c	/^  const char *path_end_revision;$/;"	m	struct:file_baton	file:
+path_hint	./subversion/libsvn_fs/tree.c	/^  const char *path_hint;$/;"	m	struct:svn_fs_history_t	file:
+path_start_revision	./subversion/libsvn_client/repos_diff.c	/^  const char *path_start_revision;$/;"	m	struct:file_baton	file:
+pathbuf	./subversion/libsvn_ra_dav/fetch.c	/^  svn_stringbuf_t *pathbuf;$/;"	m	file:
+pathmap	./subversion/mod_dav_svn/update.c	/^  apr_hash_t *pathmap;$/;"	m	file:
+paths_changed_args	./subversion/libsvn_fs/tree.c	/^struct paths_changed_args$/;"	s	file:
+pb	./subversion/libsvn_client/ssl_client_cert_providers.c	/^  ssl_client_cert_prompt_provider_baton_t *pb;$/;"	m	file:
+pb	./subversion/libsvn_client/ssl_client_cert_pw_providers.c	/^  ssl_client_cert_pw_prompt_provider_baton_t *pb;$/;"	m	file:
+pb	./subversion/libsvn_repos/load.c	/^  struct parse_baton *pb;$/;"	m	struct:revision_baton	file:
+pb	./subversion/svndumpfilter/main.c	/^  struct parse_baton_t *pb;$/;"	m	struct:revision_baton_t	file:
+perl_func_invoker	./subversion/bindings/swig/swigutil_pl.h	/^typedef enum perl_func_invoker {$/;"	g
+perl_func_invoker_t	./subversion/bindings/swig/swigutil_pl.h	/^} perl_func_invoker_t;$/;"	t
+phrase_1	./subversion/tests/libsvn_subr/string-test.c	/^const char *phrase_1 = "hello, ";$/;"	v
+phrase_2	./subversion/tests/libsvn_subr/string-test.c	/^const char *phrase_2 = "a longish phrase of sorts, longer than 16 anyway";$/;"	v
+pick_error_code	./subversion/libsvn_wc/log.c	/^pick_error_code (struct log_runner *loggy)$/;"	f	file:
+pl_element_converter_t	./subversion/bindings/swig/swigutil_pl.c	/^typedef void *(*pl_element_converter_t)(SV *value, void *ctx, apr_pool_t *pool);$/;"	t	file:
+pool	./subversion/bindings/swig/swigutil_java.c	/^  apr_pool_t *pool;     \/* a pool for constructing errors *\/$/;"	m	file:
+pool	./subversion/bindings/swig/swigutil_java.c	/^  apr_pool_t *pool;     \/* pool to use for errors *\/$/;"	m	file:
+pool	./subversion/clients/cmdline/notify.c	/^  apr_pool_t *pool; \/* this pool is cleared after every notification,$/;"	m	struct:notify_baton	file:
+pool	./subversion/clients/cmdline/status-cmd.c	/^  apr_pool_t *pool;$/;"	m	struct:status_baton	file:
+pool	./subversion/clients/cmdline/util.c	/^  apr_pool_t *pool; \/* a pool. *\/$/;"	m	struct:log_msg_baton	file:
+pool	./subversion/include/svn_string.h	/^  apr_pool_t *pool;$/;"	m	struct:svn_stringbuf_t
+pool	./subversion/include/svn_types.h	/^  apr_pool_t *pool;$/;"	m	struct:svn_error_t
+pool	./subversion/libsvn_client/add.c	/^  apr_pool_t *pool;$/;"	m	file:
+pool	./subversion/libsvn_client/blame.c	/^  apr_pool_t *pool; $/;"	m	struct:log_message_baton	file:
+pool	./subversion/libsvn_client/blame.c	/^  apr_pool_t *pool;$/;"	m	struct:diff_baton	file:
+pool	./subversion/libsvn_client/client.h	/^  apr_pool_t *pool;$/;"	m
+pool	./subversion/libsvn_client/commit_util.c	/^  apr_pool_t *pool;$/;"	m	struct:commit_baton	file:
+pool	./subversion/libsvn_client/diff.c	/^  apr_pool_t *pool;$/;"	m	struct:diff_cmd_baton	file:
+pool	./subversion/libsvn_client/diff.c	/^  apr_pool_t *pool;$/;"	m	struct:merge_cmd_baton	file:
+pool	./subversion/libsvn_client/export.c	/^  apr_pool_t *pool;$/;"	m	struct:file_baton	file:
+pool	./subversion/libsvn_client/export.c	/^  apr_pool_t *pool;$/;"	m	struct:handler_baton	file:
+pool	./subversion/libsvn_client/externals.c	/^  apr_pool_t *pool;$/;"	m	struct:handle_external_item_change_baton	file:
+pool	./subversion/libsvn_client/externals.c	/^  apr_pool_t *pool;$/;"	m	struct:handle_externals_desc_change_baton	file:
+pool	./subversion/libsvn_client/relocate.c	/^  apr_pool_t *pool;$/;"	m	struct:validator_baton_t	file:
+pool	./subversion/libsvn_client/repos_diff.c	/^  apr_pool_t *pool;$/;"	m	struct:dir_baton	file:
+pool	./subversion/libsvn_client/repos_diff.c	/^  apr_pool_t *pool;$/;"	m	struct:edit_baton	file:
+pool	./subversion/libsvn_client/repos_diff.c	/^  apr_pool_t *pool;$/;"	m	struct:file_baton	file:
+pool	./subversion/libsvn_client/repos_diff.c	/^  apr_pool_t *pool;$/;"	m	struct:temp_file_cleanup_s	file:
+pool	./subversion/libsvn_delta/compose_delta.c	/^  apr_pool_t *pool;$/;"	m	struct:range_index_t	file:
+pool	./subversion/libsvn_delta/path_driver.c	/^  apr_pool_t *pool;  \/* the pool associated with the dir baton. *\/$/;"	m	struct:dir_stack_t	file:
+pool	./subversion/libsvn_delta/svndiff.c	/^  apr_pool_t *pool;$/;"	m	struct:decode_baton	file:
+pool	./subversion/libsvn_delta/svndiff.c	/^  apr_pool_t *pool;$/;"	m	struct:encoder_baton	file:
+pool	./subversion/libsvn_delta/text_delta.c	/^  apr_pool_t *pool;             \/* Pool to allocate data from *\/$/;"	m	struct:apply_baton	file:
+pool	./subversion/libsvn_diff/diff_file.c	/^  apr_pool_t *pool;$/;"	m	struct:svn_diff3__file_output_baton_t	file:
+pool	./subversion/libsvn_diff/diff_file.c	/^  apr_pool_t *pool;$/;"	m	struct:svn_diff__file_baton_t	file:
+pool	./subversion/libsvn_diff/diff_file.c	/^  apr_pool_t *pool;$/;"	m	struct:svn_diff__file_output_baton_t	file:
+pool	./subversion/libsvn_diff/token.c	/^  apr_pool_t           *pool;$/;"	m	struct:svn_diff__tree_t	file:
+pool	./subversion/libsvn_fs/dag.c	/^  apr_pool_t *pool;$/;"	m	struct:dag_node_t	file:
+pool	./subversion/libsvn_fs/fs.h	/^  apr_pool_t *pool;$/;"	m	struct:svn_fs_t
+pool	./subversion/libsvn_fs/reps-strings.c	/^  apr_pool_t *pool;$/;"	m	struct:rep_read_baton	file:
+pool	./subversion/libsvn_fs/reps-strings.c	/^  apr_pool_t *pool;$/;"	m	struct:rep_write_baton	file:
+pool	./subversion/libsvn_fs/revs-txns.c	/^  apr_pool_t *pool;$/;"	m	struct:list_transactions_args	file:
+pool	./subversion/libsvn_fs/trail.h	/^  apr_pool_t *pool;$/;"	m	struct:trail_t
+pool	./subversion/libsvn_fs/tree.c	/^  apr_pool_t *pool;           \/* The pool in which to allocate pred_id. *\/$/;"	m	struct:txn_pred_id_args	file:
+pool	./subversion/libsvn_fs/tree.c	/^  apr_pool_t *pool;         \/* Allocate `result_path' here. *\/$/;"	m	struct:copied_from_args	file:
+pool	./subversion/libsvn_fs/tree.c	/^  apr_pool_t *pool; \/* Pool in which NODE is allocated. *\/$/;"	m	struct:dag_node_cache_t	file:
+pool	./subversion/libsvn_fs/tree.c	/^  apr_pool_t *pool;$/;"	m	struct:file_contents_baton_t	file:
+pool	./subversion/libsvn_fs/tree.c	/^  apr_pool_t *pool;$/;"	m	struct:history_prev_args	file:
+pool	./subversion/libsvn_fs/tree.c	/^  apr_pool_t *pool;$/;"	m	struct:svn_fs_root_t	file:
+pool	./subversion/libsvn_fs/tree.c	/^  apr_pool_t *pool;$/;"	m	struct:text_baton_t	file:
+pool	./subversion/libsvn_fs/tree.c	/^  apr_pool_t *pool;$/;"	m	struct:things_changed_args	file:
+pool	./subversion/libsvn_fs/tree.c	/^  apr_pool_t *pool;$/;"	m	struct:txdelta_baton_t	file:
+pool	./subversion/libsvn_ra_dav/commit.c	/^  apr_pool_t *pool; \/* pool in which this resource is allocated. *\/$/;"	m	file:
+pool	./subversion/libsvn_ra_dav/commit.c	/^  apr_pool_t *pool; \/* the pool from open_foo() \/ add_foo() *\/$/;"	m	file:
+pool	./subversion/libsvn_ra_dav/fetch.c	/^  apr_pool_t *pool;$/;"	m	file:
+pool	./subversion/libsvn_ra_dav/merge.c	/^  apr_pool_t *pool;$/;"	m	file:
+pool	./subversion/libsvn_ra_dav/options.c	/^  apr_pool_t *pool;$/;"	m	file:
+pool	./subversion/libsvn_ra_dav/props.c	/^  apr_pool_t *pool;$/;"	m	struct:propfind_ctx_t	file:
+pool	./subversion/libsvn_ra_dav/ra_dav.h	/^  apr_pool_t *pool;$/;"	m
+pool	./subversion/libsvn_ra_dav/util.c	/^  apr_pool_t *pool;                          \/* pool on which this is alloc-d *\/$/;"	m	file:
+pool	./subversion/libsvn_ra_local/ra_local.h	/^  apr_pool_t *pool;$/;"	m	struct:svn_ra_local__session_baton_t
+pool	./subversion/libsvn_ra_local/ra_plugin.c	/^  apr_pool_t *pool;                \/* pool for scratch work *\/$/;"	m	struct:deltify_etc_baton	file:
+pool	./subversion/libsvn_ra_svn/client.c	/^  apr_pool_t *pool;$/;"	m	file:
+pool	./subversion/libsvn_ra_svn/editor.c	/^  apr_pool_t *pool;$/;"	m	file:
+pool	./subversion/libsvn_ra_svn/editorp.c	/^  apr_pool_t *pool;$/;"	m	file:
+pool	./subversion/libsvn_ra_svn/ra_svn.h	/^  apr_pool_t *pool;$/;"	m	struct:svn_ra_svn_conn_st
+pool	./subversion/libsvn_repos/commit.c	/^  apr_pool_t *pool; \/* my personal pool, in which I am allocated. *\/$/;"	m	struct:dir_baton	file:
+pool	./subversion/libsvn_repos/commit.c	/^  apr_pool_t *pool;$/;"	m	struct:edit_baton	file:
+pool	./subversion/libsvn_repos/dump.c	/^  apr_pool_t *pool;$/;"	m	struct:dir_baton	file:
+pool	./subversion/libsvn_repos/load.c	/^  apr_pool_t *pool;$/;"	m	struct:node_baton	file:
+pool	./subversion/libsvn_repos/load.c	/^  apr_pool_t *pool;$/;"	m	struct:revision_baton	file:
+pool	./subversion/libsvn_repos/reporter.c	/^  apr_pool_t *pool;$/;"	m	struct:report_baton_t	file:
+pool	./subversion/libsvn_subr/auth.c	/^  apr_pool_t *pool;$/;"	m	struct:svn_auth_baton_t	file:
+pool	./subversion/libsvn_subr/config.c	/^  apr_pool_t *pool;$/;"	m	struct:search_groups_baton	file:
+pool	./subversion/libsvn_subr/config_file.c	/^  apr_pool_t *pool;$/;"	m	struct:parse_context_t	file:
+pool	./subversion/libsvn_subr/config_impl.h	/^  apr_pool_t *pool;$/;"	m	struct:svn_config_t
+pool	./subversion/libsvn_subr/quoprint.c	/^  apr_pool_t *pool;$/;"	m	struct:decode_baton	file:
+pool	./subversion/libsvn_subr/quoprint.c	/^  apr_pool_t *pool;$/;"	m	struct:encode_baton	file:
+pool	./subversion/libsvn_subr/stream.c	/^  apr_pool_t *pool;             \/* The pool this baton is allocated$/;"	m	struct:zbaton	file:
+pool	./subversion/libsvn_subr/stream.c	/^  apr_pool_t *pool;$/;"	m	struct:baton_apr	file:
+pool	./subversion/libsvn_subr/svn_base64.c	/^  apr_pool_t *pool;$/;"	m	struct:decode_baton	file:
+pool	./subversion/libsvn_subr/svn_base64.c	/^  apr_pool_t *pool;$/;"	m	struct:encode_baton	file:
+pool	./subversion/libsvn_subr/xml.c	/^  apr_pool_t *pool;$/;"	m	struct:svn_xml_parser_t	file:
+pool	./subversion/libsvn_wc/diff.c	/^  apr_pool_t *pool;$/;"	m	struct:dir_baton	file:
+pool	./subversion/libsvn_wc/diff.c	/^  apr_pool_t *pool;$/;"	m	struct:edit_baton	file:
+pool	./subversion/libsvn_wc/diff.c	/^  apr_pool_t *pool;$/;"	m	struct:file_baton	file:
+pool	./subversion/libsvn_wc/entries.c	/^  apr_pool_t *pool;$/;"	m	struct:entries_accumulator	file:
+pool	./subversion/libsvn_wc/lock.c	/^  apr_pool_t *pool;$/;"	m	struct:svn_wc_adm_access_t	file:
+pool	./subversion/libsvn_wc/log.c	/^  apr_pool_t *pool;$/;"	m	struct:log_runner	file:
+pool	./subversion/libsvn_wc/status.c	/^  apr_pool_t *pool;$/;"	m	struct:dir_baton	file:
+pool	./subversion/libsvn_wc/status.c	/^  apr_pool_t *pool;$/;"	m	struct:edit_baton	file:
+pool	./subversion/libsvn_wc/status.c	/^  apr_pool_t *pool;$/;"	m	struct:file_baton	file:
+pool	./subversion/libsvn_wc/update_editor.c	/^  apr_pool_t *pool;$/;"	m	struct:dir_baton	file:
+pool	./subversion/libsvn_wc/update_editor.c	/^  apr_pool_t *pool;$/;"	m	struct:edit_baton	file:
+pool	./subversion/libsvn_wc/update_editor.c	/^  apr_pool_t *pool;$/;"	m	struct:file_baton	file:
+pool	./subversion/libsvn_wc/update_editor.c	/^  apr_pool_t *pool;$/;"	m	struct:handler_baton	file:
+pool	./subversion/libsvn_wc/wc.h	/^  apr_pool_t *pool;$/;"	m	struct:svn_wc_traversal_info_t
+pool	./subversion/mod_authz_svn/mod_authz_svn.c	/^    apr_pool_t *pool;$/;"	m	struct:parse_authz_baton	file:
+pool	./subversion/mod_dav_svn/dav_svn.h	/^  apr_pool_t *pool;     \/* request_rec -> pool *\/$/;"	m
+pool	./subversion/mod_dav_svn/dav_svn.h	/^  apr_pool_t *pool;$/;"	m	struct:dav_resource_private
+pool	./subversion/mod_dav_svn/repos.c	/^  apr_pool_t *pool;$/;"	m	file:
+pool	./subversion/mod_dav_svn/update.c	/^  apr_pool_t *pool;$/;"	m	file:
+pool	./subversion/mod_dav_svn/version.c	/^  apr_pool_t *pool;$/;"	m	struct:cleanup_deltify_baton	file:
+pool	./subversion/svnserve/main.c	/^  apr_pool_t *pool;$/;"	m	struct:serve_thread_t	file:
+pool	./subversion/svnversion/main.c	/^  apr_pool_t *pool;       \/* pool in which to store alloc-needy things. *\/$/;"	m	struct:status_baton	file:
+pool	./subversion/tests/libsvn_ra_local/ra-local-test.c	/^apr_pool_t *pool;$/;"	v
+pool	./subversion/tests/libsvn_repos/dir-delta-editor.c	/^  apr_pool_t *pool;$/;"	m	struct:edit_baton	file:
+pool	./subversion/tests/svn_test_editor.c	/^  apr_pool_t *pool;$/;"	m	struct:edit_baton	file:
+pool_cleanup	./subversion/libsvn_wc/lock.c	/^pool_cleanup (void *p)$/;"	f	file:
+pool_cleanup_child	./subversion/libsvn_wc/lock.c	/^pool_cleanup_child (void *p)$/;"	f	file:
+pop_stack	./subversion/libsvn_delta/path_driver.c	/^pop_stack (apr_array_header_t *db_stack,$/;"	f	file:
+pos	./subversion/libsvn_delta/text_delta.c	/^  svn_filesize_t pos;           \/* Offset of next read in source file. *\/$/;"	m	struct:svn_txdelta_stream_t	file:
+position	./subversion/libsvn_diff/diff.h	/^  svn_diff__position_t *position[2];$/;"	m	struct:svn_diff__lcs_t
+position	./subversion/libsvn_diff/lcs.c	/^    svn_diff__position_t *position[2];$/;"	m	struct:svn_diff__snake_t	file:
+pred_count	./subversion/libsvn_fs/tree.c	/^  int pred_count;$/;"	m	struct:txn_pred_count_args	file:
+pred_id	./subversion/libsvn_fs/tree.c	/^  const svn_fs_id_t *pred_id; \/* The returned predecessor id. *\/$/;"	m	struct:txn_pred_id_args	file:
+predecessor_count	./subversion/libsvn_fs/fs.h	/^  int predecessor_count;$/;"	m
+predecessor_id	./subversion/libsvn_fs/fs.h	/^  const svn_fs_id_t *predecessor_id;$/;"	m
+prefixes	./subversion/svndumpfilter/main.c	/^  apr_array_header_t *prefixes;          \/* mainargs.           *\/$/;"	m	struct:svndumpfilter_opt_state	file:
+prefixes	./subversion/svndumpfilter/main.c	/^  apr_array_header_t *prefixes;$/;"	m	struct:parse_baton_t	file:
+prejfile	./subversion/include/svn_wc.h	/^  const char *prejfile;$/;"	m	struct:svn_wc_entry_t
+prep	./subversion/mod_dav_svn/repos.c	/^  dav_error * (*prep)(dav_resource_combined *comb);$/;"	m	struct:res_type_handler	file:
+prep_directory	./subversion/libsvn_wc/update_editor.c	/^prep_directory (struct dir_baton *db,$/;"	f	file:
+prepare_tmpfiles	./subversion/svnlook/main.c	/^prepare_tmpfiles (const char **tmpfile1,$/;"	f	file:
+present	./subversion/tests/libsvn_fs/fs-test.c	/^  svn_boolean_t present;$/;"	m	struct:check_id_args	file:
+preserve_history	./subversion/libsvn_fs/tree.c	/^  svn_boolean_t preserve_history;$/;"	m	struct:copy_args	file:
+preserve_revprops	./subversion/svndumpfilter/main.c	/^  svn_boolean_t       preserve_revprops;$/;"	m	struct:parse_baton_t	file:
+preserve_revprops	./subversion/svndumpfilter/main.c	/^  svn_boolean_t preserve_revprops;       \/* --preserve-revprops *\/$/;"	m	struct:svndumpfilter_opt_state	file:
+prev	./subversion/libsvn_delta/compose_delta.c	/^  range_index_node_t *prev, *next;$/;"	m	struct:range_index_node_t	file:
+prev	./subversion/libsvn_delta/compose_delta.c	/^  range_list_node_t *prev, *next;$/;"	m	struct:range_list_node_t	file:
+prev	./subversion/libsvn_fs/trail.c	/^  struct trail_debug_t *prev;$/;"	m	struct:trail_debug_t	file:
+prev	./subversion/libsvn_fs/trail.c	/^  struct undo *prev;$/;"	m	struct:undo	file:
+prev_history_p	./subversion/libsvn_fs/tree.c	/^  svn_fs_history_t **prev_history_p;$/;"	m	struct:history_prev_args	file:
+prev_node	./subversion/tests/libsvn_delta/range-index-test.h	/^static range_index_node_t *prev_node, *prev_prev_node;$/;"	v
+prev_prev_node	./subversion/tests/libsvn_delta/range-index-test.h	/^static range_index_node_t *prev_node, *prev_prev_node;$/;"	v
+print	./subversion/tests/svn_test_editor.c	/^print (struct edit_baton *eb, int level, svn_stringbuf_t *str)$/;"	f	file:
+print_changed_tree	./subversion/svnlook/main.c	/^print_changed_tree (svn_repos_node_t *node,$/;"	f	file:
+print_chrevs	./subversion/tests/libsvn_repos/repos-test.c	/^print_chrevs (const apr_array_header_t *revs_got,$/;"	f	file:
+print_command_info	./subversion/libsvn_subr/opt.c	/^print_command_info (const svn_opt_subcommand_desc_t *cmd,$/;"	f	file:
+print_delta_window	./subversion/tests/libsvn_delta/vdelta-test.c	/^print_delta_window (const svn_txdelta_window_t *window,$/;"	f	file:
+print_diff_tree	./subversion/svnlook/main.c	/^print_diff_tree (svn_fs_root_t *root,$/;"	f	file:
+print_dirents	./subversion/clients/cmdline/ls-cmd.c	/^print_dirents (apr_hash_t *dirents,$/;"	f	file:
+print_dirs_changed_tree	./subversion/svnlook/main.c	/^print_dirs_changed_tree (svn_repos_node_t *node,$/;"	f	file:
+print_entry	./subversion/clients/cmdline/info-cmd.c	/^print_entry (const char *target,$/;"	f	file:
+print_error	./subversion/libsvn_subr/error.c	/^print_error (svn_error_t *err, FILE *stream, svn_boolean_t print_strerror)$/;"	f	file:
+print_fs_stats	./subversion/libsvn_fs/fs.c	244;"	d	file:
+print_history	./subversion/svnlook/main.c	/^print_history (void *baton,$/;"	f	file:
+print_history_baton	./subversion/svnlook/main.c	/^struct print_history_baton$/;"	s	file:
+print_node_data	./subversion/tests/libsvn_delta/range-index-test.h	/^print_node_data (range_index_node_t *node, const char *msg, apr_off_t ndx)$/;"	f
+print_range_index	./subversion/tests/libsvn_delta/range-index-test.h	/^print_range_index (range_index_node_t *node, const char *msg, apr_off_t ndx)$/;"	f
+print_range_index_i	./subversion/tests/libsvn_delta/range-index-test.h	/^print_range_index_i (range_index_node_t *node, const char *msg, apr_off_t ndx)$/;"	f
+print_range_index_r	./subversion/tests/libsvn_delta/range-index-test.h	/^print_range_index_r (range_index_node_t *node, const char *msg, apr_off_t ndx)$/;"	f
+print_status	./subversion/clients/cmdline/status-cmd.c	/^print_status (void *baton,$/;"	f	file:
+print_status	./subversion/clients/cmdline/status.c	/^print_status (const char *path,$/;"	f	file:
+print_trail_debug	./subversion/libsvn_fs/trail.c	/^print_trail_debug (trail_t *trail,$/;"	f	file:
+print_trail_debug	./subversion/libsvn_fs/trail.c	70;"	d	file:
+print_tree	./subversion/svnlook/main.c	/^print_tree (svn_fs_root_t *root,$/;"	f	file:
+print_usage	./subversion/tests/libsvn_repos/md5args.c	/^print_usage (const char *progname)$/;"	f	file:
+print_version_info	./subversion/libsvn_subr/opt.c	/^print_version_info (const char *pgm_name,$/;"	f	file:
+pristine	./subversion/libsvn_client/prop_commands.c	/^  svn_boolean_t pristine;  \/* Select base rather than working props. *\/$/;"	m	struct:propget_walk_baton	file:
+pristine	./subversion/libsvn_client/prop_commands.c	/^  svn_boolean_t pristine;  \/* Select base rather than working props. *\/$/;"	m	struct:proplist_walk_baton	file:
+pristine_or_working_props	./subversion/libsvn_client/prop_commands.c	/^pristine_or_working_props (apr_hash_t **props,$/;"	f	file:
+pristine_or_working_propval	./subversion/libsvn_client/prop_commands.c	/^pristine_or_working_propval (const svn_string_t **propval,$/;"	f	file:
+pristine_props	./subversion/libsvn_client/repos_diff.c	/^  apr_hash_t *pristine_props;$/;"	m	struct:dir_baton	file:
+pristine_props	./subversion/libsvn_client/repos_diff.c	/^  apr_hash_t *pristine_props;$/;"	m	struct:file_baton	file:
+priv	./subversion/mod_dav_svn/repos.c	/^  dav_resource_private priv;$/;"	m	file:
+probe	./subversion/libsvn_wc/lock.c	/^probe (const char **dir,$/;"	f	file:
+proc	./subversion/libsvn_ra_svn/ra_svn.h	/^  apr_proc_t *proc;       \/* Used by client.c when sock is NULL *\/$/;"	m	struct:svn_ra_svn_conn_st
+prompt	./subversion/clients/cmdline/prompt.c	/^prompt (const char **result,$/;"	f	file:
+prompt_and_read_line	./tools/examples/minimal_client.c	/^prompt_and_read_line(const char *prompt,$/;"	f	file:
+prompt_baton	./subversion/libsvn_client/simple_providers.c	/^  void *prompt_baton;$/;"	m	file:
+prompt_baton	./subversion/libsvn_client/ssl_client_cert_providers.c	/^  void *prompt_baton;$/;"	m	file:
+prompt_baton	./subversion/libsvn_client/ssl_client_cert_pw_providers.c	/^  void *prompt_baton;$/;"	m	file:
+prompt_baton	./subversion/libsvn_client/ssl_server_trust_providers.c	/^  void *prompt_baton;$/;"	m	file:
+prompt_baton	./subversion/libsvn_client/username_providers.c	/^  void *prompt_baton;$/;"	m	file:
+prompt_for_simple_creds	./subversion/libsvn_client/simple_providers.c	/^prompt_for_simple_creds (svn_auth_cred_simple_t **cred_p,$/;"	f	file:
+prompt_for_username_creds	./subversion/libsvn_client/username_providers.c	/^prompt_for_username_creds (svn_auth_cred_username_t **cred_p,$/;"	f	file:
+prompt_func	./subversion/libsvn_client/simple_providers.c	/^  svn_auth_simple_prompt_func_t prompt_func;$/;"	m	file:
+prompt_func	./subversion/libsvn_client/ssl_client_cert_providers.c	/^  svn_auth_ssl_client_cert_prompt_func_t prompt_func;$/;"	m	file:
+prompt_func	./subversion/libsvn_client/ssl_client_cert_pw_providers.c	/^  svn_auth_ssl_client_cert_pw_prompt_func_t prompt_func;$/;"	m	file:
+prompt_func	./subversion/libsvn_client/ssl_server_trust_providers.c	/^  svn_auth_ssl_server_trust_prompt_func_t prompt_func;$/;"	m	file:
+prompt_func	./subversion/libsvn_client/username_providers.c	/^  svn_auth_username_prompt_func_t prompt_func;$/;"	m	file:
+prop_changed	./subversion/libsvn_wc/status.c	/^  svn_boolean_t prop_changed;$/;"	m	struct:dir_baton	file:
+prop_changed	./subversion/libsvn_wc/status.c	/^  svn_boolean_t prop_changed;$/;"	m	struct:file_baton	file:
+prop_changed	./subversion/libsvn_wc/update_editor.c	/^  svn_boolean_t prop_changed;$/;"	m	struct:file_baton	file:
+prop_changes	./subversion/libsvn_ra_dav/commit.c	/^  apr_hash_t *prop_changes; \/* name\/values pairs of new\/changed properties. *\/$/;"	m	file:
+prop_deletes	./subversion/libsvn_ra_dav/commit.c	/^  apr_array_header_t *prop_deletes; \/* names of properties to delete. *\/$/;"	m	file:
+prop_hash	./subversion/include/svn_client.h	/^  apr_hash_t *prop_hash;$/;"	m	struct:svn_client_proplist_item_t
+prop_key	./subversion/libsvn_fs/fs.h	/^  const char *prop_key;$/;"	m
+prop_mod	./subversion/include/svn_fs.h	/^  svn_boolean_t prop_mod;$/;"	m	struct:svn_fs_path_change_t
+prop_mod	./subversion/include/svn_repos.h	/^  svn_boolean_t prop_mod;$/;"	m	struct:svn_repos_node_t
+prop_mod	./subversion/libsvn_fs/fs.h	/^  svn_boolean_t prop_mod;$/;"	m
+prop_name	./subversion/libsvn_client/ra.c	/^  const char *prop_name;$/;"	m	struct:invalidate_wcprop_walk_baton	file:
+prop_path_internal	./subversion/libsvn_wc/adm_files.c	/^prop_path_internal (const char **prop_path,$/;"	f	file:
+prop_setter_t	./subversion/libsvn_ra_dav/fetch.c	/^typedef svn_error_t * (*prop_setter_t)(void *baton,$/;"	t	file:
+prop_status	./subversion/bindings/com/SVNStatus.h	/^        EWCStatus prop_status;$/;"	m	class:CSVNStatus
+prop_status	./subversion/include/svn_wc.h	/^  enum svn_wc_status_kind prop_status;$/;"	m	struct:svn_wc_status_t
+prop_time	./subversion/include/svn_wc.h	/^  apr_time_t prop_time;$/;"	m	struct:svn_wc_entry_t
+propbuffer	./subversion/libsvn_ra_dav/props.c	/^  apr_hash_t *propbuffer; \/* holds properties until their status is known. *\/$/;"	m	struct:propfind_ctx_t	file:
+propchanges	./subversion/libsvn_client/repos_diff.c	/^  apr_array_header_t *propchanges;$/;"	m	struct:dir_baton	file:
+propchanges	./subversion/libsvn_client/repos_diff.c	/^  apr_array_header_t *propchanges;$/;"	m	struct:file_baton	file:
+propchanges	./subversion/libsvn_wc/diff.c	/^  apr_array_header_t *propchanges;$/;"	m	struct:dir_baton	file:
+propchanges	./subversion/libsvn_wc/diff.c	/^  apr_array_header_t *propchanges;$/;"	m	struct:file_baton	file:
+propchanges	./subversion/libsvn_wc/update_editor.c	/^  apr_array_header_t *propchanges;$/;"	m	struct:dir_baton	file:
+propchanges	./subversion/libsvn_wc/update_editor.c	/^  apr_array_header_t *propchanges;$/;"	m	struct:file_baton	file:
+properties	./subversion/libsvn_client/add.c	/^  apr_hash_t *properties;$/;"	m	file:
+propfind_ctx_t	./subversion/libsvn_ra_dav/props.c	/^typedef struct propfind_ctx_t$/;"	s	file:
+propfind_ctx_t	./subversion/libsvn_ra_dav/props.c	/^} propfind_ctx_t;$/;"	t	file:
+propfind_elements	./subversion/libsvn_ra_dav/props.c	/^static const svn_ra_dav__xml_elm_t propfind_elements[] = $/;"	v	file:
+propget_walk_baton	./subversion/libsvn_client/prop_commands.c	/^struct propget_walk_baton$/;"	s	file:
+propget_walk_cb	./subversion/libsvn_client/prop_commands.c	/^propget_walk_cb (const char *path,$/;"	f	file:
+proplist	./subversion/libsvn_fs/fs.h	/^  apr_hash_t *proplist;$/;"	m
+proplist	./subversion/tests/libsvn_subr/hashdump-test.c	/^apr_hash_t *proplist, *new_proplist;$/;"	v
+proplist_change_fn_t	./subversion/libsvn_repos/delta.c	/^typedef svn_error_t *proplist_change_fn_t (struct context *c,$/;"	t	file:
+proplist_walk_baton	./subversion/libsvn_client/prop_commands.c	/^struct proplist_walk_baton$/;"	s	file:
+proplist_walk_cb	./subversion/libsvn_client/prop_commands.c	/^proplist_walk_cb (const char *path,$/;"	f	file:
+propname	./subversion/libsvn_client/prop_commands.c	/^  const char *propname;  \/* The name of the property to get. *\/$/;"	m	struct:propget_walk_baton	file:
+propname	./subversion/libsvn_client/prop_commands.c	/^  const char *propname;  \/* The name of the property to set. *\/$/;"	m	struct:propset_walk_baton	file:
+propname	./subversion/libsvn_fs/tree.c	/^  const char *propname;$/;"	m	struct:node_prop_args	file:
+props	./subversion/libsvn_client/prop_commands.c	/^  apr_array_header_t *props;  \/* Out: array of svn_client_proplist_item_t. *\/$/;"	m	struct:proplist_walk_baton	file:
+props	./subversion/libsvn_client/prop_commands.c	/^  apr_hash_t *props;  \/* Out: mapping of (path:propval). *\/$/;"	m	struct:propget_walk_baton	file:
+props	./subversion/libsvn_ra_dav/props.c	/^  apr_hash_t *props; \/* const char *URL-PATH -> svn_ra_dav_resource_t *\/$/;"	m	struct:propfind_ctx_t	file:
+props	./subversion/mod_dav_svn/deadprops.c	/^  apr_hash_t *props;$/;"	m	struct:dav_db	file:
+props	./subversion/svndumpfilter/main.c	/^  apr_hash_t      *props;$/;"	m	struct:revision_baton_t	file:
+props	./subversion/svndumpfilter/main.c	/^  svn_stringbuf_t *props;$/;"	m	struct:node_baton_t	file:
+props_changed	./subversion/include/svn_wc.h	/^  svn_error_t *(*props_changed) (svn_wc_adm_access_t *adm_access,$/;"	m	struct:svn_wc_diff_callbacks_t
+propset	./subversion/libsvn_ra_dav/ra_dav.h	/^  apr_hash_t *propset;$/;"	m
+propset_walk_baton	./subversion/libsvn_client/prop_commands.c	/^struct propset_walk_baton$/;"	s	file:
+propset_walk_cb	./subversion/libsvn_client/prop_commands.c	/^propset_walk_cb (const char *path,$/;"	f	file:
+propval	./subversion/libsvn_client/prop_commands.c	/^  const svn_string_t *propval;  \/* The value to set. *\/$/;"	m	struct:propset_walk_baton	file:
+protocol_version	./subversion/libsvn_ra_svn/client.c	/^  int protocol_version;$/;"	m	file:
+protocol_version	./subversion/svnserve/serve.c	/^  int protocol_version;$/;"	m	file:
+provider_baton	./subversion/include/svn_auth.h	/^  void *provider_baton;$/;"	m	struct:svn_auth_provider_object_t
+provider_idx	./subversion/libsvn_subr/auth.c	/^  int provider_idx;             \/* the current provider (row) *\/$/;"	m	struct:svn_auth_iterstate_t	file:
+provider_iter_baton	./subversion/libsvn_subr/auth.c	/^  void *provider_iter_baton;    \/* the provider's own iteration context *\/$/;"	m	struct:svn_auth_iterstate_t	file:
+provider_set_t	./subversion/libsvn_subr/auth.c	/^} provider_set_t;$/;"	t	file:
+providers	./subversion/libsvn_subr/auth.c	/^  apr_array_header_t *providers; $/;"	m	file:
+proxy_auth	./subversion/libsvn_ra_dav/session.c	/^static int proxy_auth(void *userdata,$/;"	f	file:
+proxy_auth_baton	./subversion/libsvn_ra_dav/session.c	/^struct proxy_auth_baton$/;"	s	file:
+prune_deleted	./subversion/libsvn_wc/lock.c	/^prune_deleted (svn_wc_adm_access_t *adm_access,$/;"	f	file:
+pszName	./subversion/bindings/com/SVNStatus.h	/^        CHAR *pszName;$/;"	m	class:CSVNStatus
+push_dir	./subversion/libsvn_ra_dav/fetch.c	/^static void push_dir(report_baton_t *rb, $/;"	f	file:
+push_func	./subversion/libsvn_ra_dav/commit.c	/^  svn_ra_push_wc_prop_func_t push_func;$/;"	m	file:
+push_prop	./subversion/libsvn_ra_dav/merge.c	/^  svn_ra_push_wc_prop_func_t push_prop;$/;"	m	file:
+push_props_on_list	./subversion/libsvn_client/prop_commands.c	/^push_props_on_list (apr_array_header_t *list,$/;"	f	file:
+push_wc_prop	./subversion/include/svn_ra.h	/^  svn_ra_push_wc_prop_func_t push_wc_prop;$/;"	m	struct:svn_ra_callbacks_t
+push_wc_prop	./subversion/libsvn_client/ra.c	/^push_wc_prop (void *baton,$/;"	f	file:
+put_baton	./subversion/libsvn_ra_dav/commit.c	/^  put_baton_t *put_baton;  \/* baton for this file's PUT request *\/$/;"	m	file:
+put_baton_t	./subversion/libsvn_ra_dav/commit.c	/^} put_baton_t;$/;"	t	file:
+put_copy	./subversion/libsvn_fs/bdb/copies-table.c	/^put_copy (svn_fs_t *fs,$/;"	f	file:
+put_explicit_length	./subversion/tests/libsvn_fs/skel-test.c	/^put_explicit_length (svn_stringbuf_t *str, const char *data, apr_size_t len, char sep)$/;"	f	file:
+put_implicit_length_all_chars	./subversion/tests/libsvn_fs/skel-test.c	/^put_implicit_length_all_chars (svn_stringbuf_t *str, char term)$/;"	f	file:
+put_implicit_length_byte	./subversion/tests/libsvn_fs/skel-test.c	/^put_implicit_length_byte (svn_stringbuf_t *str, char byte, char term)$/;"	f	file:
+put_list_end	./subversion/tests/libsvn_fs/skel-test.c	/^put_list_end (svn_stringbuf_t *str, char space, int len)$/;"	f	file:
+put_list_start	./subversion/tests/libsvn_fs/skel-test.c	/^put_list_start (svn_stringbuf_t *str, char space, int len)$/;"	f	file:
+put_txn	./subversion/libsvn_fs/revs-txns.c	72;"	d	file:
+pwdb	./subversion/svnserve/serve.c	/^  svn_config_t *pwdb;      \/* Parsed password database *\/$/;"	m	file:
+qualified_repos_path	./subversion/mod_authz_svn/mod_authz_svn.c	/^    const char *qualified_repos_path;$/;"	m	struct:parse_authz_baton	file:
+quiet	./subversion/clients/cmdline/cl.h	/^  svn_boolean_t quiet;           \/* sssh...avoid unnecessary output *\/$/;"	m	struct:svn_cl__opt_state_t
+quiet	./subversion/svnadmin/main.c	/^  svn_boolean_t quiet;                              \/* --quiet *\/$/;"	m	struct:svnadmin_opt_state	file:
+r	./subversion/mod_dav_svn/dav_svn.h	/^  request_rec *r;$/;"	m
+r	./subversion/mod_dav_svn/dav_svn.h	/^  request_rec *r;$/;"	m	struct:dav_resource_private
+ra_baton	./subversion/libsvn_client/relocate.c	/^  void *ra_baton;$/;"	m	struct:validator_baton_t	file:
+ra_dav_body_provider	./subversion/libsvn_ra_dav/util.c	/^static ssize_t ra_dav_body_provider (void *userdata,$/;"	f	file:
+ra_dav_error_accepter	./subversion/libsvn_ra_dav/util.c	/^static int ra_dav_error_accepter(void *userdata,$/;"	f	file:
+ra_dav_reporter	./subversion/libsvn_ra_dav/fetch.c	/^static const svn_ra_reporter_t ra_dav_reporter = {$/;"	v	file:
+ra_lib	./subversion/libsvn_client/repos_diff.c	/^  svn_ra_plugin_t *ra_lib;$/;"	m	struct:edit_baton	file:
+ra_lib	./subversion/libsvn_ra/ra_loader.c	/^  const svn_ra_plugin_t *ra_lib;$/;"	m	struct:ra_lib_list_t	file:
+ra_lib_defn	./subversion/libsvn_ra/ra_loader.c	/^static const struct ra_lib_defn {$/;"	s	file:
+ra_lib_list_t	./subversion/libsvn_ra/ra_loader.c	/^typedef struct ra_lib_list_t$/;"	s	file:
+ra_lib_list_t	./subversion/libsvn_ra/ra_loader.c	/^} ra_lib_list_t;$/;"	t	file:
+ra_libraries	./subversion/libsvn_ra/ra_loader.c	/^} ra_libraries[] = {$/;"	v	file:
+ra_local_plugin	./subversion/libsvn_ra_local/ra_plugin.c	/^static const svn_ra_plugin_t ra_local_plugin = $/;"	v	file:
+ra_local_reporter	./subversion/libsvn_ra_local/ra_plugin.c	/^static const svn_ra_reporter_t ra_local_reporter = $/;"	v	file:
+ra_name	./subversion/libsvn_ra/ra_loader.c	/^  const char *ra_name;$/;"	m	struct:ra_lib_defn	file:
+ra_session	./subversion/libsvn_client/repos_diff.c	/^  void *ra_session;$/;"	m	struct:edit_baton	file:
+ra_svn_abort_edit	./subversion/libsvn_ra_svn/editor.c	/^static svn_error_t *ra_svn_abort_edit(void *edit_baton, apr_pool_t *pool)$/;"	f	file:
+ra_svn_abort_edit	./subversion/libsvn_ra_svn/editorp.c	/^static svn_error_t *ra_svn_abort_edit(void *edit_baton, apr_pool_t *pool)$/;"	f	file:
+ra_svn_abort_report	./subversion/libsvn_ra_svn/client.c	/^static svn_error_t *ra_svn_abort_report(void *baton,$/;"	f	file:
+ra_svn_add_dir	./subversion/libsvn_ra_svn/editor.c	/^static svn_error_t *ra_svn_add_dir(const char *path, void *parent_baton,$/;"	f	file:
+ra_svn_add_dir	./subversion/libsvn_ra_svn/editorp.c	/^static svn_error_t *ra_svn_add_dir(const char *path, void *parent_baton,$/;"	f	file:
+ra_svn_add_file	./subversion/libsvn_ra_svn/editor.c	/^static svn_error_t *ra_svn_add_file(const char *path,$/;"	f	file:
+ra_svn_add_file	./subversion/libsvn_ra_svn/editorp.c	/^static svn_error_t *ra_svn_add_file(const char *path,$/;"	f	file:
+ra_svn_apply_textdelta	./subversion/libsvn_ra_svn/editor.c	/^static svn_error_t *ra_svn_apply_textdelta(void *file_baton,$/;"	f	file:
+ra_svn_apply_textdelta	./subversion/libsvn_ra_svn/editorp.c	/^static svn_error_t *ra_svn_apply_textdelta(void *file_baton,$/;"	f	file:
+ra_svn_baton_t	./subversion/libsvn_ra_svn/editor.c	/^} ra_svn_baton_t;$/;"	t	file:
+ra_svn_baton_t	./subversion/libsvn_ra_svn/editorp.c	/^} ra_svn_baton_t;$/;"	t	file:
+ra_svn_block_handler_t	./subversion/libsvn_ra_svn/ra_svn.h	/^typedef svn_error_t *(*ra_svn_block_handler_t)(svn_ra_svn_conn_t *conn,$/;"	t
+ra_svn_change_dir_prop	./subversion/libsvn_ra_svn/editor.c	/^static svn_error_t *ra_svn_change_dir_prop(void *dir_baton, const char *name,$/;"	f	file:
+ra_svn_change_dir_prop	./subversion/libsvn_ra_svn/editorp.c	/^static svn_error_t *ra_svn_change_dir_prop(void *dir_baton, const char *name,$/;"	f	file:
+ra_svn_change_file_prop	./subversion/libsvn_ra_svn/editor.c	/^static svn_error_t *ra_svn_change_file_prop(void *file_baton,$/;"	f	file:
+ra_svn_change_file_prop	./subversion/libsvn_ra_svn/editorp.c	/^static svn_error_t *ra_svn_change_file_prop(void *file_baton,$/;"	f	file:
+ra_svn_change_rev_prop	./subversion/libsvn_ra_svn/client.c	/^static svn_error_t *ra_svn_change_rev_prop(void *baton, svn_revnum_t rev,$/;"	f	file:
+ra_svn_check_path	./subversion/libsvn_ra_svn/client.c	/^static svn_error_t *ra_svn_check_path(void *baton, const char *path,$/;"	f	file:
+ra_svn_close_dir	./subversion/libsvn_ra_svn/editor.c	/^static svn_error_t *ra_svn_close_dir(void *dir_baton, apr_pool_t *pool)$/;"	f	file:
+ra_svn_close_dir	./subversion/libsvn_ra_svn/editorp.c	/^static svn_error_t *ra_svn_close_dir(void *dir_baton, apr_pool_t *pool)$/;"	f	file:
+ra_svn_close_edit	./subversion/libsvn_ra_svn/editor.c	/^static svn_error_t *ra_svn_close_edit(void *edit_baton, apr_pool_t *pool)$/;"	f	file:
+ra_svn_close_edit	./subversion/libsvn_ra_svn/editorp.c	/^static svn_error_t *ra_svn_close_edit(void *edit_baton, apr_pool_t *pool)$/;"	f	file:
+ra_svn_close_file	./subversion/libsvn_ra_svn/editor.c	/^static svn_error_t *ra_svn_close_file(void *file_baton,$/;"	f	file:
+ra_svn_close_file	./subversion/libsvn_ra_svn/editorp.c	/^static svn_error_t *ra_svn_close_file(void *file_baton,$/;"	f	file:
+ra_svn_commit	./subversion/libsvn_ra_svn/client.c	/^static svn_error_t *ra_svn_commit(void *baton,$/;"	f	file:
+ra_svn_commit_callback_baton_t	./subversion/libsvn_ra_svn/client.c	/^} ra_svn_commit_callback_baton_t;$/;"	t	file:
+ra_svn_delete_entry	./subversion/libsvn_ra_svn/editor.c	/^static svn_error_t *ra_svn_delete_entry(const char *path, svn_revnum_t rev,$/;"	f	file:
+ra_svn_delete_entry	./subversion/libsvn_ra_svn/editorp.c	/^static svn_error_t *ra_svn_delete_entry(const char *path, svn_revnum_t rev,$/;"	f	file:
+ra_svn_delete_path	./subversion/libsvn_ra_svn/client.c	/^static svn_error_t *ra_svn_delete_path(void *baton, const char *path,$/;"	f	file:
+ra_svn_diff	./subversion/libsvn_ra_svn/client.c	/^static svn_error_t *ra_svn_diff(void *baton,$/;"	f	file:
+ra_svn_driver_state_t	./subversion/libsvn_ra_svn/editor.c	/^} ra_svn_driver_state_t;$/;"	t	file:
+ra_svn_driver_state_t	./subversion/libsvn_ra_svn/editorp.c	/^} ra_svn_driver_state_t;$/;"	t	file:
+ra_svn_edit_baton_t	./subversion/libsvn_ra_svn/editor.c	/^} ra_svn_edit_baton_t;$/;"	t	file:
+ra_svn_edit_baton_t	./subversion/libsvn_ra_svn/editorp.c	/^} ra_svn_edit_baton_t;$/;"	t	file:
+ra_svn_edit_cmds	./subversion/libsvn_ra_svn/editorp.c	/^} ra_svn_edit_cmds[] = {$/;"	v	file:
+ra_svn_edit_commands	./subversion/libsvn_ra_svn/editor.c	/^static const svn_ra_svn_cmd_entry_t ra_svn_edit_commands[] = {$/;"	v	file:
+ra_svn_end_commit	./subversion/libsvn_ra_svn/client.c	/^static svn_error_t *ra_svn_end_commit(void *baton)$/;"	f	file:
+ra_svn_finish_report	./subversion/libsvn_ra_svn/client.c	/^static svn_error_t *ra_svn_finish_report(void *baton,$/;"	f	file:
+ra_svn_get_dated_rev	./subversion/libsvn_ra_svn/client.c	/^static svn_error_t *ra_svn_get_dated_rev(void *baton, svn_revnum_t *rev,$/;"	f	file:
+ra_svn_get_dir	./subversion/libsvn_ra_svn/client.c	/^static svn_error_t *ra_svn_get_dir(void *baton, const char *path,$/;"	f	file:
+ra_svn_get_file	./subversion/libsvn_ra_svn/client.c	/^static svn_error_t *ra_svn_get_file(void *baton, const char *path,$/;"	f	file:
+ra_svn_get_latest_rev	./subversion/libsvn_ra_svn/client.c	/^static svn_error_t *ra_svn_get_latest_rev(void *baton, svn_revnum_t *rev,$/;"	f	file:
+ra_svn_get_reporter	./subversion/libsvn_ra_svn/client.c	/^static void ra_svn_get_reporter(ra_svn_session_baton_t *sess, apr_pool_t *pool,$/;"	f	file:
+ra_svn_get_repos_root	./subversion/libsvn_ra_svn/client.c	/^static svn_error_t *ra_svn_get_repos_root(void *baton, const char **url,$/;"	f	file:
+ra_svn_get_uuid	./subversion/libsvn_ra_svn/client.c	/^static svn_error_t *ra_svn_get_uuid(void *baton, const char **uuid,$/;"	f	file:
+ra_svn_handle_abort_edit	./subversion/libsvn_ra_svn/editor.c	/^static svn_error_t *ra_svn_handle_abort_edit(svn_ra_svn_conn_t *conn,$/;"	f	file:
+ra_svn_handle_abort_edit	./subversion/libsvn_ra_svn/editorp.c	/^static svn_error_t *ra_svn_handle_abort_edit(svn_ra_svn_conn_t *conn,$/;"	f	file:
+ra_svn_handle_add_dir	./subversion/libsvn_ra_svn/editor.c	/^static svn_error_t *ra_svn_handle_add_dir(svn_ra_svn_conn_t *conn,$/;"	f	file:
+ra_svn_handle_add_dir	./subversion/libsvn_ra_svn/editorp.c	/^static svn_error_t *ra_svn_handle_add_dir(svn_ra_svn_conn_t *conn,$/;"	f	file:
+ra_svn_handle_add_file	./subversion/libsvn_ra_svn/editor.c	/^static svn_error_t *ra_svn_handle_add_file(svn_ra_svn_conn_t *conn,$/;"	f	file:
+ra_svn_handle_add_file	./subversion/libsvn_ra_svn/editorp.c	/^static svn_error_t *ra_svn_handle_add_file(svn_ra_svn_conn_t *conn,$/;"	f	file:
+ra_svn_handle_apply_textdelta	./subversion/libsvn_ra_svn/editor.c	/^static svn_error_t *ra_svn_handle_apply_textdelta(svn_ra_svn_conn_t *conn,$/;"	f	file:
+ra_svn_handle_apply_textdelta	./subversion/libsvn_ra_svn/editorp.c	/^static svn_error_t *ra_svn_handle_apply_textdelta(svn_ra_svn_conn_t *conn,$/;"	f	file:
+ra_svn_handle_change_dir_prop	./subversion/libsvn_ra_svn/editor.c	/^static svn_error_t *ra_svn_handle_change_dir_prop(svn_ra_svn_conn_t *conn,$/;"	f	file:
+ra_svn_handle_change_dir_prop	./subversion/libsvn_ra_svn/editorp.c	/^static svn_error_t *ra_svn_handle_change_dir_prop(svn_ra_svn_conn_t *conn,$/;"	f	file:
+ra_svn_handle_change_file_prop	./subversion/libsvn_ra_svn/editor.c	/^static svn_error_t *ra_svn_handle_change_file_prop(svn_ra_svn_conn_t *conn,$/;"	f	file:
+ra_svn_handle_change_file_prop	./subversion/libsvn_ra_svn/editorp.c	/^static svn_error_t *ra_svn_handle_change_file_prop(svn_ra_svn_conn_t *conn,$/;"	f	file:
+ra_svn_handle_close_dir	./subversion/libsvn_ra_svn/editor.c	/^static svn_error_t *ra_svn_handle_close_dir(svn_ra_svn_conn_t *conn,$/;"	f	file:
+ra_svn_handle_close_dir	./subversion/libsvn_ra_svn/editorp.c	/^static svn_error_t *ra_svn_handle_close_dir(svn_ra_svn_conn_t *conn,$/;"	f	file:
+ra_svn_handle_close_edit	./subversion/libsvn_ra_svn/editor.c	/^static svn_error_t *ra_svn_handle_close_edit(svn_ra_svn_conn_t *conn,$/;"	f	file:
+ra_svn_handle_close_edit	./subversion/libsvn_ra_svn/editorp.c	/^static svn_error_t *ra_svn_handle_close_edit(svn_ra_svn_conn_t *conn,$/;"	f	file:
+ra_svn_handle_close_file	./subversion/libsvn_ra_svn/editor.c	/^static svn_error_t *ra_svn_handle_close_file(svn_ra_svn_conn_t *conn,$/;"	f	file:
+ra_svn_handle_close_file	./subversion/libsvn_ra_svn/editorp.c	/^static svn_error_t *ra_svn_handle_close_file(svn_ra_svn_conn_t *conn,$/;"	f	file:
+ra_svn_handle_delete_entry	./subversion/libsvn_ra_svn/editor.c	/^static svn_error_t *ra_svn_handle_delete_entry(svn_ra_svn_conn_t *conn,$/;"	f	file:
+ra_svn_handle_delete_entry	./subversion/libsvn_ra_svn/editorp.c	/^static svn_error_t *ra_svn_handle_delete_entry(svn_ra_svn_conn_t *conn,$/;"	f	file:
+ra_svn_handle_open_dir	./subversion/libsvn_ra_svn/editor.c	/^static svn_error_t *ra_svn_handle_open_dir(svn_ra_svn_conn_t *conn,$/;"	f	file:
+ra_svn_handle_open_dir	./subversion/libsvn_ra_svn/editorp.c	/^static svn_error_t *ra_svn_handle_open_dir(svn_ra_svn_conn_t *conn,$/;"	f	file:
+ra_svn_handle_open_file	./subversion/libsvn_ra_svn/editor.c	/^static svn_error_t *ra_svn_handle_open_file(svn_ra_svn_conn_t *conn,$/;"	f	file:
+ra_svn_handle_open_file	./subversion/libsvn_ra_svn/editorp.c	/^static svn_error_t *ra_svn_handle_open_file(svn_ra_svn_conn_t *conn,$/;"	f	file:
+ra_svn_handle_open_root	./subversion/libsvn_ra_svn/editor.c	/^static svn_error_t *ra_svn_handle_open_root(svn_ra_svn_conn_t *conn,$/;"	f	file:
+ra_svn_handle_open_root	./subversion/libsvn_ra_svn/editorp.c	/^static svn_error_t *ra_svn_handle_open_root(svn_ra_svn_conn_t *conn,$/;"	f	file:
+ra_svn_handle_target_rev	./subversion/libsvn_ra_svn/editor.c	/^static svn_error_t *ra_svn_handle_target_rev(svn_ra_svn_conn_t *conn,$/;"	f	file:
+ra_svn_handle_target_rev	./subversion/libsvn_ra_svn/editorp.c	/^static svn_error_t *ra_svn_handle_target_rev(svn_ra_svn_conn_t *conn,$/;"	f	file:
+ra_svn_handle_textdelta_chunk	./subversion/libsvn_ra_svn/editorp.c	/^static svn_error_t *ra_svn_handle_textdelta_chunk(svn_ra_svn_conn_t *conn,$/;"	f	file:
+ra_svn_handle_textdelta_end	./subversion/libsvn_ra_svn/editorp.c	/^static svn_error_t *ra_svn_handle_textdelta_end(svn_ra_svn_conn_t *conn,$/;"	f	file:
+ra_svn_link_path	./subversion/libsvn_ra_svn/client.c	/^static svn_error_t *ra_svn_link_path(void *baton, const char *path,$/;"	f	file:
+ra_svn_log	./subversion/libsvn_ra_svn/client.c	/^static svn_error_t *ra_svn_log(void *baton, const apr_array_header_t *paths,$/;"	f	file:
+ra_svn_make_baton	./subversion/libsvn_ra_svn/editor.c	/^static ra_svn_baton_t *ra_svn_make_baton(svn_ra_svn_conn_t *conn,$/;"	f	file:
+ra_svn_make_baton	./subversion/libsvn_ra_svn/editorp.c	/^static ra_svn_baton_t *ra_svn_make_baton(svn_ra_svn_conn_t *conn,$/;"	f	file:
+ra_svn_open	./subversion/libsvn_ra_svn/client.c	/^static svn_error_t *ra_svn_open(void **baton, const char *url,$/;"	f	file:
+ra_svn_open_dir	./subversion/libsvn_ra_svn/editor.c	/^static svn_error_t *ra_svn_open_dir(const char *path, void *parent_baton,$/;"	f	file:
+ra_svn_open_dir	./subversion/libsvn_ra_svn/editorp.c	/^static svn_error_t *ra_svn_open_dir(const char *path, void *parent_baton,$/;"	f	file:
+ra_svn_open_file	./subversion/libsvn_ra_svn/editor.c	/^static svn_error_t *ra_svn_open_file(const char *path,$/;"	f	file:
+ra_svn_open_file	./subversion/libsvn_ra_svn/editorp.c	/^static svn_error_t *ra_svn_open_file(const char *path,$/;"	f	file:
+ra_svn_open_root	./subversion/libsvn_ra_svn/editor.c	/^static svn_error_t *ra_svn_open_root(void *edit_baton, svn_revnum_t rev,$/;"	f	file:
+ra_svn_open_root	./subversion/libsvn_ra_svn/editorp.c	/^static svn_error_t *ra_svn_open_root(void *edit_baton, svn_revnum_t rev,$/;"	f	file:
+ra_svn_plugin	./subversion/libsvn_ra_svn/client.c	/^static const svn_ra_plugin_t ra_svn_plugin = {$/;"	v	file:
+ra_svn_reporter	./subversion/libsvn_ra_svn/client.c	/^static svn_ra_reporter_t ra_svn_reporter = {$/;"	v	file:
+ra_svn_reporter_baton_t	./subversion/libsvn_ra_svn/client.c	/^} ra_svn_reporter_baton_t;$/;"	t	file:
+ra_svn_rev_prop	./subversion/libsvn_ra_svn/client.c	/^static svn_error_t *ra_svn_rev_prop(void *baton, svn_revnum_t rev,$/;"	f	file:
+ra_svn_rev_proplist	./subversion/libsvn_ra_svn/client.c	/^static svn_error_t *ra_svn_rev_proplist(void *baton, svn_revnum_t rev,$/;"	f	file:
+ra_svn_session_baton_t	./subversion/libsvn_ra_svn/client.c	/^} ra_svn_session_baton_t;$/;"	t	file:
+ra_svn_set_path	./subversion/libsvn_ra_svn/client.c	/^static svn_error_t *ra_svn_set_path(void *baton, const char *path,$/;"	f	file:
+ra_svn_status	./subversion/libsvn_ra_svn/client.c	/^static svn_error_t *ra_svn_status(void *baton,$/;"	f	file:
+ra_svn_svndiff_close_handler	./subversion/libsvn_ra_svn/editor.c	/^static svn_error_t *ra_svn_svndiff_close_handler(void *baton)$/;"	f	file:
+ra_svn_svndiff_close_handler	./subversion/libsvn_ra_svn/editorp.c	/^static svn_error_t *ra_svn_svndiff_close_handler(void *baton)$/;"	f	file:
+ra_svn_svndiff_handler	./subversion/libsvn_ra_svn/editor.c	/^static svn_error_t *ra_svn_svndiff_handler(void *baton, const char *data,$/;"	f	file:
+ra_svn_svndiff_handler	./subversion/libsvn_ra_svn/editorp.c	/^static svn_error_t *ra_svn_svndiff_handler(void *baton, const char *data,$/;"	f	file:
+ra_svn_switch	./subversion/libsvn_ra_svn/client.c	/^static svn_error_t *ra_svn_switch(void *baton,$/;"	f	file:
+ra_svn_target_rev	./subversion/libsvn_ra_svn/editor.c	/^static svn_error_t *ra_svn_target_rev(void *edit_baton, svn_revnum_t rev,$/;"	f	file:
+ra_svn_target_rev	./subversion/libsvn_ra_svn/editorp.c	/^static svn_error_t *ra_svn_target_rev(void *edit_baton, svn_revnum_t rev,$/;"	f	file:
+ra_svn_token_entry_t	./subversion/libsvn_ra_svn/editor.c	/^} ra_svn_token_entry_t;$/;"	t	file:
+ra_svn_token_entry_t	./subversion/libsvn_ra_svn/editorp.c	/^} ra_svn_token_entry_t;$/;"	t	file:
+ra_svn_update	./subversion/libsvn_ra_svn/client.c	/^static svn_error_t *ra_svn_update(void *baton,$/;"	f	file:
+random_combine_test	./subversion/tests/libsvn_delta/random-test.c	/^random_combine_test (const char **msg,$/;"	f	file:
+random_data_to_buffer	./subversion/tests/libsvn_fs/fs-test.c	/^random_data_to_buffer (char *buf, $/;"	f	file:
+random_eol_marker	./subversion/tests/libsvn_wc/translate-test.c	/^random_eol_marker (void)$/;"	f	file:
+random_mod	./subversion/tests/libsvn_diff/diff-diff3-test.c	/^struct random_mod$/;"	s	file:
+random_range_index_test	./subversion/tests/libsvn_delta/range-index-test.h	/^random_range_index_test (const char **msg,$/;"	f
+random_test	./subversion/tests/libsvn_delta/random-test.c	/^random_test (const char **msg,$/;"	f	file:
+random_three_way_merge	./subversion/tests/libsvn_diff/diff-diff3-test.c	/^random_three_way_merge (const char **msg,$/;"	f	file:
+random_trivial_merge	./subversion/tests/libsvn_diff/diff-diff3-test.c	/^random_trivial_merge (const char **msg,$/;"	f	file:
+range_from_source	./subversion/libsvn_delta/compose_delta.c	/^    range_from_source,$/;"	e	enum:range_kind	file:
+range_from_target	./subversion/libsvn_delta/compose_delta.c	/^    range_from_target$/;"	e	enum:range_kind	file:
+range_index_node_t	./subversion/libsvn_delta/compose_delta.c	/^struct range_index_node_t$/;"	s	file:
+range_index_node_t	./subversion/libsvn_delta/compose_delta.c	/^typedef struct range_index_node_t range_index_node_t;$/;"	t	file:
+range_index_t	./subversion/libsvn_delta/compose_delta.c	/^typedef struct range_index_t$/;"	s	file:
+range_index_t	./subversion/libsvn_delta/compose_delta.c	/^} range_index_t;$/;"	t	file:
+range_kind	./subversion/libsvn_delta/compose_delta.c	/^enum range_kind$/;"	g	file:
+range_list_node_t	./subversion/libsvn_delta/compose_delta.c	/^struct range_list_node_t$/;"	s	file:
+range_list_node_t	./subversion/libsvn_delta/compose_delta.c	/^typedef struct range_list_node_t range_list_node_t;$/;"	t	file:
+range_rand	./subversion/tests/libsvn_diff/diff-diff3-test.c	/^range_rand (apr_uint32_t min_val,$/;"	f	file:
+range_rand	./subversion/tests/libsvn_subr/utf-test.c	/^range_rand (apr_uint32_t min_val,$/;"	f	file:
+ras	./subversion/libsvn_ra_dav/commit.c	/^  svn_ra_session_t *ras;$/;"	m	file:
+ras	./subversion/libsvn_ra_dav/fetch.c	/^  svn_ra_session_t *ras;$/;"	m	file:
+raw_changes	./subversion/tests/libsvn_fs/changes-test.c	/^  apr_array_header_t *raw_changes;$/;"	m	struct:changes_args	file:
+rb	./subversion/libsvn_fs/reps-strings.c	/^  struct rep_read_baton *rb;   \/* The data source.             *\/$/;"	m	struct:read_rep_args	file:
+rb	./subversion/libsvn_repos/load.c	/^  struct revision_baton *rb;$/;"	m	struct:node_baton	file:
+rb	./subversion/svndumpfilter/main.c	/^  struct revision_baton_t *rb;$/;"	m	struct:node_baton_t	file:
+read	./subversion/libsvn_subr/stream.c	/^  svn_read_fn_t read;           \/* substream's read function *\/$/;"	m	struct:zbaton	file:
+read_all	./subversion/libsvn_subr/config.c	/^read_all (svn_config_t **cfgp,$/;"	f	file:
+read_buf	./subversion/libsvn_ra_svn/ra_svn.h	/^  char read_buf[4096];$/;"	m	struct:svn_ra_svn_conn_st
+read_buffer	./subversion/libsvn_subr/stream.c	/^  void *read_buffer;            \/* buffer   used   for  reading   from$/;"	m	struct:zbaton	file:
+read_chunk	./subversion/libsvn_diff/diff_file.c	/^read_chunk(apr_file_t *file, const char *path,$/;"	f	file:
+read_end	./subversion/libsvn_ra_svn/ra_svn.h	/^  char *read_end;$/;"	m	struct:svn_ra_svn_conn_st
+read_entries	./subversion/libsvn_wc/entries.c	/^read_entries (svn_wc_adm_access_t *adm_access,$/;"	f	file:
+read_flush	./subversion/libsvn_subr/stream.c	/^  int read_flush;               \/* what flush mode to use while$/;"	m	struct:zbaton	file:
+read_fn	./subversion/libsvn_subr/stream.c	/^  svn_read_fn_t read_fn;$/;"	m	struct:svn_stream_t	file:
+read_handler_apr	./subversion/libsvn_subr/stream.c	/^read_handler_apr (void *baton, char *buffer, apr_size_t *len)$/;"	f	file:
+read_handler_empty	./subversion/libsvn_subr/stream.c	/^read_handler_empty (void *baton, char *buffer, apr_size_t *len)$/;"	f	file:
+read_handler_gz	./subversion/libsvn_subr/stream.c	/^read_handler_gz (void *baton, char *buffer, apr_size_t *len)$/;"	f	file:
+read_handler_string	./subversion/libsvn_subr/stream.c	/^read_handler_string (void *baton, char *buffer, apr_size_t *len)$/;"	f	file:
+read_header_block	./subversion/libsvn_repos/load.c	/^read_header_block (svn_stream_t *stream,$/;"	f	file:
+read_helper_gz	./subversion/libsvn_subr/stream.c	/^read_helper_gz (svn_read_fn_t read_fn,$/;"	f	file:
+read_inputstream	./subversion/bindings/swig/swigutil_java.c	/^static svn_error_t *read_inputstream(void *baton,$/;"	f	file:
+read_item	./subversion/libsvn_ra_svn/marshal.c	/^static svn_error_t *read_item(svn_ra_svn_conn_t *conn, apr_pool_t *pool,$/;"	f	file:
+read_only	./subversion/svnserve/main.c	/^  svn_boolean_t read_only;$/;"	m	struct:serve_thread_t	file:
+read_only	./subversion/svnserve/serve.c	/^  svn_boolean_t read_only; \/* Disallow write access (global flag) *\/$/;"	m	file:
+read_outputstream	./subversion/bindings/swig/swigutil_java.c	/^static svn_error_t *read_outputstream(void *baton,$/;"	f	file:
+read_ptr	./subversion/libsvn_ra_svn/ra_svn.h	/^  char *read_ptr;$/;"	m	struct:svn_ra_svn_conn_st
+read_rep	./subversion/tests/libsvn_fs/strings-reps-test.c	/^read_rep (const char **msg, $/;"	f	file:
+read_rep_args	./subversion/libsvn_fs/reps-strings.c	/^struct read_rep_args$/;"	s	file:
+read_string	./subversion/libsvn_ra_svn/marshal.c	/^static svn_error_t *read_string(svn_ra_svn_conn_t *conn, apr_pool_t *pool,$/;"	f	file:
+read_success	./subversion/libsvn_ra_svn/client.c	/^static svn_error_t *read_success(svn_ra_svn_conn_t *conn, apr_pool_t *pool)$/;"	f	file:
+read_token	./subversion/libsvn_ra_svn/gssapi.c	/^static svn_error_t *read_token(svn_ra_svn_conn_t *conn, apr_pool_t *pool, $/;"	f	file:
+readbuf_drain	./subversion/libsvn_ra_svn/marshal.c	/^static char *readbuf_drain(svn_ra_svn_conn_t *conn, char *data, char *end)$/;"	f	file:
+readbuf_fill	./subversion/libsvn_ra_svn/marshal.c	/^static svn_error_t *readbuf_fill(svn_ra_svn_conn_t *conn, apr_pool_t *pool)$/;"	f	file:
+readbuf_filtered	./subversion/libsvn_ra_svn/marshal.c	/^static svn_error_t *readbuf_filtered(svn_ra_svn_conn_t *conn, apr_pool_t *pool,$/;"	f	file:
+readbuf_getchar	./subversion/libsvn_ra_svn/marshal.c	/^static svn_error_t *readbuf_getchar(svn_ra_svn_conn_t *conn, apr_pool_t *pool,$/;"	f	file:
+readbuf_getchar_skip_whitespace	./subversion/libsvn_ra_svn/marshal.c	/^static svn_error_t *readbuf_getchar_skip_whitespace(svn_ra_svn_conn_t *conn,$/;"	f	file:
+readbuf_input	./subversion/libsvn_ra_svn/marshal.c	/^static svn_error_t *readbuf_input(svn_ra_svn_conn_t *conn, char *data,$/;"	f	file:
+readbuf_read	./subversion/libsvn_ra_svn/marshal.c	/^static svn_error_t *readbuf_read(svn_ra_svn_conn_t *conn, apr_pool_t *pool,$/;"	f	file:
+readbuf_skip_leading_garbage	./subversion/libsvn_ra_svn/marshal.c	/^static svn_error_t *readbuf_skip_leading_garbage(svn_ra_svn_conn_t *conn)$/;"	f	file:
+real_baton	./subversion/libsvn_client/commit_util.c	/^  void *real_baton;$/;"	m	struct:item_baton	file:
+real_eb	./subversion/libsvn_client/commit_util.c	/^  void *real_eb;$/;"	m	struct:edit_baton	file:
+real_editor	./subversion/libsvn_client/commit_util.c	/^  const svn_delta_editor_t *real_editor;$/;"	m	struct:edit_baton	file:
+real_status_baton	./subversion/libsvn_client/status.c	/^  void *real_status_baton;                 \/* real status baton *\/$/;"	m	struct:status_baton	file:
+real_status_baton	./subversion/libsvn_wc/status.c	/^  void *real_status_baton;                 \/* real status baton *\/$/;"	m	struct:status_baton	file:
+real_status_func	./subversion/libsvn_client/status.c	/^  svn_wc_status_func_t real_status_func;   \/* real status function *\/$/;"	m	struct:status_baton	file:
+real_status_func	./subversion/libsvn_wc/status.c	/^  svn_wc_status_func_t real_status_func;   \/* real status function *\/$/;"	m	struct:status_baton	file:
+realm	./subversion/svnserve/serve.c	/^  const char *realm;       \/* Authentication realm *\/$/;"	m	file:
+realm_prefix	./subversion/libsvn_ra_svn/client.c	/^  const char *realm_prefix;$/;"	m	file:
+realmstring	./subversion/libsvn_client/ssl_client_cert_providers.c	/^  const char *realmstring;$/;"	m	file:
+realmstring	./subversion/libsvn_client/ssl_client_cert_pw_providers.c	/^  const char *realmstring;$/;"	m	file:
+realmstring	./subversion/libsvn_subr/auth.c	/^  const char *realmstring;      \/* The original realmstring passed in *\/$/;"	m	struct:svn_auth_iterstate_t	file:
+received_some_change	./subversion/clients/cmdline/notify.c	/^  svn_boolean_t received_some_change;$/;"	m	struct:notify_baton	file:
+receiver	./subversion/libsvn_ra_dav/log.c	/^  svn_log_message_receiver_t receiver;$/;"	m	struct:log_baton	file:
+receiver_baton	./subversion/libsvn_ra_dav/log.c	/^  void *receiver_baton;$/;"	m	struct:log_baton	file:
+receiving_all	./subversion/libsvn_ra_dav/fetch.c	/^  svn_boolean_t receiving_all;$/;"	m	file:
+reconcile_errors	./subversion/libsvn_client/commit.c	/^reconcile_errors (svn_error_t *commit_err,$/;"	f	file:
+reconcile_errors	./subversion/libsvn_client/copy.c	/^reconcile_errors (svn_error_t *commit_err,$/;"	f	file:
+record_prop_change	./subversion/libsvn_ra_dav/commit.c	/^static void record_prop_change(apr_pool_t *pool,$/;"	f	file:
+record_undo	./subversion/libsvn_fs/trail.c	/^record_undo (trail_t *trail,$/;"	f	file:
+recurse	./subversion/libsvn_client/repos_diff.c	/^  svn_boolean_t recurse;$/;"	m	struct:edit_baton	file:
+recurse	./subversion/libsvn_repos/delta.c	/^  svn_boolean_t recurse;$/;"	m	struct:context	file:
+recurse	./subversion/libsvn_repos/reporter.c	/^  svn_boolean_t recurse;$/;"	m	struct:report_baton_t	file:
+recurse	./subversion/libsvn_wc/diff.c	/^  svn_boolean_t recurse;$/;"	m	struct:edit_baton	file:
+recurse	./subversion/libsvn_wc/update_editor.c	/^  svn_boolean_t recurse;$/;"	m	struct:edit_baton	file:
+recursive	./subversion/clients/cmdline/cl.h	/^  svn_boolean_t recursive, nonrecursive;$/;"	m	struct:svn_cl__opt_state_t
+recursively_tweak_entries	./subversion/libsvn_wc/adm_ops.c	/^recursively_tweak_entries (svn_wc_adm_access_t *dirpath,$/;"	f	file:
+redirect_stdout	./subversion/svnserve/main.c	/^static apr_status_t redirect_stdout(void *arg)$/;"	f	file:
+redundant_copy	./subversion/tests/libsvn_fs/fs-test.c	/^redundant_copy (const char **msg,$/;"	f	file:
+ref_count	./subversion/libsvn_wc/update_editor.c	/^  int ref_count;$/;"	m	struct:bump_dir_info	file:
+register_deltification_cleanup	./subversion/mod_dav_svn/version.c	/^static void register_deltification_cleanup(svn_repos_t *repos,$/;"	f	file:
+register_hooks	./subversion/mod_authz_svn/mod_authz_svn.c	/^static void register_hooks(apr_pool_t *p)$/;"	f	file:
+register_hooks	./subversion/mod_dav_svn/mod_dav_svn.c	/^static void register_hooks(apr_pool_t *pconf)$/;"	f	file:
+relegate_external	./subversion/libsvn_client/externals.c	/^relegate_external (const char *path,$/;"	f	file:
+relocate	./subversion/clients/cmdline/cl.h	/^  svn_boolean_t relocate;        \/* rewrite urls (svn switch) *\/$/;"	m	struct:svn_cl__opt_state_t
+relocate_error	./subversion/libsvn_client/relocate.c	/^relocate_error (const char *url,$/;"	f	file:
+remote_propget	./subversion/libsvn_client/prop_commands.c	/^remote_propget (apr_hash_t *props,$/;"	f	file:
+remote_proplist	./subversion/libsvn_client/prop_commands.c	/^remote_proplist (apr_array_header_t *proplist,$/;"	f	file:
+remove_expansions	./subversion/libsvn_subr/config.c	/^remove_expansions (svn_config_t *cfg)$/;"	f	file:
+remove_file	./subversion/tests/libsvn_wc/translate-test.c	/^remove_file (const char *fname, apr_pool_t *pool)$/;"	f	file:
+remove_file_if_present	./subversion/libsvn_wc/adm_ops.c	/^remove_file_if_present (const char *file, apr_pool_t *pool)$/;"	f	file:
+remove_lock	./subversion/libsvn_wc/lock.c	/^remove_lock (const char *path, apr_pool_t *pool)$/;"	f	file:
+remove_node_args	./subversion/libsvn_fs/revs-txns.c	/^struct remove_node_args$/;"	s	file:
+remove_node_props	./subversion/include/svn_repos.h	/^  svn_error_t *(*remove_node_props) (void *node_baton);$/;"	m	struct:svn_repos_parse_fns_t
+remove_node_props	./subversion/libsvn_repos/load.c	/^remove_node_props (void *baton)$/;"	f	file:
+remove_node_props	./subversion/svndumpfilter/main.c	/^remove_node_props (void *node_baton)$/;"	f	file:
+remove_props	./subversion/svndumpfilter/main.c	/^  svn_boolean_t    remove_props;$/;"	m	struct:node_baton_t	file:
+remove_redundancies	./subversion/libsvn_client/commit.c	/^remove_redundancies (apr_array_header_t **punique_targets,$/;"	f	file:
+remove_tmpfiles	./subversion/libsvn_client/commit.c	/^remove_tmpfiles (apr_hash_t *tempfiles,$/;"	f	file:
+remove_tmpfiles	./subversion/libsvn_client/copy.c	/^remove_tmpfiles (apr_hash_t *tempfiles,$/;"	f	file:
+removed_props	./subversion/mod_dav_svn/update.c	/^  apr_array_header_t *removed_props; \/* array of const char * prop names *\/$/;"	m	file:
+renumber_history	./subversion/svndumpfilter/main.c	/^  apr_hash_t         *renumber_history;$/;"	m	struct:parse_baton_t	file:
+renumber_revs	./subversion/svndumpfilter/main.c	/^  svn_boolean_t renumber_revs;           \/* --renumber-revs     *\/$/;"	m	struct:svndumpfilter_opt_state	file:
+reopen_trivial_transaction	./subversion/tests/libsvn_fs/fs-test.c	/^reopen_trivial_transaction (const char **msg,$/;"	f	file:
+rep_args	./subversion/tests/libsvn_fs/strings-reps-test.c	/^struct rep_args$/;"	s	file:
+rep_contents_clear	./subversion/libsvn_fs/reps-strings.c	/^rep_contents_clear (svn_fs_t *fs,$/;"	f	file:
+rep_is_mutable	./subversion/libsvn_fs/reps-strings.c	/^static svn_boolean_t rep_is_mutable (svn_fs__representation_t *rep, $/;"	f	file:
+rep_key	./subversion/libsvn_fs/fs.h	/^  const char *rep_key;$/;"	m
+rep_key	./subversion/libsvn_fs/reps-strings.c	/^  const char *rep_key;$/;"	m	struct:rep_read_baton	file:
+rep_key	./subversion/libsvn_fs/reps-strings.c	/^  const char *rep_key;$/;"	m	struct:rep_write_baton	file:
+rep_read_baton	./subversion/libsvn_fs/reps-strings.c	/^struct rep_read_baton$/;"	s	file:
+rep_read_contents	./subversion/libsvn_fs/reps-strings.c	/^rep_read_contents (void *baton, char *buf, apr_size_t *len)$/;"	f	file:
+rep_read_get_baton	./subversion/libsvn_fs/reps-strings.c	/^rep_read_get_baton (struct rep_read_baton **rb_p,$/;"	f	file:
+rep_read_range	./subversion/libsvn_fs/reps-strings.c	/^rep_read_range (svn_fs_t *fs,$/;"	f	file:
+rep_undeltify_range	./subversion/libsvn_fs/reps-strings.c	/^rep_undeltify_range (svn_fs_t *fs,$/;"	f	file:
+rep_write	./subversion/libsvn_fs/reps-strings.c	/^rep_write (svn_fs_t *fs,$/;"	f	file:
+rep_write_baton	./subversion/libsvn_fs/reps-strings.c	/^struct rep_write_baton$/;"	s	file:
+rep_write_close_contents	./subversion/libsvn_fs/reps-strings.c	/^rep_write_close_contents (void *baton)$/;"	f	file:
+rep_write_contents	./subversion/libsvn_fs/reps-strings.c	/^rep_write_contents (void *baton, $/;"	f	file:
+rep_write_get_baton	./subversion/libsvn_fs/reps-strings.c	/^rep_write_get_baton (svn_fs_t *fs,$/;"	f	file:
+replace_file_or_dir	./subversion/libsvn_repos/delta.c	/^replace_file_or_dir (struct context *c, $/;"	f	file:
+repo_name	./subversion/mod_dav_svn/dav_svn.h	/^  const char *repo_name;$/;"	m
+repo_name	./subversion/mod_dav_svn/mod_dav_svn.c	/^  const char *repo_name;        \/* repository name *\/$/;"	m	file:
+report_baton	./subversion/libsvn_ra_local/ra_plugin.c	/^  void *report_baton;$/;"	m	struct:reporter_baton_t	file:
+report_baton	./subversion/svnserve/serve.c	/^  void *report_baton;$/;"	m	file:
+report_baton_t	./subversion/libsvn_ra_dav/fetch.c	/^} report_baton_t;$/;"	t	file:
+report_baton_t	./subversion/libsvn_repos/reporter.c	/^typedef struct report_baton_t$/;"	s	file:
+report_baton_t	./subversion/libsvn_repos/reporter.c	/^} report_baton_t;$/;"	t	file:
+report_commands	./subversion/svnserve/serve.c	/^static const svn_ra_svn_cmd_entry_t report_commands[] = {$/;"	v	file:
+report_driver_baton_t	./subversion/svnserve/serve.c	/^} report_driver_baton_t;$/;"	t	file:
+report_elements	./subversion/libsvn_ra_dav/fetch.c	/^static const svn_ra_dav__xml_elm_t report_elements[] =$/;"	v	file:
+report_head	./subversion/libsvn_ra_dav/fetch.c	/^static const char report_head[]$/;"	v	file:
+report_revisions	./subversion/libsvn_wc/adm_crawler.c	/^report_revisions (svn_wc_adm_access_t *adm_access,$/;"	f	file:
+report_tail	./subversion/libsvn_ra_dav/fetch.c	/^static const char report_tail[] = "<\/S:update-report>" DEBUG_CR;$/;"	v	file:
+reporter_abort_report	./subversion/libsvn_ra_dav/fetch.c	/^static svn_error_t * reporter_abort_report(void *report_baton,$/;"	f	file:
+reporter_abort_report	./subversion/libsvn_ra_local/ra_plugin.c	/^reporter_abort_report (void *reporter_baton,$/;"	f	file:
+reporter_baton_t	./subversion/libsvn_ra_local/ra_plugin.c	/^typedef struct reporter_baton_t$/;"	s	file:
+reporter_baton_t	./subversion/libsvn_ra_local/ra_plugin.c	/^} reporter_baton_t;$/;"	t	file:
+reporter_delete_path	./subversion/libsvn_ra_dav/fetch.c	/^static svn_error_t * reporter_delete_path(void *report_baton,$/;"	f	file:
+reporter_delete_path	./subversion/libsvn_ra_local/ra_plugin.c	/^reporter_delete_path (void *reporter_baton,$/;"	f	file:
+reporter_finish_report	./subversion/libsvn_ra_dav/fetch.c	/^static svn_error_t * reporter_finish_report(void *report_baton,$/;"	f	file:
+reporter_finish_report	./subversion/libsvn_ra_local/ra_plugin.c	/^reporter_finish_report (void *reporter_baton,$/;"	f	file:
+reporter_link_path	./subversion/libsvn_ra_dav/fetch.c	/^static svn_error_t * reporter_link_path(void *report_baton,$/;"	f	file:
+reporter_link_path	./subversion/libsvn_ra_local/ra_plugin.c	/^reporter_link_path (void *reporter_baton,$/;"	f	file:
+reporter_set_path	./subversion/libsvn_ra_dav/fetch.c	/^static svn_error_t * reporter_set_path(void *report_baton,$/;"	f	file:
+reporter_set_path	./subversion/libsvn_ra_local/ra_plugin.c	/^reporter_set_path (void *reporter_baton,$/;"	f	file:
+repos	./subversion/include/svn_wc.h	/^  const char *repos;$/;"	m	struct:svn_wc_entry_t
+repos	./subversion/libsvn_ra_local/ra_local.h	/^  svn_repos_t *repos;$/;"	m	struct:svn_ra_local__session_baton_t
+repos	./subversion/libsvn_repos/commit.c	/^  svn_repos_t *repos;$/;"	m	struct:edit_baton	file:
+repos	./subversion/libsvn_repos/load.c	/^  svn_repos_t *repos;$/;"	m	struct:parse_baton	file:
+repos	./subversion/libsvn_repos/reporter.c	/^  svn_repos_t *repos;$/;"	m	struct:report_baton_t	file:
+repos	./subversion/mod_dav_svn/dav_svn.h	/^  const dav_svn_repos *repos;$/;"	m
+repos	./subversion/mod_dav_svn/dav_svn.h	/^  dav_svn_repos *repos;$/;"	m	struct:dav_resource_private
+repos	./subversion/mod_dav_svn/dav_svn.h	/^  svn_repos_t *repos;$/;"	m
+repos	./subversion/svnlook/main.c	/^  svn_repos_t *repos;$/;"	m	struct:svnlook_ctxt_t	file:
+repos	./subversion/svnserve/serve.c	/^  svn_repos_t *repos;$/;"	m	file:
+repos_path	./subversion/mod_authz_svn/mod_authz_svn.c	/^    const char *repos_path;$/;"	m	struct:parse_authz_baton	file:
+repos_path	./subversion/mod_dav_svn/dav_svn.h	/^  const char *repos_path;$/;"	m
+repos_path	./subversion/mod_dav_svn/dav_svn.h	/^  const char *repos_path;$/;"	m	struct:dav_resource_private
+repos_path	./subversion/mod_dav_svn/repos.c	/^  svn_stringbuf_t *repos_path;     \/* the repos_path within res *\/$/;"	m	file:
+repos_path	./subversion/mod_dav_svn/version.c	/^  const char *repos_path;$/;"	m	struct:cleanup_deltify_baton	file:
+repos_path	./subversion/svnlook/main.c	/^  const char *repos_path;  \/* 'arg0' is always the path to the repository. *\/$/;"	m	struct:svnlook_opt_state	file:
+repos_prop_status	./subversion/include/svn_wc.h	/^  enum svn_wc_status_kind repos_prop_status;$/;"	m	struct:svn_wc_status_t
+repos_root	./subversion/libsvn_ra_dav/ra_dav.h	/^  const char *repos_root;               \/* URL for repository root *\/$/;"	m
+repos_root	./subversion/libsvn_ra_svn/ra_svn.h	/^  const char *repos_root;$/;"	m	struct:svn_ra_svn_conn_st
+repos_text_status	./subversion/include/svn_wc.h	/^  enum svn_wc_status_kind repos_text_status;$/;"	m	struct:svn_wc_status_t
+repos_to_repos_copy	./subversion/libsvn_client/copy.c	/^repos_to_repos_copy (svn_client_commit_info_t **commit_info,$/;"	f	file:
+repos_to_wc_copy	./subversion/libsvn_client/copy.c	/^repos_to_wc_copy (const char *src_url,$/;"	f	file:
+repos_url	./subversion/libsvn_ra_local/ra_local.h	/^  const char *repos_url;$/;"	m	struct:svn_ra_local__session_baton_t
+repos_url	./subversion/libsvn_repos/commit.c	/^  const char *repos_url;$/;"	m	struct:edit_baton	file:
+repos_url	./subversion/svnserve/serve.c	/^  const char *repos_url;   \/* Decoded URL to base of repository *\/$/;"	m	file:
+repos_url	./subversion/svnserve/serve.c	/^  const char *repos_url;$/;"	m	file:
+repository_URL	./subversion/libsvn_ra_local/ra_local.h	/^  const char *repository_URL;$/;"	m	struct:svn_ra_local__session_baton_t
+repository_path	./subversion/svnadmin/main.c	/^  const char *repository_path;$/;"	m	struct:svnadmin_opt_state	file:
+representations	./subversion/libsvn_fs/fs.h	/^  DB *representations;$/;"	m	struct:svn_fs_t
+req_check_access	./subversion/mod_authz_svn/mod_authz_svn.c	/^static int req_check_access(request_rec *r,$/;"	f	file:
+request_auth	./subversion/libsvn_ra_dav/session.c	/^static int request_auth(void *userdata, const char *realm, int attempt,$/;"	f	file:
+required_access	./subversion/mod_authz_svn/mod_authz_svn.c	/^    int required_access;$/;"	m	struct:parse_authz_baton	file:
+res	./subversion/mod_dav_svn/repos.c	/^  const dav_resource *res;$/;"	m	struct:dav_stream	file:
+res	./subversion/mod_dav_svn/repos.c	/^  dav_resource res;             \/* wres.resource refers here *\/$/;"	m	file:
+res	./subversion/mod_dav_svn/repos.c	/^  dav_resource res;$/;"	m	file:
+res_type_handler	./subversion/mod_dav_svn/repos.c	/^static const struct res_type_handler$/;"	s	file:
+res_type_handlers	./subversion/mod_dav_svn/repos.c	/^} res_type_handlers[] =$/;"	v	file:
+reset_log_item	./subversion/libsvn_ra_dav/log.c	/^reset_log_item (struct log_baton *lb)$/;"	f	file:
+resolve_callback_baton	./subversion/libsvn_wc/adm_ops.c	/^struct resolve_callback_baton$/;"	s	file:
+resolve_conflict_on_entry	./subversion/libsvn_wc/adm_ops.c	/^resolve_conflict_on_entry (const char *path,$/;"	f	file:
+resolve_found_entry_callback	./subversion/libsvn_wc/adm_ops.c	/^resolve_found_entry_callback (const char *path,$/;"	f	file:
+resolve_props	./subversion/libsvn_wc/adm_ops.c	/^  svn_boolean_t resolve_props;$/;"	m	struct:resolve_callback_baton	file:
+resolve_text	./subversion/libsvn_wc/adm_ops.c	/^  svn_boolean_t resolve_text;$/;"	m	struct:resolve_callback_baton	file:
+resolve_to_defaults	./subversion/libsvn_wc/entries.c	/^resolve_to_defaults (apr_hash_t *entries,$/;"	f	file:
+resolve_walk_callbacks	./subversion/libsvn_wc/adm_ops.c	/^resolve_walk_callbacks =$/;"	v	file:
+resolved_diff	./subversion/libsvn_diff/diff.h	/^  svn_diff_t *resolved_diff;$/;"	m	struct:svn_diff_t
+resource	./subversion/mod_dav_svn/deadprops.c	/^  const dav_resource *resource;$/;"	m	struct:dav_db	file:
+resource	./subversion/mod_dav_svn/update.c	/^  const dav_resource *resource;$/;"	m	file:
+resource_baton_t	./subversion/libsvn_ra_dav/commit.c	/^} resource_baton_t;$/;"	t	file:
+resource_t	./subversion/libsvn_ra_dav/commit.c	/^} resource_t;$/;"	t	file:
+resource_walk	./subversion/mod_dav_svn/update.c	/^  svn_boolean_t resource_walk;$/;"	m	file:
+response_has_error	./subversion/libsvn_ra_dav/merge.c	/^  svn_boolean_t response_has_error;$/;"	m	file:
+response_parent	./subversion/libsvn_ra_dav/merge.c	/^  int response_parent;     \/* what element did DAV:response appear within? *\/$/;"	m	file:
+restore_file	./subversion/libsvn_wc/adm_crawler.c	/^restore_file (const char *file_path,$/;"	f	file:
+restype	./subversion/mod_dav_svn/dav_svn.h	/^  enum dav_svn_private_restype restype;$/;"	m	struct:dav_resource_private
+restype	./subversion/mod_dav_svn/repos.c	/^  enum dav_svn_private_restype restype;$/;"	m	struct:special_defn	file:
+result_checksum	./subversion/libsvn_fs/tree.c	/^  const char *result_checksum;$/;"	m	struct:text_baton_t	file:
+result_checksum	./subversion/libsvn_fs/tree.c	/^  const char *result_checksum;$/;"	m	struct:txdelta_baton_t	file:
+result_checksum	./subversion/libsvn_ra_dav/fetch.c	/^  const char *result_checksum; \/* hex md5 digest of result; may be null *\/$/;"	m	file:
+result_checksum	./subversion/mod_dav_svn/dav_svn.h	/^  const char *result_checksum;$/;"	m	struct:dav_resource_private
+result_digest	./subversion/libsvn_delta/text_delta.c	/^  unsigned char *result_digest; \/* MD5 digest of resultant fulltext;$/;"	m	struct:apply_baton	file:
+result_path	./subversion/libsvn_fs/tree.c	/^  const char *result_path;  \/* Path, if any, of the ancestor. *\/$/;"	m	struct:copied_from_args	file:
+result_rev	./subversion/libsvn_fs/tree.c	/^  svn_revnum_t result_rev;  \/* Revision, if any, of the ancestor. *\/$/;"	m	struct:copied_from_args	file:
+resurrection	./subversion/libsvn_client/copy.c	/^  svn_boolean_t resurrection;$/;"	m	struct:path_driver_cb_baton	file:
+retries	./subversion/libsvn_client/simple_providers.c	/^  int retries;$/;"	m	file:
+retries	./subversion/libsvn_client/ssl_client_cert_providers.c	/^  int retries;$/;"	m	file:
+retries	./subversion/libsvn_client/ssl_client_cert_pw_providers.c	/^  int retries;$/;"	m	file:
+retries	./subversion/libsvn_client/username_providers.c	/^  int retries;$/;"	m	file:
+retry_limit	./subversion/libsvn_client/simple_providers.c	/^  int retry_limit;$/;"	m	file:
+retry_limit	./subversion/libsvn_client/ssl_client_cert_providers.c	/^  int retry_limit;$/;"	m	file:
+retry_limit	./subversion/libsvn_client/ssl_client_cert_pw_providers.c	/^  int retry_limit;$/;"	m	file:
+retry_limit	./subversion/libsvn_client/username_providers.c	/^  int retry_limit;$/;"	m	file:
+rev	./subversion/libsvn_client/blame.c	/^  struct rev *rev;     \/* the rev for which blame is being assigned *\/$/;"	m	struct:diff_baton	file:
+rev	./subversion/libsvn_client/blame.c	/^  struct rev *rev;    \/* the responsible revision *\/$/;"	m	struct:blame	file:
+rev	./subversion/libsvn_client/blame.c	/^struct rev$/;"	s	file:
+rev	./subversion/libsvn_fs/revs-txns.c	/^  svn_revnum_t rev;$/;"	m	struct:begin_txn_args	file:
+rev	./subversion/libsvn_fs/revs-txns.c	/^  svn_revnum_t rev;$/;"	m	struct:change_rev_prop_args	file:
+rev	./subversion/libsvn_fs/revs-txns.c	/^  svn_revnum_t rev;$/;"	m	struct:revision_proplist_args	file:
+rev	./subversion/libsvn_fs/revs-txns.c	/^  svn_revnum_t rev;$/;"	m	struct:txn_proplist_args	file:
+rev	./subversion/libsvn_fs/tree.c	/^  svn_revnum_t rev; \/* revision just committed *\/$/;"	m	struct:deltify_committed_args	file:
+rev	./subversion/libsvn_fs/tree.c	/^  svn_revnum_t rev;$/;"	m	struct:revision_root_args	file:
+rev	./subversion/libsvn_fs/tree.c	/^  svn_revnum_t rev;$/;"	m	struct:svn_fs_root_t	file:
+rev	./subversion/libsvn_ra_dav/merge.c	/^  svn_revnum_t rev;        \/* the new\/target revision number for this commit *\/$/;"	m	file:
+rev	./subversion/libsvn_repos/load.c	/^  svn_revnum_t rev;$/;"	m	struct:revision_baton	file:
+rev	./subversion/mod_dav_svn/dav_svn.h	/^  svn_revnum_t rev;$/;"	m
+rev	./subversion/svnlook/main.c	/^  svn_revnum_t rev;$/;"	m	struct:svnlook_opt_state	file:
+rev	./subversion/tests/libsvn_fs/fs-test.c	/^  svn_revnum_t rev;$/;"	m	struct:node_created_rev_args	file:
+rev_actual	./subversion/svndumpfilter/main.c	/^  svn_revnum_t     rev_actual;$/;"	m	struct:revision_baton_t	file:
+rev_drop_count	./subversion/svndumpfilter/main.c	/^  apr_int32_t         rev_drop_count;$/;"	m	struct:parse_baton_t	file:
+rev_get_txn_id_args	./subversion/libsvn_fs/tree.c	/^struct rev_get_txn_id_args$/;"	s	file:
+rev_hint	./subversion/libsvn_fs/tree.c	/^  svn_revnum_t rev_hint;$/;"	m	struct:svn_fs_history_t	file:
+rev_id	./subversion/svnlook/main.c	/^  svn_revnum_t rev_id;$/;"	m	struct:svnlook_ctxt_t	file:
+rev_offset	./subversion/libsvn_repos/load.c	/^  apr_int32_t rev_offset;$/;"	m	struct:revision_baton	file:
+rev_orig	./subversion/svndumpfilter/main.c	/^  svn_revnum_t     rev_orig;$/;"	m	struct:revision_baton_t	file:
+rev_partially_readable	./subversion/libsvn_repos/fs-wrap.c	/^  rev_partially_readable,$/;"	e	enum:rev_readability_level	file:
+rev_prop	./subversion/include/svn_ra.h	/^  svn_error_t *(*rev_prop) (void *session_baton,$/;"	m	struct:svn_ra_plugin_t
+rev_prop	./subversion/svnserve/serve.c	/^static svn_error_t *rev_prop(svn_ra_svn_conn_t *conn, apr_pool_t *pool,$/;"	f	file:
+rev_proplist	./subversion/include/svn_ra.h	/^  svn_error_t *(*rev_proplist) (void *session_baton,$/;"	m	struct:svn_ra_plugin_t
+rev_proplist	./subversion/svnserve/serve.c	/^static svn_error_t *rev_proplist(svn_ra_svn_conn_t *conn, apr_pool_t *pool,$/;"	f	file:
+rev_readability_level	./subversion/libsvn_repos/fs-wrap.c	/^enum rev_readability_level$/;"	g	file:
+rev_readable	./subversion/libsvn_repos/fs-wrap.c	/^  rev_readable = 1,$/;"	e	enum:rev_readability_level	file:
+rev_root	./subversion/mod_dav_svn/update.c	/^  svn_fs_root_t *rev_root;$/;"	m	file:
+rev_unreadable	./subversion/libsvn_repos/fs-wrap.c	/^  rev_unreadable$/;"	e	enum:rev_readability_level	file:
+reverse_order	./subversion/libsvn_wc/diff.c	/^  svn_boolean_t reverse_order;$/;"	m	struct:edit_baton	file:
+reverse_propchanges	./subversion/libsvn_wc/diff.c	/^reverse_propchanges (apr_hash_t *baseprops,$/;"	f	file:
+revert	./subversion/libsvn_client/revert.c	/^revert (const char *path,$/;"	f	file:
+revert_admin_things	./subversion/libsvn_wc/adm_ops.c	/^revert_admin_things (svn_wc_adm_access_t *adm_access,$/;"	f	file:
+revert_error	./subversion/libsvn_wc/adm_ops.c	/^revert_error (svn_error_t *err,$/;"	f	file:
+review	./subversion/tests/libsvn_subr/hashdump-test.c	/^const char *review =$/;"	v
+revision	./subversion/include/svn_client.h	/^  svn_revnum_t revision;$/;"	m	struct:svn_client_commit_info_t
+revision	./subversion/include/svn_client.h	/^  svn_revnum_t revision;$/;"	m	struct:svn_client_commit_item_t
+revision	./subversion/include/svn_subst.h	/^  const svn_string_t *revision;$/;"	m	struct:svn_subst_keywords_t
+revision	./subversion/include/svn_wc.h	/^  svn_opt_revision_t revision;$/;"	m	struct:svn_wc_external_item_t
+revision	./subversion/include/svn_wc.h	/^  svn_revnum_t revision;$/;"	m	struct:svn_wc_entry_t
+revision	./subversion/libsvn_client/blame.c	/^  svn_revnum_t revision; \/* the revision number *\/$/;"	m	struct:rev	file:
+revision	./subversion/libsvn_client/diff.c	/^  const svn_opt_revision_t *revision; \/* Revision of second URL in the merge *\/$/;"	m	struct:merge_cmd_baton	file:
+revision	./subversion/libsvn_client/export.c	/^  const char *revision;$/;"	m	struct:file_baton	file:
+revision	./subversion/libsvn_client/repos_diff.c	/^  svn_revnum_t revision;$/;"	m	struct:edit_baton	file:
+revision	./subversion/libsvn_fs/fs.h	/^  svn_revnum_t revision;$/;"	m
+revision	./subversion/libsvn_fs/tree.c	/^  svn_revnum_t revision;$/;"	m	struct:node_created_rev_args	file:
+revision	./subversion/libsvn_fs/tree.c	/^  svn_revnum_t revision;$/;"	m	struct:rev_get_txn_id_args	file:
+revision	./subversion/libsvn_fs/tree.c	/^  svn_revnum_t revision;$/;"	m	struct:svn_fs_history_t	file:
+revision	./subversion/libsvn_ra_dav/commit.c	/^  svn_revnum_t revision;$/;"	m	file:
+revision	./subversion/libsvn_ra_dav/log.c	/^  svn_revnum_t revision;$/;"	m	struct:log_baton	file:
+revision	./subversion/mod_dav_svn/version.c	/^  svn_revnum_t revision;$/;"	m	struct:cleanup_deltify_baton	file:
+revision_baton	./subversion/libsvn_repos/load.c	/^struct revision_baton$/;"	s	file:
+revision_baton_t	./subversion/svndumpfilter/main.c	/^struct revision_baton_t {$/;"	s	file:
+revision_from_word	./subversion/libsvn_subr/opt.c	/^revision_from_word (svn_opt_revision_t *revision, const char *word)$/;"	f	file:
+revision_proplist_args	./subversion/libsvn_fs/revs-txns.c	/^struct revision_proplist_args {$/;"	s	file:
+revision_props	./subversion/tests/libsvn_fs/fs-test.c	/^revision_props (const char **msg,$/;"	f	file:
+revision_root	./subversion/libsvn_fs/tree.c	/^  revision_root,$/;"	e	enum:root_kind_t	file:
+revision_root_args	./subversion/libsvn_fs/tree.c	/^struct revision_root_args$/;"	s	file:
+revisions	./subversion/libsvn_fs/fs.h	/^  DB *revisions;$/;"	m	struct:svn_fs_t
+revisions_changed	./subversion/tests/libsvn_repos/repos-test.c	/^revisions_changed (const char **msg,$/;"	f	file:
+revisions_changed_results	./subversion/tests/libsvn_repos/repos-test.c	/^struct revisions_changed_results$/;"	s	file:
+revnum	./subversion/libsvn_wc/diff.c	/^  svn_revnum_t revnum;$/;"	m	struct:edit_baton	file:
+revnum1	./subversion/libsvn_client/diff.c	/^  svn_revnum_t revnum1;$/;"	m	struct:diff_cmd_baton	file:
+revnum2	./subversion/libsvn_client/diff.c	/^  svn_revnum_t revnum2;$/;"	m	struct:diff_cmd_baton	file:
+revnum_to_update_to	./subversion/libsvn_repos/reporter.c	/^  svn_revnum_t revnum_to_update_to; $/;"	m	struct:report_baton_t	file:
+revprop	./subversion/clients/cmdline/cl.h	/^  svn_boolean_t revprop;         \/* operate on a revision property *\/$/;"	m	struct:svn_cl__opt_state_t
+revs_changed	./subversion/tests/libsvn_repos/repos-test.c	/^  svn_revnum_t revs_changed[11];$/;"	m	struct:revisions_changed_results	file:
+rewind_file	./subversion/tests/libsvn_delta/random-test.c	/^static void rewind_file (apr_file_t *fp)$/;"	f	file:
+rewrite_urls	./subversion/clients/cmdline/switch-cmd.c	/^rewrite_urls(apr_array_header_t *targets,$/;"	f	file:
+right	./subversion/libsvn_delta/compose_delta.c	/^  range_index_node_t *left, *right;$/;"	m	struct:range_index_node_t	file:
+right	./subversion/libsvn_diff/token.c	/^  svn_diff__node_t     *right;$/;"	m	struct:svn_diff__node_t	file:
+rmex_callback	./subversion/libsvn_subr/config.c	/^rmex_callback (void *baton, cfg_section_t *section, cfg_option_t *option)$/;"	f	file:
+root	./subversion/libsvn_diff/token.c	/^  svn_diff__node_t     *root[SVN_DIFF__HASH_SIZE];$/;"	m	struct:svn_diff__tree_t	file:
+root	./subversion/libsvn_fs/tree.c	/^  svn_fs_root_t *root;      \/* Root for the node whose ancestry we seek. *\/$/;"	m	struct:copied_from_args	file:
+root	./subversion/libsvn_fs/tree.c	/^  svn_fs_root_t *root;$/;"	m	struct:change_node_prop_args	file:
+root	./subversion/libsvn_fs/tree.c	/^  svn_fs_root_t *root;$/;"	m	struct:delete_args	file:
+root	./subversion/libsvn_fs/tree.c	/^  svn_fs_root_t *root;$/;"	m	struct:dir_entries_args	file:
+root	./subversion/libsvn_fs/tree.c	/^  svn_fs_root_t *root;$/;"	m	struct:file_checksum_args	file:
+root	./subversion/libsvn_fs/tree.c	/^  svn_fs_root_t *root;$/;"	m	struct:file_contents_baton_t	file:
+root	./subversion/libsvn_fs/tree.c	/^  svn_fs_root_t *root;$/;"	m	struct:file_length_args	file:
+root	./subversion/libsvn_fs/tree.c	/^  svn_fs_root_t *root;$/;"	m	struct:get_root_args	file:
+root	./subversion/libsvn_fs/tree.c	/^  svn_fs_root_t *root;$/;"	m	struct:make_dir_args	file:
+root	./subversion/libsvn_fs/tree.c	/^  svn_fs_root_t *root;$/;"	m	struct:make_file_args	file:
+root	./subversion/libsvn_fs/tree.c	/^  svn_fs_root_t *root;$/;"	m	struct:node_created_path_args	file:
+root	./subversion/libsvn_fs/tree.c	/^  svn_fs_root_t *root;$/;"	m	struct:node_created_rev_args	file:
+root	./subversion/libsvn_fs/tree.c	/^  svn_fs_root_t *root;$/;"	m	struct:node_id_args	file:
+root	./subversion/libsvn_fs/tree.c	/^  svn_fs_root_t *root;$/;"	m	struct:node_prop_args	file:
+root	./subversion/libsvn_fs/tree.c	/^  svn_fs_root_t *root;$/;"	m	struct:node_proplist_args	file:
+root	./subversion/libsvn_fs/tree.c	/^  svn_fs_root_t *root;$/;"	m	struct:paths_changed_args	file:
+root	./subversion/libsvn_fs/tree.c	/^  svn_fs_root_t *root;$/;"	m	struct:text_baton_t	file:
+root	./subversion/libsvn_fs/tree.c	/^  svn_fs_root_t *root;$/;"	m	struct:txdelta_baton_t	file:
+root	./subversion/libsvn_ra_dav/ra_dav.h	/^  ne_uri root;                          \/* parsed version of above *\/$/;"	m
+root	./subversion/libsvn_repos/node_tree.c	/^  svn_fs_root_t *root;$/;"	m	struct:edit_baton	file:
+root	./subversion/libsvn_repos/replay.c	/^  svn_fs_root_t *root;$/;"	m	struct:path_driver_cb_baton	file:
+root	./subversion/mod_dav_svn/dav_svn.h	/^  dav_svn_root root;$/;"	m	struct:dav_resource_private
+root	./subversion/mod_dav_svn/dav_svn.h	/^  svn_fs_root_t *root;$/;"	m
+root	./subversion/svnserve/main.c	/^  const char *root;$/;"	m	struct:serve_thread_t	file:
+root1	./subversion/libsvn_fs/tree.c	/^  svn_fs_root_t *root1;$/;"	m	struct:things_changed_args	file:
+root2	./subversion/libsvn_fs/tree.c	/^  svn_fs_root_t *root2;$/;"	m	struct:things_changed_args	file:
+root_dir	./subversion/libsvn_fs/tree.c	/^  dag_node_t *root_dir;$/;"	m	struct:svn_fs_root_t	file:
+root_id	./subversion/libsvn_fs/fs.h	/^  const svn_fs_id_t *root_id;$/;"	m
+root_kind_t	./subversion/libsvn_fs/tree.c	/^typedef enum root_kind_t {$/;"	g	file:
+root_kind_t	./subversion/libsvn_fs/tree.c	/^} root_kind_t;$/;"	t	file:
+root_node	./subversion/libsvn_fs/tree.c	/^root_node (dag_node_t **node_p,$/;"	f	file:
+root_opened	./subversion/libsvn_wc/diff.c	/^  svn_boolean_t root_opened;$/;"	m	struct:edit_baton	file:
+root_opened	./subversion/libsvn_wc/status.c	/^  svn_boolean_t root_opened;$/;"	m	struct:edit_baton	file:
+root_opened	./subversion/libsvn_wc/update_editor.c	/^  svn_boolean_t root_opened;$/;"	m	struct:edit_baton	file:
+root_p	./subversion/libsvn_fs/tree.c	/^  svn_fs_root_t **root_p;$/;"	m	struct:revision_root_args	file:
+root_p	./subversion/libsvn_fs/tree.c	/^  svn_fs_root_t **root_p;$/;"	m	struct:txn_root_args	file:
+root_path	./subversion/libsvn_client/export.c	/^  const char *root_path;$/;"	m	struct:edit_baton	file:
+root_path	./subversion/mod_dav_svn/dav_svn.h	/^  const char *root_path;$/;"	m
+root_path	./subversion/tests/libsvn_repos/dir-delta-editor.c	/^  const char *root_path;$/;"	m	struct:edit_baton	file:
+root_path	./subversion/tests/svn_test_editor.c	/^  const char *root_path;$/;"	m	struct:edit_baton	file:
+root_url	./subversion/libsvn_client/export.c	/^  const char *root_url;$/;"	m	struct:edit_baton	file:
+rsrc	./subversion/libsvn_ra_dav/commit.c	/^  resource_t *rsrc;$/;"	m	file:
+rsrc	./subversion/libsvn_ra_dav/fetch.c	/^  svn_ra_dav_resource_t *rsrc;$/;"	m	file:
+rsrc	./subversion/libsvn_ra_dav/props.c	/^  svn_ra_dav_resource_t *rsrc; \/* the current resource. *\/$/;"	m	struct:propfind_ctx_t	file:
+rstream	./subversion/mod_dav_svn/repos.c	/^  svn_stream_t *rstream;$/;"	m	struct:dav_stream	file:
+rtype	./subversion/libsvn_ra_dav/merge.c	/^  enum merge_rtype rtype;  \/* DAV:resourcetype of this resource *\/$/;"	m	file:
+rule	./subversion/libsvn_subr/date.c	/^} rule;$/;"	t	file:
+rule_action	./subversion/libsvn_subr/date.c	/^enum rule_action {$/;"	g	file:
+rules	./subversion/libsvn_subr/date.c	/^rules[] =$/;"	v	file:
+run_hook_cmd	./subversion/libsvn_repos/hooks.c	/^run_hook_cmd (const char *name,$/;"	f	file:
+run_mode	./subversion/svnserve/main.c	/^enum run_mode {$/;"	g	file:
+run_mode_daemon	./subversion/svnserve/main.c	/^  run_mode_daemon,$/;"	e	enum:run_mode	file:
+run_mode_inetd	./subversion/svnserve/main.c	/^  run_mode_inetd,$/;"	e	enum:run_mode	file:
+run_mode_listen_once	./subversion/svnserve/main.c	/^  run_mode_listen_once,$/;"	e	enum:run_mode	file:
+run_mode_none	./subversion/svnserve/main.c	/^  run_mode_none,$/;"	e	enum:run_mode	file:
+run_mode_tunnel	./subversion/svnserve/main.c	/^  run_mode_tunnel,$/;"	e	enum:run_mode	file:
+save_credentials	./subversion/include/svn_auth.h	/^  svn_error_t * (*save_credentials) (svn_boolean_t *saved,$/;"	m	struct:svn_auth_provider_t
+save_value	./subversion/mod_dav_svn/deadprops.c	/^static dav_error *save_value(dav_db *db, const dav_prop_name *name,$/;"	f	file:
+sb	./subversion/svnserve/serve.c	/^  server_baton_t *sb;$/;"	m	file:
+sbuf	./subversion/libsvn_delta/text_delta.c	/^  char *sbuf;                   \/* Source buffer *\/$/;"	m	struct:apply_baton	file:
+sbuf_len	./subversion/libsvn_delta/text_delta.c	/^  apr_size_t sbuf_len;          \/* Length of SBUF data *\/$/;"	m	struct:apply_baton	file:
+sbuf_offset	./subversion/libsvn_delta/text_delta.c	/^  svn_filesize_t sbuf_offset;   \/* Offset of SBUF data in source stream *\/$/;"	m	struct:apply_baton	file:
+sbuf_size	./subversion/libsvn_delta/text_delta.c	/^  apr_size_t sbuf_size;         \/* Allocated source buffer space *\/$/;"	m	struct:apply_baton	file:
+schedule	./subversion/include/svn_wc.h	/^  svn_wc_schedule_t schedule;$/;"	m	struct:svn_wc_entry_t
+schema	./subversion/libsvn_ra/ra_loader.c	/^  const char *schema;$/;"	m	struct:ra_lib_list_t	file:
+scratchpool	./subversion/libsvn_fs/trail.h	/^  apr_pool_t *scratchpool;$/;"	m	struct:trail_t
+scratchpool	./subversion/libsvn_ra_dav/merge.c	/^  apr_pool_t *scratchpool;$/;"	m	file:
+search_groups	./subversion/libsvn_subr/config.c	/^static svn_boolean_t search_groups (const char *name,$/;"	f	file:
+search_groups_baton	./subversion/libsvn_subr/config.c	/^struct search_groups_baton$/;"	s	file:
+search_offset_index	./subversion/libsvn_delta/compose_delta.c	/^search_offset_index (const offset_index_t *ndx, apr_size_t offset)$/;"	f	file:
+sec	./subversion/tests/libsvn_subr/time-test.c	/^  apr_int32_t sec;$/;"	m	struct:date_test	file:
+section	./subversion/libsvn_subr/config_file.c	/^  svn_stringbuf_t *section;$/;"	m	struct:parse_context_t	file:
+sections	./subversion/libsvn_subr/config_impl.h	/^  apr_hash_t *sections;$/;"	m	struct:svn_config_t
+seed_val	./subversion/tests/libsvn_diff/diff-diff3-test.c	/^seed_val (void)$/;"	f	file:
+seed_val	./subversion/tests/libsvn_subr/utf-test.c	/^seed_val (void)$/;"	f	file:
+seen_first_window	./subversion/mod_dav_svn/update.c	/^  svn_boolean_t seen_first_window;  \/* False until first window seen. *\/$/;"	m	struct:window_handler_baton	file:
+select_lines	./subversion/tests/libsvn_diff/diff-diff3-test.c	/^select_lines (struct random_mod *selected,$/;"	f	file:
+send_all	./subversion/mod_dav_svn/update.c	/^  svn_boolean_t send_all;$/;"	m	file:
+send_file_contents	./subversion/libsvn_client/commit.c	/^send_file_contents (const char *path,$/;"	f	file:
+send_mechs	./subversion/svnserve/serve.c	/^static svn_error_t *send_mechs(svn_ra_svn_conn_t *conn, apr_pool_t *pool,$/;"	f	file:
+send_response	./subversion/mod_dav_svn/merge.c	/^static svn_error_t *send_response(const dav_svn_repos *repos,$/;"	f	file:
+send_status_structure	./subversion/libsvn_wc/status.c	/^send_status_structure (const char *path,$/;"	f	file:
+send_text_delta	./subversion/libsvn_repos/delta.c	/^send_text_delta (struct context *c,$/;"	f	file:
+send_unversioned_item	./subversion/libsvn_wc/status.c	/^send_unversioned_item (const char *name, $/;"	f	file:
+send_vsn_url	./subversion/mod_dav_svn/update.c	/^static svn_error_t * send_vsn_url(item_baton_t *baton, apr_pool_t *pool)$/;"	f	file:
+send_xml	./subversion/mod_dav_svn/log.c	/^static svn_error_t * send_xml(struct log_receiver_baton *lrb, $/;"	f	file:
+send_xml	./subversion/mod_dav_svn/update.c	/^static svn_error_t * send_xml(update_ctx_t *uc, const char *fmt, ...)$/;"	f	file:
+sent_first_txdelta	./subversion/clients/cmdline/notify.c	/^  svn_boolean_t sent_first_txdelta;$/;"	m	struct:notify_baton	file:
+serve	./subversion/svnserve/serve.c	/^svn_error_t *serve(svn_ra_svn_conn_t *conn, const char *root,$/;"	f
+serve_thread	./subversion/svnserve/main.c	/^static void * APR_THREAD_FUNC serve_thread(apr_thread_t *tid, void *data)$/;"	f	file:
+serve_thread_t	./subversion/svnserve/main.c	/^struct serve_thread_t {$/;"	s	file:
+server_baton_t	./subversion/svnserve/serve.c	/^} server_baton_t;$/;"	t	file:
+server_ssl_callback	./subversion/libsvn_ra_dav/session.c	/^server_ssl_callback(void *userdata,$/;"	f	file:
+sess	./subversion/libsvn_ra_dav/ra_dav.h	/^  ne_session *sess;                     \/* HTTP session to server *\/$/;"	m
+sess	./subversion/libsvn_ra_svn/client.c	/^  ra_svn_session_baton_t *sess;$/;"	m	file:
+sess2	./subversion/libsvn_ra_dav/ra_dav.h	/^  ne_session *sess2;$/;"	m
+session	./subversion/libsvn_ra_local/ra_plugin.c	/^  svn_ra_local__session_baton_t *session;$/;"	m	struct:reporter_baton_t	file:
+set	./subversion/libsvn_wc/lock.c	/^  apr_hash_t *set;$/;"	m	struct:svn_wc_adm_access_t	file:
+set_auto_log_message	./subversion/mod_dav_svn/version.c	/^static dav_error *set_auto_log_message(dav_resource *resource)$/;"	f	file:
+set_entry	./subversion/libsvn_fs/dag.c	/^set_entry (dag_node_t *parent,$/;"	f	file:
+set_fulltext	./subversion/include/svn_repos.h	/^  svn_error_t *(*set_fulltext) (svn_stream_t **stream,$/;"	m	struct:svn_repos_parse_fns_t
+set_fulltext	./subversion/libsvn_repos/load.c	/^set_fulltext (svn_stream_t **stream,$/;"	f	file:
+set_fulltext	./subversion/svndumpfilter/main.c	/^set_fulltext (svn_stream_t **stream, void *node_baton)$/;"	f	file:
+set_gssapi_filter	./subversion/libsvn_ra_svn/gssapi.c	/^static svn_error_t *set_gssapi_filter(svn_ra_svn_conn_t *conn, gss_ctx_id_t context)$/;"	f	file:
+set_node_property	./subversion/include/svn_repos.h	/^  svn_error_t *(*set_node_property) (void *node_baton,$/;"	m	struct:svn_repos_parse_fns_t
+set_node_property	./subversion/libsvn_repos/load.c	/^set_node_property (void *baton,$/;"	f	file:
+set_node_property	./subversion/svndumpfilter/main.c	/^set_node_property (void *node_baton,$/;"	f	file:
+set_node_revision	./subversion/libsvn_fs/dag.c	/^set_node_revision (dag_node_t *node,$/;"	f	file:
+set_owner	./subversion/libsvn_wc/lock.c	/^  svn_boolean_t set_owner;$/;"	m	struct:svn_wc_adm_access_t	file:
+set_parser	./subversion/libsvn_ra_dav/props.c	/^static void set_parser(ne_xml_parser *parser,$/;"	f	file:
+set_path	./subversion/include/svn_ra.h	/^  svn_error_t *(*set_path) (void *report_baton,$/;"	m	struct:svn_ra_reporter_t
+set_path	./subversion/svnserve/serve.c	/^static svn_error_t *set_path(svn_ra_svn_conn_t *conn, apr_pool_t *pool,$/;"	f	file:
+set_revision_property	./subversion/include/svn_repos.h	/^  svn_error_t *(*set_revision_property) (void *revision_baton,$/;"	m	struct:svn_repos_parse_fns_t
+set_revision_property	./subversion/libsvn_repos/load.c	/^set_revision_property (void *baton,$/;"	f	file:
+set_revision_property	./subversion/svndumpfilter/main.c	/^set_revision_property (void *revision_baton,$/;"	f	file:
+set_special_wc_prop	./subversion/libsvn_ra_dav/fetch.c	/^static svn_error_t *set_special_wc_prop (const char *key,$/;"	f	file:
+set_target_revision	./subversion/include/svn_delta.h	/^  svn_error_t *(*set_target_revision) (void *edit_baton,$/;"	m	struct:svn_delta_editor_t
+set_target_revision	./subversion/libsvn_client/commit_util.c	/^set_target_revision (void *edit_baton,$/;"	f	file:
+set_target_revision	./subversion/libsvn_client/export.c	/^set_target_revision (void *edit_baton, $/;"	f	file:
+set_target_revision	./subversion/libsvn_client/repos_diff.c	/^set_target_revision (void *edit_baton, $/;"	f	file:
+set_target_revision	./subversion/libsvn_delta/cancel.c	/^set_target_revision (void *edit_baton,$/;"	f	file:
+set_target_revision	./subversion/libsvn_delta/default_editor.c	/^set_target_revision (void *edit_baton, $/;"	f	file:
+set_target_revision	./subversion/libsvn_wc/diff.c	/^set_target_revision (void *edit_baton, $/;"	f	file:
+set_target_revision	./subversion/libsvn_wc/status.c	/^set_target_revision (void *edit_baton, $/;"	f	file:
+set_target_revision	./subversion/libsvn_wc/update_editor.c	/^set_target_revision (void *edit_baton, $/;"	f	file:
+set_uuid_args	./subversion/libsvn_fs/uuid.c	/^struct set_uuid_args $/;"	s	file:
+set_wc_prop	./subversion/include/svn_ra.h	/^  svn_ra_set_wc_prop_func_t set_wc_prop;$/;"	m	struct:svn_ra_callbacks_t
+set_wc_prop	./subversion/libsvn_client/ra.c	/^set_wc_prop (void *baton,$/;"	f	file:
+setup_copy	./subversion/libsvn_client/copy.c	/^setup_copy (svn_client_commit_info_t **commit_info,$/;"	f	file:
+shim_cdata	./subversion/libsvn_ra_dav/util.c	/^static int shim_cdata(void *userdata, int state, const char *cdata, size_t len)$/;"	f	file:
+shim_endelm	./subversion/libsvn_ra_dav/util.c	/^static int shim_endelm(void *userdata, int state, const char *nspace,$/;"	f	file:
+shim_startelm	./subversion/libsvn_ra_dav/util.c	/^shim_startelm(void *userdata, int parent_state, const char *nspace,$/;"	f	file:
+shim_xml_push_handler	./subversion/libsvn_ra_dav/util.c	/^static void shim_xml_push_handler(ne_xml_parser *p,$/;"	f	file:
+show_hidden	./subversion/libsvn_wc/entries.c	/^  svn_boolean_t show_hidden;$/;"	m	struct:entries_accumulator	file:
+show_ids	./subversion/svnlook/main.c	/^  svn_boolean_t show_ids;         \/* --show-ids *\/$/;"	m	struct:svnlook_opt_state	file:
+show_ids	./subversion/svnlook/main.c	/^  svn_boolean_t show_ids;$/;"	m	struct:print_history_baton	file:
+show_ids	./subversion/svnlook/main.c	/^  svn_boolean_t show_ids;$/;"	m	struct:svnlook_ctxt_t	file:
+show_last_committed	./subversion/clients/cmdline/status-cmd.c	/^  svn_boolean_t show_last_committed;$/;"	m	struct:status_baton	file:
+sibling	./subversion/include/svn_repos.h	/^  struct svn_repos_node_t *sibling;$/;"	m	struct:svn_repos_node_t
+sigchld_handler	./subversion/svnserve/main.c	/^static void sigchld_handler(int signo)$/;"	f	file:
+signal_error	./subversion/libsvn_wc/log.c	/^signal_error (struct log_runner *loggy, svn_error_t *err)$/;"	f	file:
+signal_handler	./subversion/clients/cmdline/main.c	/^signal_handler (int signum)$/;"	f	file:
+signal_handler	./subversion/svnadmin/main.c	/^signal_handler (int signum)$/;"	f	file:
+signal_handler	./subversion/svnlook/main.c	/^signal_handler (int signum)$/;"	f	file:
+simple_fetch_file	./subversion/libsvn_ra_dav/fetch.c	/^static svn_error_t *simple_fetch_file(ne_session *sess,$/;"	f	file:
+simple_first_creds	./subversion/libsvn_client/simple_providers.c	/^simple_first_creds (void **credentials,$/;"	f	file:
+simple_prompt_first_creds	./subversion/libsvn_client/simple_providers.c	/^simple_prompt_first_creds (void **credentials_p,$/;"	f	file:
+simple_prompt_iter_baton_t	./subversion/libsvn_client/simple_providers.c	/^} simple_prompt_iter_baton_t;$/;"	t	file:
+simple_prompt_next_creds	./subversion/libsvn_client/simple_providers.c	/^simple_prompt_next_creds (void **credentials_p,$/;"	f	file:
+simple_prompt_provider	./subversion/libsvn_client/simple_providers.c	/^static const svn_auth_provider_t simple_prompt_provider = {$/;"	v	file:
+simple_prompt_provider_baton_t	./subversion/libsvn_client/simple_providers.c	/^} simple_prompt_provider_baton_t;$/;"	t	file:
+simple_provider	./subversion/libsvn_client/simple_providers.c	/^static const svn_auth_provider_t simple_provider = {$/;"	v	file:
+simple_request	./subversion/libsvn_ra_dav/commit.c	/^static svn_error_t * simple_request(svn_ra_session_t *ras, $/;"	f	file:
+simple_save_creds	./subversion/libsvn_client/simple_providers.c	/^simple_save_creds (svn_boolean_t *saved,$/;"	f	file:
+simple_store_vsn_url	./subversion/libsvn_ra_dav/fetch.c	/^static svn_error_t *simple_store_vsn_url(const char *vsn_url,$/;"	f	file:
+single_baton_func	./subversion/libsvn_delta/default_editor.c	/^single_baton_func (void *baton,$/;"	f	file:
+single_file_merge_get_file	./subversion/libsvn_client/diff.c	/^single_file_merge_get_file (const char **filename,$/;"	f	file:
+size	./subversion/include/svn_types.h	/^  svn_filesize_t size;$/;"	m	struct:svn_dirent_t
+size	./subversion/libsvn_diff/diff_file.c	/^  apr_off_t size[4];$/;"	m	struct:svn_diff__file_baton_t	file:
+size	./subversion/libsvn_fs/fs.h	/^  apr_size_t size;$/;"	m
+size	./subversion/libsvn_fs/reps-strings.c	/^  apr_size_t size;$/;"	m	struct:write_svndiff_strings_baton	file:
+size	./subversion/libsvn_fs/reps-strings.c	/^  svn_filesize_t size;$/;"	m	struct:rep_read_baton	file:
+size_buffer	./subversion/libsvn_delta/text_delta.c	/^size_buffer (char **buf, apr_size_t *buf_size,$/;"	f	file:
+skel	./subversion/tests/libsvn_fs/strings-reps-test.c	/^  skel_t *skel;$/;"	m	struct:rep_args	file:
+skel_char_map	./subversion/tests/libsvn_fs/skel-test.c	/^static enum char_type skel_char_map[256];$/;"	v	file:
+skel_char_map_initialized	./subversion/tests/libsvn_fs/skel-test.c	/^static int skel_char_map_initialized;$/;"	v	file:
+skel_char_type	./subversion/libsvn_fs/util/skel.c	/^static const enum char_type skel_char_type[256] = {$/;"	v	file:
+skel_equal	./subversion/tests/libsvn_fs/skel-test.c	/^skel_equal (skel_t *a, skel_t *b)$/;"	f	file:
+skel_err	./subversion/libsvn_fs/util/fs_skels.c	/^skel_err (const char *skel_type)$/;"	f	file:
+skel_is_name	./subversion/tests/libsvn_fs/skel-test.c	/^skel_is_name (char byte)$/;"	f	file:
+skel_is_paren	./subversion/tests/libsvn_fs/skel-test.c	/^skel_is_paren (char byte)$/;"	f	file:
+skel_is_space	./subversion/tests/libsvn_fs/skel-test.c	/^skel_is_space (char byte)$/;"	f	file:
+skel_t	./subversion/libsvn_fs/util/skel.h	/^struct skel_t {$/;"	s
+skel_t	./subversion/libsvn_fs/util/skel.h	/^typedef struct skel_t skel_t;$/;"	t
+skip_cleanup	./subversion/tests/svn_tests_main.c	/^static int skip_cleanup = 0;$/;"	v	file:
+skip_deltas	./subversion/tests/libsvn_fs/fs-test.c	/^skip_deltas (const char **msg,$/;"	f	file:
+skip_scheme_part	./subversion/svnserve/serve.c	/^static const char *skip_scheme_part(const char *url)$/;"	f	file:
+skip_to_eoln	./subversion/libsvn_subr/config_file.c	/^skip_to_eoln (FILE *fd)$/;"	f	file:
+skip_unrecognized	./subversion/clients/cmdline/status-cmd.c	/^  svn_boolean_t skip_unrecognized;$/;"	m	struct:status_baton	file:
+skip_uri_schema	./subversion/libsvn_subr/path.c	/^skip_uri_schema (const char *path)$/;"	f	file:
+skip_whitespace	./subversion/libsvn_subr/config_file.c	/^skip_whitespace (FILE* fd, int *pcount)$/;"	f	file:
+slots	./subversion/libsvn_delta/vdelta.c	/^  hash_slot_t *slots;           \/* Slots array. *\/$/;"	m	struct:hash_table_t	file:
+sock	./subversion/libsvn_ra_svn/ra_svn.h	/^  apr_socket_t *sock;     \/* NULL if using in_file\/out_file *\/$/;"	m	struct:svn_ra_svn_conn_st
+source	./subversion/libsvn_delta/text_delta.c	/^  svn_stream_t *source;$/;"	m	struct:apply_baton	file:
+source	./subversion/libsvn_delta/text_delta.c	/^  svn_stream_t *source;$/;"	m	struct:svn_txdelta_stream_t	file:
+source	./subversion/libsvn_wc/update_editor.c	/^  apr_file_t *source;$/;"	m	struct:handler_baton	file:
+source_node	./subversion/libsvn_fs/tree.c	/^  dag_node_t *source_node;$/;"	m	struct:merge_args	file:
+source_root	./subversion/libsvn_repos/delta.c	/^  svn_fs_root_t *source_root;$/;"	m	struct:context	file:
+source_stream	./subversion/libsvn_fs/tree.c	/^  svn_stream_t *source_stream;$/;"	m	struct:txdelta_baton_t	file:
+special_defn	./subversion/mod_dav_svn/repos.c	/^static const struct special_defn$/;"	s	file:
+special_subdirs	./subversion/mod_dav_svn/repos.c	/^} special_subdirs[] =$/;"	v	file:
+special_uri	./subversion/mod_dav_svn/dav_svn.h	/^  const char *special_uri;$/;"	m
+special_uri	./subversion/mod_dav_svn/mod_dav_svn.c	/^  const char *special_uri;$/;"	m	file:
+splay_range_index	./subversion/libsvn_delta/compose_delta.c	/^splay_range_index (apr_size_t offset, range_index_t *ndx)$/;"	f	file:
+split_url_test_1	./subversion/tests/libsvn_ra_local/ra-local-test.c	/^split_url_test_1 (const char **msg)$/;"	f	file:
+split_url_test_2	./subversion/tests/libsvn_ra_local/ra-local-test.c	/^split_url_test_2 (const char **msg)$/;"	f	file:
+src_kind	./subversion/libsvn_client/copy.c	/^  svn_node_kind_t src_kind;$/;"	m	struct:path_driver_cb_baton	file:
+src_len	./subversion/libsvn_repos/repos.c	/^  unsigned int src_len; \/* len of the source path*\/$/;"	m	struct:hotcopy_ctx_t	file:
+src_ops	./subversion/include/svn_delta.h	/^  int src_ops;$/;"	m	struct:svn_txdelta_window_t
+src_ops	./subversion/libsvn_delta/delta.h	/^  int src_ops;                  \/* current number of source copy ope *\/$/;"	m	struct:svn_txdelta__ops_baton_t
+src_path	./subversion/libsvn_client/copy.c	/^  const char *src_path;$/;"	m	struct:path_driver_cb_baton	file:
+src_path	./subversion/libsvn_fs/fs.h	/^  const char *src_path;$/;"	m
+src_revnum	./subversion/libsvn_client/copy.c	/^  svn_revnum_t src_revnum;$/;"	m	struct:path_driver_cb_baton	file:
+src_txn_id	./subversion/libsvn_fs/fs.h	/^  const char *src_txn_id;$/;"	m
+src_url	./subversion/libsvn_client/copy.c	/^  const char *src_url;$/;"	m	struct:path_driver_cb_baton	file:
+srcdir	./subversion/tests/libsvn_subr/config-test.c	/^static const char *srcdir = NULL;$/;"	v	file:
+ssl_client_cert_file_first_credentials	./subversion/libsvn_client/ssl_client_cert_providers.c	/^ssl_client_cert_file_first_credentials (void **credentials_p,$/;"	f	file:
+ssl_client_cert_file_provider	./subversion/libsvn_client/ssl_client_cert_providers.c	/^static const svn_auth_provider_t ssl_client_cert_file_provider =$/;"	v	file:
+ssl_client_cert_prompt_first_cred	./subversion/libsvn_client/ssl_client_cert_providers.c	/^ssl_client_cert_prompt_first_cred (void **credentials_p,$/;"	f	file:
+ssl_client_cert_prompt_iter_baton_t	./subversion/libsvn_client/ssl_client_cert_providers.c	/^} ssl_client_cert_prompt_iter_baton_t;$/;"	t	file:
+ssl_client_cert_prompt_next_cred	./subversion/libsvn_client/ssl_client_cert_providers.c	/^ssl_client_cert_prompt_next_cred (void **credentials_p,$/;"	f	file:
+ssl_client_cert_prompt_provider	./subversion/libsvn_client/ssl_client_cert_providers.c	/^static const svn_auth_provider_t ssl_client_cert_prompt_provider = {$/;"	v	file:
+ssl_client_cert_prompt_provider_baton_t	./subversion/libsvn_client/ssl_client_cert_providers.c	/^} ssl_client_cert_prompt_provider_baton_t;$/;"	t	file:
+ssl_client_cert_pw_file_first_credentials	./subversion/libsvn_client/ssl_client_cert_pw_providers.c	/^ssl_client_cert_pw_file_first_credentials (void **credentials_p,$/;"	f	file:
+ssl_client_cert_pw_file_provider	./subversion/libsvn_client/ssl_client_cert_pw_providers.c	/^static const svn_auth_provider_t ssl_client_cert_pw_file_provider = {$/;"	v	file:
+ssl_client_cert_pw_prompt_first_cred	./subversion/libsvn_client/ssl_client_cert_pw_providers.c	/^ssl_client_cert_pw_prompt_first_cred (void **credentials_p,$/;"	f	file:
+ssl_client_cert_pw_prompt_iter_baton_t	./subversion/libsvn_client/ssl_client_cert_pw_providers.c	/^} ssl_client_cert_pw_prompt_iter_baton_t;$/;"	t	file:
+ssl_client_cert_pw_prompt_next_cred	./subversion/libsvn_client/ssl_client_cert_pw_providers.c	/^ssl_client_cert_pw_prompt_next_cred (void **credentials_p,$/;"	f	file:
+ssl_client_cert_pw_prompt_provider_baton_t	./subversion/libsvn_client/ssl_client_cert_pw_providers.c	/^} ssl_client_cert_pw_prompt_provider_baton_t;$/;"	t	file:
+ssl_server_trust_file_first_credentials	./subversion/libsvn_client/ssl_server_trust_providers.c	/^ssl_server_trust_file_first_credentials (void **credentials,$/;"	f	file:
+ssl_server_trust_file_provider	./subversion/libsvn_client/ssl_server_trust_providers.c	/^static const svn_auth_provider_t ssl_server_trust_file_provider = {$/;"	v	file:
+ssl_server_trust_file_save_credentials	./subversion/libsvn_client/ssl_server_trust_providers.c	/^ssl_server_trust_file_save_credentials (svn_boolean_t *saved,$/;"	f	file:
+ssl_server_trust_prompt_first_cred	./subversion/libsvn_client/ssl_server_trust_providers.c	/^ssl_server_trust_prompt_first_cred (void **credentials_p,$/;"	f	file:
+ssl_server_trust_prompt_provider	./subversion/libsvn_client/ssl_server_trust_providers.c	/^static const svn_auth_provider_t ssl_server_trust_prompt_provider = {$/;"	v	file:
+ssl_server_trust_prompt_provider_baton_t	./subversion/libsvn_client/ssl_server_trust_providers.c	/^} ssl_server_trust_prompt_provider_baton_t;$/;"	t	file:
+standard_changes	./subversion/tests/libsvn_fs/changes-test.c	/^static const char *standard_changes[19][6] $/;"	v	file:
+standard_txns	./subversion/tests/libsvn_fs/changes-test.c	/^static const char *standard_txns[6]$/;"	v	file:
+start	./subversion/libsvn_client/blame.c	/^  apr_off_t start;    \/* the starting diff-token (line) *\/$/;"	m	struct:blame	file:
+start_element	./subversion/libsvn_ra_dav/fetch.c	/^start_element(void *userdata, int parent_state, const char *nspace,$/;"	f	file:
+start_element	./subversion/libsvn_ra_dav/merge.c	/^static int start_element(void *userdata, const svn_ra_dav__xml_elm_t *elm,$/;"	f	file:
+start_element	./subversion/libsvn_ra_dav/options.c	/^static int start_element(void *userdata, const svn_ra_dav__xml_elm_t *elm,$/;"	f	file:
+start_element	./subversion/libsvn_ra_dav/props.c	/^static int start_element(void *userdata, $/;"	f	file:
+start_err_element	./subversion/libsvn_ra_dav/util.c	/^static int start_err_element(void *userdata, const svn_ra_dav__xml_elm_t *elm,$/;"	f	file:
+start_handler	./subversion/libsvn_subr/xml.c	/^  svn_xml_start_elem start_handler;$/;"	m	struct:svn_xml_parser_t	file:
+start_handler	./subversion/libsvn_wc/log.c	/^start_handler (void *userData, const char *eltname, const char **atts)$/;"	f	file:
+start_revision	./subversion/clients/cmdline/cl.h	/^  svn_opt_revision_t start_revision, end_revision;$/;"	m	struct:svn_cl__opt_state_t
+start_revision	./subversion/svnadmin/main.c	/^  svn_opt_revision_t start_revision, end_revision;  \/* -r X[:Y] *\/$/;"	m	struct:svnadmin_opt_state	file:
+start_revision	./subversion/svndumpfilter/main.c	/^  svn_opt_revision_t start_revision;     \/* -r X[:Y] is         *\/$/;"	m	struct:svndumpfilter_opt_state	file:
+started_update	./subversion/mod_dav_svn/update.c	/^  svn_boolean_t started_update;$/;"	m	file:
+startelm_cb	./subversion/libsvn_ra_dav/util.c	/^  svn_ra_dav__xml_startelm_cb *startelm_cb;  \/* old-style startelm callback *\/$/;"	m	file:
+starting_props	./subversion/libsvn_ra_dav/props.c	/^static const ne_propname starting_props[] =$/;"	v	file:
+state_flags	./subversion/include/svn_client.h	/^  apr_byte_t state_flags;$/;"	m	struct:svn_client_commit_item_t
+statii	./subversion/libsvn_wc/status.c	/^  apr_hash_t *statii;$/;"	m	struct:dir_baton	file:
+status	./subversion/libsvn_ra_dav/merge.c	/^  int status;              \/* HTTP status for this DAV:propstat *\/$/;"	m	file:
+status	./subversion/libsvn_ra_dav/props.c	/^  int status; \/* status for the current <propstat> (or 0 if unknown). *\/$/;"	m	struct:propfind_ctx_t	file:
+status	./subversion/svnserve/serve.c	/^static svn_error_t *status(svn_ra_svn_conn_t *conn, apr_pool_t *pool,$/;"	f	file:
+status_baton	./subversion/clients/cmdline/status-cmd.c	/^struct status_baton$/;"	s	file:
+status_baton	./subversion/libsvn_client/delete.c	/^struct status_baton$/;"	s	file:
+status_baton	./subversion/libsvn_client/status.c	/^struct status_baton$/;"	s	file:
+status_baton	./subversion/libsvn_wc/status.c	/^  void *status_baton;$/;"	m	struct:edit_baton	file:
+status_baton	./subversion/libsvn_wc/status.c	/^struct status_baton$/;"	s	file:
+status_baton	./subversion/svnversion/main.c	/^struct status_baton$/;"	s	file:
+status_func	./subversion/libsvn_wc/status.c	/^  svn_wc_status_func_t status_func;$/;"	m	struct:edit_baton	file:
+stop_on_copy	./subversion/clients/cmdline/cl.h	/^  svn_boolean_t stop_on_copy;    \/* don't cross copies during processing *\/$/;"	m	struct:svn_cl__opt_state_t
+store_mapping	./subversion/libsvn_delta/vdelta.c	/^store_mapping (hash_table_t *table, const char* key, apr_size_t idx)$/;"	f	file:
+store_token	./subversion/libsvn_ra_svn/editor.c	/^static ra_svn_token_entry_t *store_token(ra_svn_driver_state_t *ds,$/;"	f	file:
+store_token	./subversion/libsvn_ra_svn/editorp.c	/^static ra_svn_token_entry_t *store_token(ra_svn_driver_state_t *ds,$/;"	f	file:
+str	./subversion/libsvn_subr/stream.c	/^  svn_stringbuf_t *str;$/;"	m	struct:string_stream_baton	file:
+str	./subversion/tests/libsvn_subr/time-test.c	/^  const char *str;$/;"	m	struct:date_test	file:
+stream	./subversion/bindings/swig/swigutil_java.c	/^  jobject stream;       \/* Java stream object *\/$/;"	m	file:
+stream	./subversion/libsvn_fs/tree.c	/^  svn_stream_t *stream;$/;"	m	struct:text_baton_t	file:
+stream	./subversion/libsvn_ra_dav/fetch.c	/^  svn_stream_t *stream;       \/* stream to write file contents to *\/$/;"	m	file:
+stream	./subversion/libsvn_ra_dav/fetch.c	/^  svn_stream_t *stream;$/;"	m	file:
+stream	./subversion/libsvn_repos/dump.c	/^  svn_stream_t *stream; $/;"	m	struct:edit_baton	file:
+stream_baton_cleanup_handler	./subversion/bindings/swig/swigutil_java.c	/^static apr_status_t stream_baton_cleanup_handler(void *baton)$/;"	f	file:
+stream_baton_t	./subversion/bindings/swig/swigutil_java.c	/^} stream_baton_t;$/;"	t	file:
+stream_malformed	./subversion/libsvn_repos/load.c	/^stream_malformed (void)$/;"	f	file:
+stream_ran_dry	./subversion/libsvn_repos/load.c	/^stream_ran_dry (void)$/;"	f	file:
+stream_write	./subversion/clients/cmdline/propget-cmd.c	/^stream_write (svn_stream_t *out,$/;"	f	file:
+strict	./subversion/clients/cmdline/cl.h	/^  svn_boolean_t strict;          \/* do strictly what was requested *\/$/;"	m	struct:svn_cl__opt_state_t
+string	./subversion/include/svn_ra_svn.h	/^    svn_string_t *string;$/;"	m	union:svn_ra_svn_item_t::<anonymous>
+string_args	./subversion/tests/libsvn_fs/strings-reps-test.c	/^struct string_args$/;"	s	file:
+string_key	./subversion/libsvn_fs/fs.h	/^      const char *string_key;$/;"	m
+string_key	./subversion/libsvn_fs/fs.h	/^  const char *string_key; $/;"	m
+string_stream	./subversion/libsvn_fs/tree.c	/^  svn_stream_t *string_stream;$/;"	m	struct:txdelta_baton_t	file:
+string_stream_baton	./subversion/libsvn_subr/stream.c	/^struct string_stream_baton$/;"	s	file:
+string_to_kind	./subversion/tests/libsvn_fs/changes-test.c	/^static svn_fs_path_change_kind_t string_to_kind (const char *str)$/;"	f	file:
+strings	./subversion/libsvn_fs/fs.h	/^  DB *strings;$/;"	m	struct:svn_fs_t
+subbaton	./subversion/libsvn_subr/stream.c	/^  void *subbaton;               \/* The substream's baton *\/$/;"	m	struct:zbaton	file:
+subcommand_author	./subversion/svnlook/main.c	/^  subcommand_author,$/;"	v	file:
+subcommand_author	./subversion/svnlook/main.c	/^subcommand_author (apr_getopt_t *os, void *baton, apr_pool_t *pool)$/;"	f	file:
+subcommand_cat	./subversion/svnlook/main.c	/^  subcommand_cat,$/;"	v	file:
+subcommand_cat	./subversion/svnlook/main.c	/^subcommand_cat (apr_getopt_t *os, void *baton, apr_pool_t *pool)$/;"	f	file:
+subcommand_changed	./subversion/svnlook/main.c	/^  subcommand_changed,$/;"	v	file:
+subcommand_changed	./subversion/svnlook/main.c	/^subcommand_changed (apr_getopt_t *os, void *baton, apr_pool_t *pool)$/;"	f	file:
+subcommand_create	./subversion/svnadmin/main.c	/^  subcommand_create,$/;"	v	file:
+subcommand_create	./subversion/svnadmin/main.c	/^subcommand_create (apr_getopt_t *os, void *baton, apr_pool_t *pool)$/;"	f	file:
+subcommand_date	./subversion/svnlook/main.c	/^  subcommand_date,$/;"	v	file:
+subcommand_date	./subversion/svnlook/main.c	/^subcommand_date (apr_getopt_t *os, void *baton, apr_pool_t *pool)$/;"	f	file:
+subcommand_deltify	./subversion/svnadmin/main.c	/^  subcommand_deltify,$/;"	v	file:
+subcommand_deltify	./subversion/svnadmin/main.c	/^subcommand_deltify (apr_getopt_t *os, void *baton, apr_pool_t *pool)$/;"	f	file:
+subcommand_diff	./subversion/svnlook/main.c	/^  subcommand_diff,$/;"	v	file:
+subcommand_diff	./subversion/svnlook/main.c	/^subcommand_diff (apr_getopt_t *os, void *baton, apr_pool_t *pool)$/;"	f	file:
+subcommand_dirschanged	./subversion/svnlook/main.c	/^  subcommand_dirschanged,$/;"	v	file:
+subcommand_dirschanged	./subversion/svnlook/main.c	/^subcommand_dirschanged (apr_getopt_t *os, void *baton, apr_pool_t *pool)$/;"	f	file:
+subcommand_dump	./subversion/svnadmin/main.c	/^  subcommand_dump,$/;"	v	file:
+subcommand_dump	./subversion/svnadmin/main.c	/^subcommand_dump (apr_getopt_t *os, void *baton, apr_pool_t *pool)$/;"	f	file:
+subcommand_exclude	./subversion/svndumpfilter/main.c	/^  subcommand_exclude,$/;"	v	file:
+subcommand_exclude	./subversion/svndumpfilter/main.c	/^subcommand_exclude (apr_getopt_t *os, void *baton, apr_pool_t *pool)$/;"	f	file:
+subcommand_help	./subversion/svnadmin/main.c	/^  subcommand_help,$/;"	v	file:
+subcommand_help	./subversion/svnadmin/main.c	/^subcommand_help (apr_getopt_t *os, void *baton, apr_pool_t *pool)$/;"	f	file:
+subcommand_help	./subversion/svndumpfilter/main.c	/^subcommand_help (apr_getopt_t *os, void *baton, apr_pool_t *pool)$/;"	f	file:
+subcommand_help	./subversion/svndumpfilter/main.c	/^subcommand_help,$/;"	v	file:
+subcommand_help	./subversion/svnlook/main.c	/^  subcommand_help,$/;"	v	file:
+subcommand_help	./subversion/svnlook/main.c	/^subcommand_help (apr_getopt_t *os, void *baton, apr_pool_t *pool)$/;"	f	file:
+subcommand_history	./subversion/svnlook/main.c	/^  subcommand_history,$/;"	v	file:
+subcommand_history	./subversion/svnlook/main.c	/^subcommand_history (apr_getopt_t *os, void *baton, apr_pool_t *pool)$/;"	f	file:
+subcommand_hotcopy	./subversion/svnadmin/main.c	/^  subcommand_hotcopy,$/;"	v	file:
+subcommand_hotcopy	./subversion/svnadmin/main.c	/^subcommand_hotcopy (apr_getopt_t *os, void *baton, apr_pool_t *pool)$/;"	f
+subcommand_include	./subversion/svndumpfilter/main.c	/^  subcommand_include;$/;"	v	file:
+subcommand_include	./subversion/svndumpfilter/main.c	/^subcommand_include (apr_getopt_t *os, void *baton, apr_pool_t *pool)$/;"	f	file:
+subcommand_info	./subversion/svnlook/main.c	/^  subcommand_info,$/;"	v	file:
+subcommand_info	./subversion/svnlook/main.c	/^subcommand_info (apr_getopt_t *os, void *baton, apr_pool_t *pool)$/;"	f	file:
+subcommand_list_dblogs	./subversion/svnadmin/main.c	/^  subcommand_list_dblogs,$/;"	v	file:
+subcommand_list_dblogs	./subversion/svnadmin/main.c	/^subcommand_list_dblogs (apr_getopt_t *os, void *baton, apr_pool_t *pool)$/;"	f	file:
+subcommand_list_unused_dblogs	./subversion/svnadmin/main.c	/^  subcommand_list_unused_dblogs,$/;"	v	file:
+subcommand_list_unused_dblogs	./subversion/svnadmin/main.c	/^subcommand_list_unused_dblogs (apr_getopt_t *os, void *baton, apr_pool_t *pool)$/;"	f	file:
+subcommand_load	./subversion/svnadmin/main.c	/^  subcommand_load,$/;"	v	file:
+subcommand_load	./subversion/svnadmin/main.c	/^subcommand_load (apr_getopt_t *os, void *baton, apr_pool_t *pool)$/;"	f	file:
+subcommand_log	./subversion/svnlook/main.c	/^  subcommand_log,$/;"	v	file:
+subcommand_log	./subversion/svnlook/main.c	/^subcommand_log (apr_getopt_t *os, void *baton, apr_pool_t *pool)$/;"	f	file:
+subcommand_lstxns	./subversion/svnadmin/main.c	/^  subcommand_lstxns,$/;"	v	file:
+subcommand_lstxns	./subversion/svnadmin/main.c	/^subcommand_lstxns (apr_getopt_t *os, void *baton, apr_pool_t *pool)$/;"	f	file:
+subcommand_pget	./subversion/svnlook/main.c	/^  subcommand_pget,$/;"	v	file:
+subcommand_pget	./subversion/svnlook/main.c	/^subcommand_pget (apr_getopt_t *os, void *baton, apr_pool_t *pool)$/;"	f	file:
+subcommand_plist	./subversion/svnlook/main.c	/^  subcommand_plist,$/;"	v	file:
+subcommand_plist	./subversion/svnlook/main.c	/^subcommand_plist (apr_getopt_t *os, void *baton, apr_pool_t *pool)$/;"	f	file:
+subcommand_recover	./subversion/svnadmin/main.c	/^  subcommand_recover,$/;"	v	file:
+subcommand_recover	./subversion/svnadmin/main.c	/^subcommand_recover (apr_getopt_t *os, void *baton, apr_pool_t *pool)$/;"	f	file:
+subcommand_rmtxns	./subversion/svnadmin/main.c	/^  subcommand_rmtxns,$/;"	v	file:
+subcommand_rmtxns	./subversion/svnadmin/main.c	/^subcommand_rmtxns (apr_getopt_t *os, void *baton, apr_pool_t *pool)$/;"	f	file:
+subcommand_setlog	./subversion/svnadmin/main.c	/^  subcommand_setlog,$/;"	v	file:
+subcommand_setlog	./subversion/svnadmin/main.c	/^subcommand_setlog (apr_getopt_t *os, void *baton, apr_pool_t *pool)$/;"	f	file:
+subcommand_tree	./subversion/svnlook/main.c	/^  subcommand_tree,$/;"	v	file:
+subcommand_tree	./subversion/svnlook/main.c	/^subcommand_tree (apr_getopt_t *os, void *baton, apr_pool_t *pool)$/;"	f	file:
+subcommand_uuid	./subversion/svnlook/main.c	/^  subcommand_uuid,$/;"	v	file:
+subcommand_uuid	./subversion/svnlook/main.c	/^subcommand_uuid (apr_getopt_t *os, void *baton, apr_pool_t *pool)$/;"	f	file:
+subcommand_verify	./subversion/svnadmin/main.c	/^  subcommand_verify;$/;"	v	file:
+subcommand_verify	./subversion/svnadmin/main.c	/^subcommand_verify (apr_getopt_t *os, void *baton, apr_pool_t *pool)$/;"	f	file:
+subcommand_youngest	./subversion/svnlook/main.c	/^  subcommand_youngest;$/;"	v	file:
+subcommand_youngest	./subversion/svnlook/main.c	/^subcommand_youngest (apr_getopt_t *os, void *baton, apr_pool_t *pool)$/;"	f	file:
+subctx	./subversion/libsvn_ra_dav/fetch.c	/^  void *subctx;$/;"	m	file:
+subdir_t	./subversion/libsvn_ra_dav/fetch.c	/^} subdir_t;$/;"	t	file:
+subpool	./subversion/libsvn_delta/svndiff.c	/^  apr_pool_t *subpool;$/;"	m	struct:decode_baton	file:
+subpool	./subversion/libsvn_ra_dav/log.c	/^  apr_pool_t *subpool;$/;"	m	struct:log_baton	file:
+substitute_and_verify	./subversion/tests/libsvn_wc/translate-test.c	/^substitute_and_verify (const char *test_name,$/;"	f	file:
+suppress_final_line	./subversion/clients/cmdline/notify.c	/^  svn_boolean_t suppress_final_line;$/;"	m	struct:notify_baton	file:
+sview_len	./subversion/include/svn_delta.h	/^  apr_size_t sview_len;$/;"	m	struct:svn_txdelta_window_t
+sview_len	./subversion/libsvn_delta/delta.h	/^  apr_size_t sview_len;         \/* Source view length in the combined window *\/$/;"	m	struct:svn_txdelta__compose_ctx_t
+sview_offset	./subversion/include/svn_delta.h	/^  svn_filesize_t sview_offset;$/;"	m	struct:svn_txdelta_window_t
+sview_offset	./subversion/libsvn_delta/delta.h	/^  svn_filesize_t sview_offset;       \/* Source view offset in the combined window *\/$/;"	m	struct:svn_txdelta__compose_ctx_t
+svn__atoui64	./subversion/include/svn_types.h	128;"	d
+svn_add9x	./packages/win32-innosetup/tools/svnpath/main.c	/^svn_add9x (char cPath[255])$/;"	f
+svn_addnt	./packages/win32-innosetup/tools/svnpath/main.c	/^svn_addnt (char cPathSvn[255])$/;"	f
+svn_auth_baton_t	./subversion/include/svn_auth.h	/^typedef struct svn_auth_baton_t svn_auth_baton_t;$/;"	t
+svn_auth_baton_t	./subversion/libsvn_subr/auth.c	/^struct svn_auth_baton_t$/;"	s	file:
+svn_auth_cred_simple_t	./subversion/include/svn_auth.h	/^typedef struct svn_auth_cred_simple_t$/;"	s
+svn_auth_cred_simple_t	./subversion/include/svn_auth.h	/^} svn_auth_cred_simple_t;$/;"	t
+svn_auth_cred_ssl_client_cert_pw_t	./subversion/include/svn_auth.h	/^typedef struct svn_auth_cred_ssl_client_cert_pw_t$/;"	s
+svn_auth_cred_ssl_client_cert_pw_t	./subversion/include/svn_auth.h	/^} svn_auth_cred_ssl_client_cert_pw_t;$/;"	t
+svn_auth_cred_ssl_client_cert_t	./subversion/include/svn_auth.h	/^typedef struct svn_auth_cred_ssl_client_cert_t$/;"	s
+svn_auth_cred_ssl_client_cert_t	./subversion/include/svn_auth.h	/^} svn_auth_cred_ssl_client_cert_t;$/;"	t
+svn_auth_cred_ssl_server_trust_t	./subversion/include/svn_auth.h	/^typedef struct svn_auth_cred_ssl_server_trust_t$/;"	s
+svn_auth_cred_ssl_server_trust_t	./subversion/include/svn_auth.h	/^} svn_auth_cred_ssl_server_trust_t;$/;"	t
+svn_auth_cred_username_t	./subversion/include/svn_auth.h	/^typedef struct svn_auth_cred_username_t$/;"	s
+svn_auth_cred_username_t	./subversion/include/svn_auth.h	/^} svn_auth_cred_username_t;$/;"	t
+svn_auth_first_credentials	./subversion/libsvn_subr/auth.c	/^svn_auth_first_credentials (void **credentials,$/;"	f
+svn_auth_get_parameter	./subversion/libsvn_subr/auth.c	/^svn_auth_get_parameter (svn_auth_baton_t *auth_baton,$/;"	f
+svn_auth_iterstate_t	./subversion/include/svn_auth.h	/^typedef struct svn_auth_iterstate_t svn_auth_iterstate_t;$/;"	t
+svn_auth_iterstate_t	./subversion/libsvn_subr/auth.c	/^struct svn_auth_iterstate_t$/;"	s	file:
+svn_auth_next_credentials	./subversion/libsvn_subr/auth.c	/^svn_auth_next_credentials (void **credentials,$/;"	f
+svn_auth_open	./subversion/libsvn_subr/auth.c	/^svn_auth_open (svn_auth_baton_t **auth_baton,$/;"	f
+svn_auth_provider_object_t	./subversion/include/svn_auth.h	/^typedef struct svn_auth_provider_object_t$/;"	s
+svn_auth_provider_object_t	./subversion/include/svn_auth.h	/^} svn_auth_provider_object_t;$/;"	t
+svn_auth_provider_t	./subversion/include/svn_auth.h	/^typedef struct svn_auth_provider_t$/;"	s
+svn_auth_provider_t	./subversion/include/svn_auth.h	/^} svn_auth_provider_t;$/;"	t
+svn_auth_save_credentials	./subversion/libsvn_subr/auth.c	/^svn_auth_save_credentials (svn_auth_iterstate_t *state,$/;"	f
+svn_auth_set_parameter	./subversion/libsvn_subr/auth.c	/^svn_auth_set_parameter (svn_auth_baton_t *auth_baton,$/;"	f
+svn_auth_simple_prompt_func_t	./subversion/include/svn_auth.h	/^(*svn_auth_simple_prompt_func_t) (svn_auth_cred_simple_t **cred,$/;"	t
+svn_auth_ssl_client_cert_prompt_func_t	./subversion/include/svn_auth.h	/^typedef svn_error_t *(*svn_auth_ssl_client_cert_prompt_func_t) ($/;"	t
+svn_auth_ssl_client_cert_pw_prompt_func_t	./subversion/include/svn_auth.h	/^typedef svn_error_t *(*svn_auth_ssl_client_cert_pw_prompt_func_t) ($/;"	t
+svn_auth_ssl_server_cert_info_t	./subversion/include/svn_auth.h	/^typedef struct svn_auth_ssl_server_cert_info_t $/;"	s
+svn_auth_ssl_server_cert_info_t	./subversion/include/svn_auth.h	/^} svn_auth_ssl_server_cert_info_t;$/;"	t
+svn_auth_ssl_server_trust_prompt_func_t	./subversion/include/svn_auth.h	/^typedef svn_error_t *(*svn_auth_ssl_server_trust_prompt_func_t) ($/;"	t
+svn_auth_username_prompt_func_t	./subversion/include/svn_auth.h	/^(*svn_auth_username_prompt_func_t) (svn_auth_cred_username_t **cred,$/;"	t
+svn_base64_decode	./subversion/libsvn_subr/svn_base64.c	/^svn_base64_decode (svn_stream_t *output, apr_pool_t *pool)$/;"	f
+svn_base64_decode_string	./subversion/libsvn_subr/svn_base64.c	/^svn_base64_decode_string (const svn_string_t *str, apr_pool_t *pool)$/;"	f
+svn_base64_encode	./subversion/libsvn_subr/svn_base64.c	/^svn_base64_encode (svn_stream_t *output, apr_pool_t *pool)$/;"	f
+svn_base64_encode_string	./subversion/libsvn_subr/svn_base64.c	/^svn_base64_encode_string (const svn_string_t *str, apr_pool_t *pool)$/;"	f
+svn_base64_from_md5	./subversion/libsvn_subr/svn_base64.c	/^svn_base64_from_md5 (unsigned char digest[], apr_pool_t *pool)$/;"	f
+svn_boolean_t	./subversion/include/svn_types.h	/^typedef int svn_boolean_t;$/;"	t
+svn_cancel_func_t	./subversion/include/svn_types.h	/^typedef svn_error_t *(*svn_cancel_func_t) (void *cancel_baton);$/;"	t
+svn_categorize_props	./subversion/libsvn_subr/sorts.c	/^svn_categorize_props (const apr_array_header_t *proplist,$/;"	f
+svn_cl__add	./subversion/clients/cmdline/add-cmd.c	/^svn_cl__add (apr_getopt_t *os,$/;"	f
+svn_cl__add	./subversion/clients/cmdline/cl.h	/^  svn_cl__add,$/;"	v
+svn_cl__ancestor_path_opt	./subversion/clients/cmdline/cl.h	/^  svn_cl__ancestor_path_opt = SVN_OPT_FIRST_LONGOPT_ID,$/;"	e
+svn_cl__auth_password_opt	./subversion/clients/cmdline/cl.h	/^  svn_cl__auth_password_opt,$/;"	e
+svn_cl__auth_simple_prompt	./subversion/clients/cmdline/prompt.c	/^svn_cl__auth_simple_prompt (svn_auth_cred_simple_t **cred_p,$/;"	f
+svn_cl__auth_ssl_client_cert_prompt	./subversion/clients/cmdline/prompt.c	/^svn_cl__auth_ssl_client_cert_prompt (svn_auth_cred_ssl_client_cert_t **cred_p,$/;"	f
+svn_cl__auth_ssl_client_cert_pw_prompt	./subversion/clients/cmdline/prompt.c	/^svn_cl__auth_ssl_client_cert_pw_prompt ($/;"	f
+svn_cl__auth_ssl_server_trust_prompt	./subversion/clients/cmdline/prompt.c	/^svn_cl__auth_ssl_server_trust_prompt ($/;"	f
+svn_cl__auth_username_opt	./subversion/clients/cmdline/cl.h	/^  svn_cl__auth_username_opt,$/;"	e
+svn_cl__auth_username_prompt	./subversion/clients/cmdline/prompt.c	/^svn_cl__auth_username_prompt (svn_auth_cred_username_t **cred_p,$/;"	f
+svn_cl__autoprops_opt	./subversion/clients/cmdline/cl.h	/^  svn_cl__autoprops_opt,$/;"	e
+svn_cl__blame	./subversion/clients/cmdline/blame-cmd.c	/^svn_cl__blame (apr_getopt_t *os,$/;"	f
+svn_cl__blame	./subversion/clients/cmdline/cl.h	/^  svn_cl__blame,$/;"	v
+svn_cl__cat	./subversion/clients/cmdline/cat-cmd.c	/^svn_cl__cat (apr_getopt_t *os,$/;"	f
+svn_cl__cat	./subversion/clients/cmdline/cl.h	/^  svn_cl__cat;$/;"	v
+svn_cl__check_cancel	./subversion/clients/cmdline/main.c	/^svn_cl__check_cancel (void *baton)$/;"	f
+svn_cl__checkout	./subversion/clients/cmdline/checkout-cmd.c	/^svn_cl__checkout (apr_getopt_t *os,$/;"	f
+svn_cl__checkout	./subversion/clients/cmdline/cl.h	/^  svn_cl__checkout,$/;"	v
+svn_cl__cleanup	./subversion/clients/cmdline/cl.h	/^  svn_cl__cleanup,$/;"	v
+svn_cl__cleanup	./subversion/clients/cmdline/cleanup-cmd.c	/^svn_cl__cleanup (apr_getopt_t *os,$/;"	f
+svn_cl__cleanup_log_msg	./subversion/clients/cmdline/util.c	/^svn_cl__cleanup_log_msg (void *log_msg_baton,$/;"	f
+svn_cl__cmd_baton_t	./subversion/clients/cmdline/cl.h	/^} svn_cl__cmd_baton_t;$/;"	t
+svn_cl__cmd_table	./subversion/clients/cmdline/main.c	/^const svn_opt_subcommand_desc_t svn_cl__cmd_table[] =$/;"	v
+svn_cl__commit	./subversion/clients/cmdline/cl.h	/^  svn_cl__commit,$/;"	v
+svn_cl__commit	./subversion/clients/cmdline/commit-cmd.c	/^svn_cl__commit (apr_getopt_t *os,$/;"	f
+svn_cl__config_dir_opt	./subversion/clients/cmdline/cl.h	/^  svn_cl__config_dir_opt,$/;"	e
+svn_cl__copy	./subversion/clients/cmdline/cl.h	/^  svn_cl__copy,$/;"	v
+svn_cl__copy	./subversion/clients/cmdline/copy-cmd.c	/^svn_cl__copy (apr_getopt_t *os,$/;"	f
+svn_cl__delete	./subversion/clients/cmdline/cl.h	/^  svn_cl__delete,$/;"	v
+svn_cl__delete	./subversion/clients/cmdline/delete-cmd.c	/^svn_cl__delete (apr_getopt_t *os,$/;"	f
+svn_cl__diff	./subversion/clients/cmdline/cl.h	/^  svn_cl__diff,$/;"	v
+svn_cl__diff	./subversion/clients/cmdline/diff-cmd.c	/^svn_cl__diff (apr_getopt_t *os,$/;"	f
+svn_cl__diff_cmd_opt	./subversion/clients/cmdline/cl.h	/^  svn_cl__diff_cmd_opt,$/;"	e
+svn_cl__dry_run_opt	./subversion/clients/cmdline/cl.h	/^  svn_cl__dry_run_opt,$/;"	e
+svn_cl__edit_externally	./subversion/clients/cmdline/util.c	/^svn_cl__edit_externally (const char **edited_contents \/* UTF-8! *\/,$/;"	f
+svn_cl__editor_cmd_opt	./subversion/clients/cmdline/cl.h	/^  svn_cl__editor_cmd_opt,$/;"	e
+svn_cl__encoding_opt	./subversion/clients/cmdline/cl.h	/^  svn_cl__encoding_opt,$/;"	e
+svn_cl__export	./subversion/clients/cmdline/cl.h	/^  svn_cl__export,$/;"	v
+svn_cl__export	./subversion/clients/cmdline/export-cmd.c	/^svn_cl__export (apr_getopt_t *os,$/;"	f
+svn_cl__force_log_opt	./subversion/clients/cmdline/cl.h	/^  svn_cl__force_log_opt,$/;"	e
+svn_cl__force_opt	./subversion/clients/cmdline/cl.h	/^  svn_cl__force_opt,$/;"	e
+svn_cl__get_log_message	./subversion/clients/cmdline/util.c	/^svn_cl__get_log_message (const char **log_msg,$/;"	f
+svn_cl__get_notifier	./subversion/clients/cmdline/notify.c	/^svn_cl__get_notifier (svn_wc_notify_func_t *notify_func_p,$/;"	f
+svn_cl__help	./subversion/clients/cmdline/cl.h	/^  svn_cl__help,$/;"	v
+svn_cl__help	./subversion/clients/cmdline/help-cmd.c	/^svn_cl__help (apr_getopt_t *os,$/;"	f
+svn_cl__help_footer	./subversion/clients/cmdline/help-cmd.c	/^const char svn_cl__help_footer[] =$/;"	v
+svn_cl__help_header	./subversion/clients/cmdline/help-cmd.c	/^const char svn_cl__help_header[] =$/;"	v
+svn_cl__ignore_ancestry_opt	./subversion/clients/cmdline/cl.h	/^  svn_cl__ignore_ancestry_opt,$/;"	e
+svn_cl__import	./subversion/clients/cmdline/cl.h	/^  svn_cl__import,$/;"	v
+svn_cl__import	./subversion/clients/cmdline/import-cmd.c	/^svn_cl__import (apr_getopt_t *os,$/;"	f
+svn_cl__incremental_opt	./subversion/clients/cmdline/cl.h	/^  svn_cl__incremental_opt,$/;"	e
+svn_cl__info	./subversion/clients/cmdline/cl.h	/^  svn_cl__info,$/;"	v
+svn_cl__info	./subversion/clients/cmdline/info-cmd.c	/^svn_cl__info (apr_getopt_t *os,$/;"	f
+svn_cl__info_print_time	./subversion/clients/cmdline/info-cmd.c	/^svn_cl__info_print_time (apr_time_t atime,$/;"	f	file:
+svn_cl__log	./subversion/clients/cmdline/cl.h	/^  svn_cl__log,$/;"	v
+svn_cl__log	./subversion/clients/cmdline/log-cmd.c	/^svn_cl__log (apr_getopt_t *os,$/;"	f
+svn_cl__longopt_t	./subversion/clients/cmdline/cl.h	/^} svn_cl__longopt_t;$/;"	t
+svn_cl__ls	./subversion/clients/cmdline/cl.h	/^  svn_cl__ls,$/;"	v
+svn_cl__ls	./subversion/clients/cmdline/ls-cmd.c	/^svn_cl__ls (apr_getopt_t *os,$/;"	f
+svn_cl__make_log_msg_baton	./subversion/clients/cmdline/util.c	/^svn_cl__make_log_msg_baton (void **baton,$/;"	f
+svn_cl__may_need_force	./subversion/clients/cmdline/delete-cmd.c	/^svn_cl__may_need_force (svn_error_t *err)$/;"	f
+svn_cl__merge	./subversion/clients/cmdline/cl.h	/^  svn_cl__merge,$/;"	v
+svn_cl__merge	./subversion/clients/cmdline/merge-cmd.c	/^svn_cl__merge (apr_getopt_t *os,$/;"	f
+svn_cl__merge_cmd_opt	./subversion/clients/cmdline/cl.h	/^  svn_cl__merge_cmd_opt,$/;"	e
+svn_cl__mkdir	./subversion/clients/cmdline/cl.h	/^  svn_cl__mkdir,$/;"	v
+svn_cl__mkdir	./subversion/clients/cmdline/mkdir-cmd.c	/^svn_cl__mkdir (apr_getopt_t *os,$/;"	f
+svn_cl__move	./subversion/clients/cmdline/cl.h	/^  svn_cl__move,$/;"	v
+svn_cl__move	./subversion/clients/cmdline/move-cmd.c	/^svn_cl__move (apr_getopt_t *os,$/;"	f
+svn_cl__new_cmd_opt	./subversion/clients/cmdline/cl.h	/^  svn_cl__new_cmd_opt,$/;"	e
+svn_cl__no_auth_cache_opt	./subversion/clients/cmdline/cl.h	/^  svn_cl__no_auth_cache_opt,$/;"	e
+svn_cl__no_autoprops_opt	./subversion/clients/cmdline/cl.h	/^  svn_cl__no_autoprops_opt,$/;"	e
+svn_cl__no_diff_deleted	./subversion/clients/cmdline/cl.h	/^  svn_cl__no_diff_deleted,$/;"	e
+svn_cl__no_ignore_opt	./subversion/clients/cmdline/cl.h	/^  svn_cl__no_ignore_opt,$/;"	e
+svn_cl__non_interactive_opt	./subversion/clients/cmdline/cl.h	/^  svn_cl__non_interactive_opt,$/;"	e
+svn_cl__notice_ancestry_opt	./subversion/clients/cmdline/cl.h	/^  svn_cl__notice_ancestry_opt,$/;"	e
+svn_cl__old_cmd_opt	./subversion/clients/cmdline/cl.h	/^  svn_cl__old_cmd_opt,$/;"	e
+svn_cl__opt_state_t	./subversion/clients/cmdline/cl.h	/^typedef struct svn_cl__opt_state_t$/;"	s
+svn_cl__opt_state_t	./subversion/clients/cmdline/cl.h	/^} svn_cl__opt_state_t;$/;"	t
+svn_cl__options	./subversion/clients/cmdline/main.c	/^const apr_getopt_option_t svn_cl__options[] =$/;"	v
+svn_cl__print_commit_info	./subversion/clients/cmdline/util.c	/^svn_cl__print_commit_info (svn_client_commit_info_t *commit_info)$/;"	f
+svn_cl__print_prop_hash	./subversion/clients/cmdline/props.c	/^svn_cl__print_prop_hash (apr_hash_t *prop_hash,$/;"	f
+svn_cl__print_status	./subversion/clients/cmdline/status.c	/^svn_cl__print_status (const char *path,$/;"	f
+svn_cl__prompt_user	./subversion/clients/cmdline/prompt.c	/^svn_cl__prompt_user (const char **result,$/;"	f
+svn_cl__propdel	./subversion/clients/cmdline/cl.h	/^  svn_cl__propdel,$/;"	v
+svn_cl__propdel	./subversion/clients/cmdline/propdel-cmd.c	/^svn_cl__propdel (apr_getopt_t *os,$/;"	f
+svn_cl__propedit	./subversion/clients/cmdline/cl.h	/^  svn_cl__propedit,$/;"	v
+svn_cl__propedit	./subversion/clients/cmdline/propedit-cmd.c	/^svn_cl__propedit (apr_getopt_t *os,$/;"	f
+svn_cl__propget	./subversion/clients/cmdline/cl.h	/^  svn_cl__propget,$/;"	v
+svn_cl__propget	./subversion/clients/cmdline/propget-cmd.c	/^svn_cl__propget (apr_getopt_t *os,$/;"	f
+svn_cl__proplist	./subversion/clients/cmdline/cl.h	/^  svn_cl__proplist,$/;"	v
+svn_cl__proplist	./subversion/clients/cmdline/proplist-cmd.c	/^svn_cl__proplist (apr_getopt_t *os,$/;"	f
+svn_cl__propset	./subversion/clients/cmdline/cl.h	/^  svn_cl__propset,$/;"	v
+svn_cl__propset	./subversion/clients/cmdline/propset-cmd.c	/^svn_cl__propset (apr_getopt_t *os,$/;"	f
+svn_cl__relocate_opt	./subversion/clients/cmdline/cl.h	/^  svn_cl__relocate_opt,$/;"	e
+svn_cl__resolved	./subversion/clients/cmdline/cl.h	/^  svn_cl__resolved,$/;"	v
+svn_cl__resolved	./subversion/clients/cmdline/resolved-cmd.c	/^svn_cl__resolved (apr_getopt_t *os,$/;"	f
+svn_cl__revert	./subversion/clients/cmdline/cl.h	/^  svn_cl__revert,$/;"	v
+svn_cl__revert	./subversion/clients/cmdline/revert-cmd.c	/^svn_cl__revert (apr_getopt_t *os,$/;"	f
+svn_cl__revprop_no_rev_error	./subversion/clients/cmdline/props.c	/^svn_cl__revprop_no_rev_error (apr_pool_t *pool)$/;"	f
+svn_cl__revprop_opt	./subversion/clients/cmdline/cl.h	/^  svn_cl__revprop_opt,$/;"	e
+svn_cl__status	./subversion/clients/cmdline/cl.h	/^  svn_cl__status,$/;"	v
+svn_cl__status	./subversion/clients/cmdline/status-cmd.c	/^svn_cl__status (apr_getopt_t *os,$/;"	f
+svn_cl__stop_on_copy_opt	./subversion/clients/cmdline/cl.h	/^  svn_cl__stop_on_copy_opt,$/;"	e
+svn_cl__strict_opt	./subversion/clients/cmdline/cl.h	/^  svn_cl__strict_opt,$/;"	e
+svn_cl__switch	./subversion/clients/cmdline/cl.h	/^  svn_cl__switch,$/;"	v
+svn_cl__switch	./subversion/clients/cmdline/switch-cmd.c	/^svn_cl__switch (apr_getopt_t *os,$/;"	f
+svn_cl__targets_opt	./subversion/clients/cmdline/cl.h	/^  svn_cl__targets_opt,$/;"	e
+svn_cl__update	./subversion/clients/cmdline/cl.h	/^  svn_cl__update,$/;"	v
+svn_cl__update	./subversion/clients/cmdline/update-cmd.c	/^svn_cl__update (apr_getopt_t *os,$/;"	f
+svn_cl__version_opt	./subversion/clients/cmdline/cl.h	/^  svn_cl__version_opt,$/;"	e
+svn_cl__xml_opt	./subversion/clients/cmdline/cl.h	/^  svn_cl__xml_opt$/;"	e
+svn_client__callback_baton_t	./subversion/libsvn_client/client.h	/^} svn_client__callback_baton_t;$/;"	t
+svn_client__can_delete	./subversion/libsvn_client/delete.c	/^svn_client__can_delete (const char *path,$/;"	f
+svn_client__checkout_internal	./subversion/libsvn_client/checkout.c	/^svn_client__checkout_internal (svn_revnum_t *result_rev,$/;"	f
+svn_client__commit_callback	./subversion/libsvn_client/commit_util.c	/^svn_error_t *svn_client__commit_callback (svn_revnum_t revision,$/;"	f
+svn_client__commit_get_baton	./subversion/libsvn_client/commit_util.c	/^svn_error_t *svn_client__commit_get_baton (void **baton,$/;"	f
+svn_client__compare_revisions	./subversion/libsvn_client/revisions.c	/^svn_client__compare_revisions (svn_opt_revision_t *revision1,$/;"	f
+svn_client__condense_commit_items	./subversion/libsvn_client/commit_util.c	/^svn_client__condense_commit_items (const char **base_url,$/;"	f
+svn_client__do_commit	./subversion/libsvn_client/commit_util.c	/^svn_client__do_commit (const char *base_url,$/;"	f
+svn_client__do_external_status	./subversion/libsvn_client/externals.c	/^svn_client__do_external_status (svn_wc_traversal_info_t *traversal_info,$/;"	f
+svn_client__fetch_externals	./subversion/libsvn_client/externals.c	/^svn_client__fetch_externals (apr_hash_t *externals,$/;"	f
+svn_client__get_auto_props	./subversion/libsvn_client/add.c	/^svn_client__get_auto_props (apr_hash_t **properties,$/;"	f
+svn_client__get_copy_committables	./subversion/libsvn_client/commit_util.c	/^svn_client__get_copy_committables (apr_hash_t **committables,$/;"	f
+svn_client__get_diff_editor	./subversion/libsvn_client/repos_diff.c	/^svn_client__get_diff_editor (const char *target,$/;"	f
+svn_client__get_revision_number	./subversion/libsvn_client/revisions.c	/^svn_client__get_revision_number (svn_revnum_t *revnum,$/;"	f
+svn_client__handle_externals	./subversion/libsvn_client/externals.c	/^svn_client__handle_externals (svn_wc_traversal_info_t *traversal_info,$/;"	f
+svn_client__harvest_committables	./subversion/libsvn_client/commit_util.c	/^svn_client__harvest_committables (apr_hash_t **committables,$/;"	f
+svn_client__open_ra_session	./subversion/libsvn_client/ra.c	/^svn_client__open_ra_session (void **session_baton,$/;"	f
+svn_client__revision_is_local	./subversion/libsvn_client/revisions.c	/^svn_client__revision_is_local (const svn_opt_revision_t *revision)$/;"	f
+svn_client__sort_commit_item_urls	./subversion/libsvn_client/commit_util.c	/^int svn_client__sort_commit_item_urls (const void *a, const void *b)$/;"	f
+svn_client__update_internal	./subversion/libsvn_client/update.c	/^svn_client__update_internal (svn_revnum_t *result_rev,$/;"	f
+svn_client__wc_delete	./subversion/libsvn_client/delete.c	/^svn_client__wc_delete (const char *path,$/;"	f
+svn_client_add	./subversion/libsvn_client/add.c	/^svn_client_add (const char *path, $/;"	f
+svn_client_blame	./subversion/libsvn_client/blame.c	/^svn_client_blame (const char *target,$/;"	f
+svn_client_blame_receiver_t	./subversion/include/svn_client.h	/^(*svn_client_blame_receiver_t) (void *baton,$/;"	t
+svn_client_cat	./subversion/libsvn_client/cat.c	/^svn_client_cat (svn_stream_t *out,$/;"	f
+svn_client_checkout	./subversion/libsvn_client/checkout.c	/^svn_client_checkout (svn_revnum_t *result_rev,$/;"	f
+svn_client_cleanup	./subversion/libsvn_client/cleanup.c	/^svn_client_cleanup (const char *dir,$/;"	f
+svn_client_commit	./subversion/libsvn_client/commit.c	/^svn_client_commit (svn_client_commit_info_t **commit_info,$/;"	f
+svn_client_commit_info_t	./subversion/include/svn_client.h	/^typedef struct svn_client_commit_info_t$/;"	s
+svn_client_commit_info_t	./subversion/include/svn_client.h	/^} svn_client_commit_info_t;$/;"	t
+svn_client_commit_item_t	./subversion/include/svn_client.h	/^typedef struct svn_client_commit_item_t$/;"	s
+svn_client_commit_item_t	./subversion/include/svn_client.h	/^} svn_client_commit_item_t;$/;"	t
+svn_client_copy	./subversion/libsvn_client/copy.c	/^svn_client_copy (svn_client_commit_info_t **commit_info,$/;"	f
+svn_client_create_context	./subversion/libsvn_client/ctx.c	/^svn_client_create_context (svn_client_ctx_t **ctx,$/;"	f
+svn_client_ctx_t	./subversion/include/svn_client.h	/^typedef struct svn_client_ctx_t$/;"	s
+svn_client_ctx_t	./subversion/include/svn_client.h	/^} svn_client_ctx_t;$/;"	t
+svn_client_delete	./subversion/libsvn_client/delete.c	/^svn_client_delete (svn_client_commit_info_t **commit_info,$/;"	f
+svn_client_diff	./subversion/libsvn_client/diff.c	/^svn_client_diff (const apr_array_header_t *options,$/;"	f
+svn_client_export	./subversion/libsvn_client/export.c	/^svn_client_export (svn_revnum_t *result_rev,$/;"	f
+svn_client_get_commit_log_t	./subversion/include/svn_client.h	/^(*svn_client_get_commit_log_t) (const char **log_msg,$/;"	t
+svn_client_get_simple_prompt_provider	./subversion/libsvn_client/simple_providers.c	/^svn_client_get_simple_prompt_provider ($/;"	f
+svn_client_get_simple_provider	./subversion/libsvn_client/simple_providers.c	/^svn_client_get_simple_provider (svn_auth_provider_object_t **provider,$/;"	f
+svn_client_get_ssl_client_cert_file_provider	./subversion/libsvn_client/ssl_client_cert_providers.c	/^svn_client_get_ssl_client_cert_file_provider ($/;"	f
+svn_client_get_ssl_client_cert_prompt_provider	./subversion/libsvn_client/ssl_client_cert_providers.c	/^svn_client_get_ssl_client_cert_prompt_provider ($/;"	f
+svn_client_get_ssl_client_cert_pw_file_provider	./subversion/libsvn_client/ssl_client_cert_pw_providers.c	/^svn_client_get_ssl_client_cert_pw_file_provider ($/;"	f
+svn_client_get_ssl_client_cert_pw_prompt_provider	./subversion/libsvn_client/ssl_client_cert_pw_providers.c	/^void svn_client_get_ssl_client_cert_pw_prompt_provider ($/;"	f
+svn_client_get_ssl_server_trust_file_provider	./subversion/libsvn_client/ssl_server_trust_providers.c	/^svn_client_get_ssl_server_trust_file_provider ($/;"	f
+svn_client_get_ssl_server_trust_prompt_provider	./subversion/libsvn_client/ssl_server_trust_providers.c	/^svn_client_get_ssl_server_trust_prompt_provider ($/;"	f
+svn_client_get_username_prompt_provider	./subversion/libsvn_client/username_providers.c	/^svn_client_get_username_prompt_provider ($/;"	f
+svn_client_get_username_provider	./subversion/libsvn_client/username_providers.c	/^svn_client_get_username_provider (svn_auth_provider_object_t **provider,$/;"	f
+svn_client_import	./subversion/libsvn_client/commit.c	/^svn_client_import (svn_client_commit_info_t **commit_info,$/;"	f
+svn_client_log	./subversion/libsvn_client/log.c	/^svn_client_log (const apr_array_header_t *targets,$/;"	f
+svn_client_ls	./subversion/libsvn_client/ls.c	/^svn_client_ls (apr_hash_t **dirents,$/;"	f
+svn_client_merge	./subversion/libsvn_client/diff.c	/^svn_client_merge (const char *source1,$/;"	f
+svn_client_mkdir	./subversion/libsvn_client/add.c	/^svn_client_mkdir (svn_client_commit_info_t **commit_info,$/;"	f
+svn_client_move	./subversion/libsvn_client/copy.c	/^svn_client_move (svn_client_commit_info_t **commit_info,$/;"	f
+svn_client_options	./subversion/mod_dav_svn/dav_svn.h	/^  const char *svn_client_options;$/;"	m	struct:dav_resource_private
+svn_client_propget	./subversion/libsvn_client/prop_commands.c	/^svn_client_propget (apr_hash_t **props,$/;"	f
+svn_client_proplist	./subversion/libsvn_client/prop_commands.c	/^svn_client_proplist (apr_array_header_t **props,$/;"	f
+svn_client_proplist_item_t	./subversion/include/svn_client.h	/^typedef struct svn_client_proplist_item_t$/;"	s
+svn_client_proplist_item_t	./subversion/include/svn_client.h	/^} svn_client_proplist_item_t;$/;"	t
+svn_client_propset	./subversion/libsvn_client/prop_commands.c	/^svn_client_propset (const char *propname,$/;"	f
+svn_client_relocate	./subversion/libsvn_client/relocate.c	/^svn_client_relocate (const char *path,$/;"	f
+svn_client_resolved	./subversion/libsvn_client/resolved.c	/^svn_client_resolved (const char *path,$/;"	f
+svn_client_revert	./subversion/libsvn_client/revert.c	/^svn_client_revert (const apr_array_header_t *paths,$/;"	f
+svn_client_revprop_get	./subversion/libsvn_client/prop_commands.c	/^svn_client_revprop_get (const char *propname,$/;"	f
+svn_client_revprop_list	./subversion/libsvn_client/prop_commands.c	/^svn_client_revprop_list (apr_hash_t **props,$/;"	f
+svn_client_revprop_set	./subversion/libsvn_client/prop_commands.c	/^svn_client_revprop_set (const char *propname,$/;"	f
+svn_client_status	./subversion/libsvn_client/status.c	/^svn_client_status (svn_revnum_t *result_rev,$/;"	f
+svn_client_switch	./subversion/libsvn_client/switch.c	/^svn_client_switch (svn_revnum_t *result_rev,$/;"	f
+svn_client_update	./subversion/libsvn_client/update.c	/^svn_client_update (svn_revnum_t *result_rev,$/;"	f
+svn_client_url_from_path	./subversion/libsvn_client/url.c	/^svn_client_url_from_path (const char **url,$/;"	f
+svn_client_uuid_from_path	./subversion/libsvn_client/ra.c	/^svn_client_uuid_from_path (const char **uuid,$/;"	f
+svn_client_uuid_from_url	./subversion/libsvn_client/ra.c	/^svn_client_uuid_from_url (const char **uuid,$/;"	f
+svn_close_fn_t	./subversion/include/svn_io.h	/^typedef svn_error_t *(*svn_close_fn_t) (void *baton);$/;"	t
+svn_cmdline_cstring_from_utf8	./subversion/libsvn_subr/cmdline.c	/^svn_cmdline_cstring_from_utf8 (const char **dest,$/;"	f
+svn_cmdline_cstring_from_utf8_fuzzy	./subversion/libsvn_subr/cmdline.c	/^svn_cmdline_cstring_from_utf8_fuzzy (const char *src,$/;"	f
+svn_cmdline_cstring_to_utf8	./subversion/libsvn_subr/cmdline.c	/^svn_cmdline_cstring_to_utf8 (const char **dest,$/;"	f
+svn_cmdline_init	./subversion/libsvn_subr/cmdline.c	/^svn_cmdline_init (const char *progname, FILE *error_stream)$/;"	f
+svn_cmdline_path_local_style_from_utf8	./subversion/libsvn_subr/cmdline.c	/^svn_cmdline_path_local_style_from_utf8 (const char **dest,$/;"	f
+svn_commit_callback_t	./subversion/include/svn_types.h	/^typedef svn_error_t * (*svn_commit_callback_t) ($/;"	t
+svn_config__enumerate_sections	./subversion/libsvn_subr/config.c	/^svn_config__enumerate_sections (svn_config_t *cfg,$/;"	f
+svn_config__open_file	./subversion/libsvn_subr/config_file.c	/^svn_config__open_file (FILE **pfile,$/;"	f
+svn_config__open_file	./subversion/libsvn_subr/config_win.c	/^svn_config__open_file (FILE **pfile,$/;"	f
+svn_config__parse_file	./subversion/libsvn_subr/config_file.c	/^svn_config__parse_file (svn_config_t *cfg, const char *file,$/;"	f
+svn_config__parse_registry	./subversion/libsvn_subr/config_win.c	/^svn_config__parse_registry (svn_config_t *cfg, const char *file,$/;"	f
+svn_config__section_enumerator_t	./subversion/libsvn_subr/config_impl.h	/^typedef svn_boolean_t (*svn_config__section_enumerator_t)$/;"	t
+svn_config__sys_config_path	./subversion/libsvn_subr/config_file.c	/^svn_config__sys_config_path (const char **path_p,$/;"	f
+svn_config__user_config_path	./subversion/libsvn_subr/config_file.c	/^svn_config__user_config_path (const char *config_dir,$/;"	f
+svn_config__win_config_path	./subversion/libsvn_subr/config_win.c	/^svn_config__win_config_path (const char **folder, int system_path,$/;"	f
+svn_config_ensure	./subversion/libsvn_subr/config_file.c	/^svn_config_ensure (const char *config_dir, apr_pool_t *pool)$/;"	f
+svn_config_enumerate	./subversion/libsvn_subr/config.c	/^svn_config_enumerate (svn_config_t *cfg, const char *section,$/;"	f
+svn_config_enumerator_t	./subversion/include/svn_config.h	/^typedef svn_boolean_t (*svn_config_enumerator_t)$/;"	t
+svn_config_find_group	./subversion/libsvn_subr/config.c	/^const char *svn_config_find_group (svn_config_t *cfg, const char *key,$/;"	f
+svn_config_get	./subversion/libsvn_subr/config.c	/^svn_config_get (svn_config_t *cfg, const char **valuep,$/;"	f
+svn_config_get_bool	./subversion/libsvn_subr/config.c	/^svn_config_get_bool (svn_config_t *cfg, svn_boolean_t *valuep,$/;"	f
+svn_config_get_config	./subversion/libsvn_subr/config.c	/^svn_config_get_config (apr_hash_t **cfg_hash,$/;"	f
+svn_config_get_server_setting	./subversion/libsvn_subr/config.c	/^svn_config_get_server_setting (svn_config_t *cfg,$/;"	f
+svn_config_get_server_setting_int	./subversion/libsvn_subr/config.c	/^svn_config_get_server_setting_int (svn_config_t *cfg,$/;"	f
+svn_config_merge	./subversion/libsvn_subr/config.c	/^svn_config_merge (svn_config_t *cfg, const char *file,$/;"	f
+svn_config_read	./subversion/libsvn_subr/config.c	/^svn_config_read (svn_config_t **cfgp, const char *file,$/;"	f
+svn_config_read_auth_data	./subversion/libsvn_subr/config_auth.c	/^svn_config_read_auth_data (apr_hash_t **hash,$/;"	f
+svn_config_set	./subversion/libsvn_subr/config.c	/^svn_config_set (svn_config_t *cfg,$/;"	f
+svn_config_set_bool	./subversion/libsvn_subr/config.c	/^svn_config_set_bool (svn_config_t *cfg,$/;"	f
+svn_config_t	./subversion/include/svn_config.h	/^typedef struct svn_config_t svn_config_t;$/;"	t
+svn_config_t	./subversion/libsvn_subr/config_impl.h	/^struct svn_config_t$/;"	s
+svn_config_write_auth_data	./subversion/libsvn_subr/config_auth.c	/^svn_config_write_auth_data (apr_hash_t *hash,$/;"	f
+svn_cstring_match_glob_list	./subversion/libsvn_subr/svn_string.c	/^svn_boolean_t svn_cstring_match_glob_list (const char *str,$/;"	f
+svn_cstring_split	./subversion/libsvn_subr/svn_string.c	/^svn_cstring_split (const char *input,$/;"	f
+svn_cstring_split_append	./subversion/libsvn_subr/svn_string.c	/^svn_cstring_split_append (apr_array_header_t *array,$/;"	f
+svn_delta_action	./subversion/include/svn_delta.h	/^enum svn_delta_action {$/;"	g
+svn_delta_default_editor	./subversion/libsvn_delta/default_editor.c	/^svn_delta_default_editor (apr_pool_t *pool)$/;"	f
+svn_delta_editor_t	./subversion/include/svn_delta.h	/^typedef struct svn_delta_editor_t$/;"	s
+svn_delta_editor_t	./subversion/include/svn_delta.h	/^} svn_delta_editor_t;  $/;"	t
+svn_delta_get_cancellation_editor	./subversion/libsvn_delta/cancel.c	/^svn_delta_get_cancellation_editor (svn_cancel_func_t cancel_func,$/;"	f
+svn_delta_make_editor	./subversion/bindings/swig/swigutil_pl.c	/^void svn_delta_make_editor(svn_delta_editor_t **editor,$/;"	f
+svn_delta_noop_window_handler	./subversion/libsvn_delta/default_editor.c	/^svn_error_t *svn_delta_noop_window_handler (svn_txdelta_window_t *window,$/;"	f
+svn_delta_path_driver	./subversion/libsvn_delta/path_driver.c	/^svn_delta_path_driver (const svn_delta_editor_t *editor,$/;"	f
+svn_delta_path_driver_cb_func_t	./subversion/include/svn_delta.h	/^(*svn_delta_path_driver_cb_func_t) (void **dir_baton,$/;"	t
+svn_diff3__file_output_baton_t	./subversion/libsvn_diff/diff_file.c	/^typedef struct svn_diff3__file_output_baton_t$/;"	s	file:
+svn_diff3__file_output_baton_t	./subversion/libsvn_diff/diff_file.c	/^} svn_diff3__file_output_baton_t;$/;"	t	file:
+svn_diff3__file_output_common	./subversion/libsvn_diff/diff_file.c	/^svn_diff3__file_output_common(void *baton,$/;"	f	file:
+svn_diff3__file_output_conflict	./subversion/libsvn_diff/diff_file.c	/^svn_diff3__file_output_conflict(void *baton,$/;"	f	file:
+svn_diff3__file_output_diff_latest	./subversion/libsvn_diff/diff_file.c	/^svn_diff3__file_output_diff_latest(void *baton,$/;"	f	file:
+svn_diff3__file_output_diff_modified	./subversion/libsvn_diff/diff_file.c	/^svn_diff3__file_output_diff_modified(void *baton,$/;"	f	file:
+svn_diff3__file_output_hunk	./subversion/libsvn_diff/diff_file.c	/^svn_diff3__file_output_hunk(void *baton,$/;"	f	file:
+svn_diff3__file_output_line	./subversion/libsvn_diff/diff_file.c	/^svn_diff3__file_output_line(svn_diff3__file_output_baton_t *baton,$/;"	f	file:
+svn_diff3__file_output_normal	./subversion/libsvn_diff/diff_file.c	/^  svn_diff3__file_output_normal$/;"	e	enum:svn_diff3__file_output_type_e	file:
+svn_diff3__file_output_skip	./subversion/libsvn_diff/diff_file.c	/^  svn_diff3__file_output_skip,$/;"	e	enum:svn_diff3__file_output_type_e	file:
+svn_diff3__file_output_type_e	./subversion/libsvn_diff/diff_file.c	/^typedef enum svn_diff3__file_output_type_e$/;"	g	file:
+svn_diff3__file_output_type_e	./subversion/libsvn_diff/diff_file.c	/^} svn_diff3__file_output_type_e;$/;"	t	file:
+svn_diff3__file_output_vtable	./subversion/libsvn_diff/diff_file.c	/^static const svn_diff_output_fns_t svn_diff3__file_output_vtable =$/;"	v	file:
+svn_diff__adjust	./subversion/libsvn_diff/diff4.c	/^svn_diff__adjust(svn_diff_t *diff, svn_diff_t *adjust)$/;"	f	file:
+svn_diff__adler32	./subversion/libsvn_diff/util.c	/^svn_diff__adler32(apr_uint32_t checksum, const char *data, apr_size_t len)$/;"	f
+svn_diff__diff	./subversion/libsvn_diff/diff.c	/^svn_diff__diff(svn_diff__lcs_t *lcs,$/;"	f
+svn_diff__file_baton_t	./subversion/libsvn_diff/diff_file.c	/^typedef struct svn_diff__file_baton_t$/;"	s	file:
+svn_diff__file_baton_t	./subversion/libsvn_diff/diff_file.c	/^} svn_diff__file_baton_t;$/;"	t	file:
+svn_diff__file_datasource_close	./subversion/libsvn_diff/diff_file.c	/^svn_diff__file_datasource_close(void *baton,$/;"	f	file:
+svn_diff__file_datasource_get_next_token	./subversion/libsvn_diff/diff_file.c	/^svn_diff__file_datasource_get_next_token(apr_uint32_t *hash, void **token,$/;"	f	file:
+svn_diff__file_datasource_open	./subversion/libsvn_diff/diff_file.c	/^svn_diff__file_datasource_open(void *baton,$/;"	f	file:
+svn_diff__file_datasource_to_index	./subversion/libsvn_diff/diff_file.c	/^svn_diff__file_datasource_to_index(svn_diff_datasource_e datasource)$/;"	f	file:
+svn_diff__file_output_baton_t	./subversion/libsvn_diff/diff_file.c	/^typedef struct svn_diff__file_output_baton_t$/;"	s	file:
+svn_diff__file_output_baton_t	./subversion/libsvn_diff/diff_file.c	/^} svn_diff__file_output_baton_t;$/;"	t	file:
+svn_diff__file_output_unified_context	./subversion/libsvn_diff/diff_file.c	/^  svn_diff__file_output_unified_context,$/;"	e	enum:svn_diff__file_output_unified_type_e	file:
+svn_diff__file_output_unified_default_hdr	./subversion/libsvn_diff/diff_file.c	/^svn_diff__file_output_unified_default_hdr(apr_pool_t *pool,$/;"	f	file:
+svn_diff__file_output_unified_delete	./subversion/libsvn_diff/diff_file.c	/^  svn_diff__file_output_unified_delete,$/;"	e	enum:svn_diff__file_output_unified_type_e	file:
+svn_diff__file_output_unified_diff_modified	./subversion/libsvn_diff/diff_file.c	/^svn_diff__file_output_unified_diff_modified(void *baton,$/;"	f	file:
+svn_diff__file_output_unified_flush_hunk	./subversion/libsvn_diff/diff_file.c	/^svn_diff__file_output_unified_flush_hunk(svn_diff__file_output_baton_t *baton)$/;"	f	file:
+svn_diff__file_output_unified_insert	./subversion/libsvn_diff/diff_file.c	/^  svn_diff__file_output_unified_insert$/;"	e	enum:svn_diff__file_output_unified_type_e	file:
+svn_diff__file_output_unified_line	./subversion/libsvn_diff/diff_file.c	/^svn_diff__file_output_unified_line(svn_diff__file_output_baton_t *baton,$/;"	f	file:
+svn_diff__file_output_unified_skip	./subversion/libsvn_diff/diff_file.c	/^  svn_diff__file_output_unified_skip,$/;"	e	enum:svn_diff__file_output_unified_type_e	file:
+svn_diff__file_output_unified_type_e	./subversion/libsvn_diff/diff_file.c	/^typedef enum svn_diff__file_output_unified_type_e$/;"	g	file:
+svn_diff__file_output_unified_type_e	./subversion/libsvn_diff/diff_file.c	/^} svn_diff__file_output_unified_type_e;$/;"	t	file:
+svn_diff__file_output_unified_vtable	./subversion/libsvn_diff/diff_file.c	/^static const svn_diff_output_fns_t svn_diff__file_output_unified_vtable =$/;"	v	file:
+svn_diff__file_token_compare	./subversion/libsvn_diff/diff_file.c	/^svn_diff__file_token_compare(void *baton,$/;"	f	file:
+svn_diff__file_token_discard	./subversion/libsvn_diff/diff_file.c	/^svn_diff__file_token_discard(void *baton,$/;"	f	file:
+svn_diff__file_token_discard_all	./subversion/libsvn_diff/diff_file.c	/^svn_diff__file_token_discard_all(void *baton)$/;"	f	file:
+svn_diff__file_token_t	./subversion/libsvn_diff/diff_file.c	/^typedef struct svn_diff__file_token_t$/;"	s	file:
+svn_diff__file_token_t	./subversion/libsvn_diff/diff_file.c	/^} svn_diff__file_token_t;$/;"	t	file:
+svn_diff__file_vtable	./subversion/libsvn_diff/diff_file.c	/^static const svn_diff_fns_t svn_diff__file_vtable =$/;"	v	file:
+svn_diff__get_tokens	./subversion/libsvn_diff/token.c	/^svn_diff__get_tokens(svn_diff__position_t **position_list,$/;"	f
+svn_diff__lcs	./subversion/libsvn_diff/lcs.c	/^svn_diff__lcs(svn_diff__position_t *position_list1, \/* pointer to tail (ring) *\/$/;"	f
+svn_diff__lcs_reverse	./subversion/libsvn_diff/lcs.c	/^svn_diff__lcs_reverse(svn_diff__lcs_t *lcs)$/;"	f	file:
+svn_diff__lcs_t	./subversion/libsvn_diff/diff.h	/^struct svn_diff__lcs_t$/;"	s
+svn_diff__lcs_t	./subversion/libsvn_diff/diff.h	/^typedef struct svn_diff__lcs_t svn_diff__lcs_t;$/;"	t
+svn_diff__node_t	./subversion/libsvn_diff/diff.h	/^typedef struct svn_diff__node_t svn_diff__node_t;$/;"	t
+svn_diff__node_t	./subversion/libsvn_diff/token.c	/^struct svn_diff__node_t$/;"	s	file:
+svn_diff__position_t	./subversion/libsvn_diff/diff.h	/^struct svn_diff__position_t$/;"	s
+svn_diff__position_t	./subversion/libsvn_diff/diff.h	/^typedef struct svn_diff__position_t svn_diff__position_t;$/;"	t
+svn_diff__resolve_conflict	./subversion/libsvn_diff/diff3.c	/^svn_diff__resolve_conflict(svn_diff_t *hunk,$/;"	f
+svn_diff__snake	./subversion/libsvn_diff/lcs.c	/^svn_diff__snake(apr_off_t k,$/;"	f	file:
+svn_diff__snake_t	./subversion/libsvn_diff/lcs.c	/^struct svn_diff__snake_t$/;"	s	file:
+svn_diff__snake_t	./subversion/libsvn_diff/lcs.c	/^typedef struct svn_diff__snake_t svn_diff__snake_t;$/;"	t	file:
+svn_diff__tree_create	./subversion/libsvn_diff/token.c	/^svn_diff__tree_create(svn_diff__tree_t **tree, apr_pool_t *pool)$/;"	f
+svn_diff__tree_insert_token	./subversion/libsvn_diff/token.c	/^svn_diff__tree_insert_token(svn_diff__node_t **node, svn_diff__tree_t *tree,$/;"	f	file:
+svn_diff__tree_t	./subversion/libsvn_diff/diff.h	/^typedef struct svn_diff__tree_t svn_diff__tree_t;$/;"	t
+svn_diff__tree_t	./subversion/libsvn_diff/token.c	/^struct svn_diff__tree_t$/;"	s	file:
+svn_diff__type_common	./subversion/libsvn_diff/diff.h	/^  svn_diff__type_common,$/;"	e	enum:svn_diff__type_e
+svn_diff__type_conflict	./subversion/libsvn_diff/diff.h	/^  svn_diff__type_conflict$/;"	e	enum:svn_diff__type_e
+svn_diff__type_diff_common	./subversion/libsvn_diff/diff.h	/^  svn_diff__type_diff_common,$/;"	e	enum:svn_diff__type_e
+svn_diff__type_diff_latest	./subversion/libsvn_diff/diff.h	/^  svn_diff__type_diff_latest,$/;"	e	enum:svn_diff__type_e
+svn_diff__type_diff_modified	./subversion/libsvn_diff/diff.h	/^  svn_diff__type_diff_modified,$/;"	e	enum:svn_diff__type_e
+svn_diff__type_e	./subversion/libsvn_diff/diff.h	/^typedef enum svn_diff__type_e$/;"	g
+svn_diff__type_e	./subversion/libsvn_diff/diff.h	/^} svn_diff__type_e;$/;"	t
+svn_diff_contains_conflicts	./subversion/libsvn_diff/util.c	/^svn_diff_contains_conflicts(svn_diff_t *diff)$/;"	f
+svn_diff_contains_diffs	./subversion/libsvn_diff/util.c	/^svn_diff_contains_diffs(svn_diff_t *diff)$/;"	f
+svn_diff_datasource_ancestor	./subversion/include/svn_diff.h	/^  svn_diff_datasource_ancestor$/;"	e	enum:svn_diff_datasource_e
+svn_diff_datasource_e	./subversion/include/svn_diff.h	/^typedef enum svn_diff_datasource_e$/;"	g
+svn_diff_datasource_e	./subversion/include/svn_diff.h	/^} svn_diff_datasource_e;$/;"	t
+svn_diff_datasource_latest	./subversion/include/svn_diff.h	/^  svn_diff_datasource_latest,$/;"	e	enum:svn_diff_datasource_e
+svn_diff_datasource_modified	./subversion/include/svn_diff.h	/^  svn_diff_datasource_modified,$/;"	e	enum:svn_diff_datasource_e
+svn_diff_datasource_original	./subversion/include/svn_diff.h	/^  svn_diff_datasource_original,$/;"	e	enum:svn_diff_datasource_e
+svn_diff_diff	./subversion/libsvn_diff/diff.c	/^svn_diff_diff(svn_diff_t **diff,$/;"	f
+svn_diff_diff3	./subversion/libsvn_diff/diff3.c	/^svn_diff_diff3(svn_diff_t **diff,$/;"	f
+svn_diff_diff4	./subversion/libsvn_diff/diff4.c	/^svn_diff_diff4(svn_diff_t **diff,$/;"	f
+svn_diff_file_diff	./subversion/libsvn_diff/diff_file.c	/^svn_diff_file_diff(svn_diff_t **diff,$/;"	f
+svn_diff_file_diff3	./subversion/libsvn_diff/diff_file.c	/^svn_diff_file_diff3(svn_diff_t **diff,$/;"	f
+svn_diff_file_diff4	./subversion/libsvn_diff/diff_file.c	/^svn_diff_file_diff4(svn_diff_t **diff,$/;"	f
+svn_diff_file_output_merge	./subversion/libsvn_diff/diff_file.c	/^svn_diff_file_output_merge(svn_stream_t *output_stream,$/;"	f
+svn_diff_file_output_unified	./subversion/libsvn_diff/diff_file.c	/^svn_diff_file_output_unified(svn_stream_t *output_stream,$/;"	f
+svn_diff_fns_t	./subversion/include/svn_diff.h	/^typedef struct svn_diff_fns_t$/;"	s
+svn_diff_fns_t	./subversion/include/svn_diff.h	/^} svn_diff_fns_t;$/;"	t
+svn_diff_output	./subversion/libsvn_diff/util.c	/^svn_diff_output(svn_diff_t *diff,$/;"	f
+svn_diff_output_fns_t	./subversion/include/svn_diff.h	/^typedef struct svn_diff_output_fns_t$/;"	s
+svn_diff_output_fns_t	./subversion/include/svn_diff.h	/^} svn_diff_output_fns_t;$/;"	t
+svn_diff_t	./subversion/include/svn_diff.h	/^typedef struct svn_diff_t svn_diff_t;$/;"	t
+svn_diff_t	./subversion/libsvn_diff/diff.h	/^struct svn_diff_t {$/;"	s
+svn_dirent_t	./subversion/include/svn_types.h	/^typedef struct svn_dirent_t$/;"	s
+svn_dirent_t	./subversion/include/svn_types.h	/^} svn_dirent_t;$/;"	t
+svn_error__locate	./subversion/libsvn_subr/error.c	/^svn_error__locate (const char *file, long line)$/;"	f
+svn_error_clear	./subversion/libsvn_subr/error.c	/^svn_error_clear (svn_error_t *err)$/;"	f
+svn_error_compose	./subversion/libsvn_subr/error.c	/^svn_error_compose (svn_error_t *chain, svn_error_t *new_err)$/;"	f
+svn_error_create	./subversion/include/svn_error.h	90;"	d
+svn_error_create	./subversion/libsvn_subr/error.c	/^svn_error_create (apr_status_t apr_err,$/;"	f
+svn_error_create	./subversion/libsvn_subr/error.c	42;"	d	file:
+svn_error_createf	./subversion/include/svn_error.h	104;"	d
+svn_error_createf	./subversion/libsvn_ra_svn/gssapi.c	40;"	d	file:
+svn_error_createf	./subversion/libsvn_ra_svn/gssapi.c	93;"	d	file:
+svn_error_createf	./subversion/libsvn_subr/error.c	/^svn_error_createf (apr_status_t apr_err,$/;"	f
+svn_error_createf	./subversion/libsvn_subr/error.c	43;"	d	file:
+svn_error_msg	./packages/win32-innosetup/tools/svnpath/main.c	/^svn_error_msg(char cMsg[150])$/;"	f
+svn_error_quick_wrap	./subversion/include/svn_error.h	128;"	d
+svn_error_quick_wrap	./subversion/libsvn_subr/error.c	/^svn_error_quick_wrap (svn_error_t *child, const char *new_msg)$/;"	f
+svn_error_quick_wrap	./subversion/libsvn_subr/error.c	44;"	d	file:
+svn_error_t	./subversion/include/svn_types.h	/^typedef struct svn_error_t$/;"	s
+svn_error_t	./subversion/include/svn_types.h	/^} svn_error_t;$/;"	t
+svn_error_wrap_apr	./subversion/include/svn_error.h	118;"	d
+svn_error_wrap_apr	./subversion/libsvn_subr/error.c	/^svn_error_wrap_apr (apr_status_t status,$/;"	f
+svn_error_wrap_apr	./subversion/libsvn_subr/error.c	45;"	d	file:
+svn_filesize_t	./subversion/include/svn_types.h	/^typedef apr_int64_t svn_filesize_t;$/;"	t
+svn_fs__add_txn_copy	./subversion/libsvn_fs/revs-txns.c	/^svn_fs__add_txn_copy (svn_fs_t *fs,$/;"	f
+svn_fs__append	./subversion/libsvn_fs/util/skel.c	/^svn_fs__append (skel_t *skel, skel_t *list_skel)$/;"	f
+svn_fs__atom_matches_string	./subversion/libsvn_fs/util/skel.c	/^svn_fs__atom_matches_string (skel_t *skel, const svn_string_t *str)$/;"	f
+svn_fs__bdb_changes_add	./subversion/libsvn_fs/bdb/changes-table.c	/^svn_fs__bdb_changes_add (svn_fs_t *fs,$/;"	f
+svn_fs__bdb_changes_delete	./subversion/libsvn_fs/bdb/changes-table.c	/^svn_fs__bdb_changes_delete (svn_fs_t *fs,$/;"	f
+svn_fs__bdb_changes_fetch	./subversion/libsvn_fs/bdb/changes-table.c	/^svn_fs__bdb_changes_fetch (apr_hash_t **changes_p,$/;"	f
+svn_fs__bdb_changes_fetch_raw	./subversion/libsvn_fs/bdb/changes-table.c	/^svn_fs__bdb_changes_fetch_raw (apr_array_header_t **changes_p,$/;"	f
+svn_fs__bdb_check_version	./subversion/libsvn_fs/bdb/bdb_compat.c	/^svn_fs__bdb_check_version (void)$/;"	f
+svn_fs__bdb_create_copy	./subversion/libsvn_fs/bdb/copies-table.c	/^svn_fs__bdb_create_copy (svn_fs_t *fs,$/;"	f
+svn_fs__bdb_create_txn	./subversion/libsvn_fs/bdb/txn-table.c	/^svn_fs__bdb_create_txn (const char **txn_name_p,$/;"	f
+svn_fs__bdb_dberr	./subversion/libsvn_fs/bdb/bdb-err.c	/^svn_fs__bdb_dberr (int db_err)$/;"	f
+svn_fs__bdb_dberrf	./subversion/libsvn_fs/bdb/bdb-err.c	/^svn_fs__bdb_dberrf (int db_err, const char *fmt, ...)$/;"	f
+svn_fs__bdb_delete_copy	./subversion/libsvn_fs/bdb/copies-table.c	/^svn_fs__bdb_delete_copy (svn_fs_t *fs,$/;"	f
+svn_fs__bdb_delete_nodes_entry	./subversion/libsvn_fs/bdb/nodes-table.c	/^svn_fs__bdb_delete_nodes_entry (svn_fs_t *fs,$/;"	f
+svn_fs__bdb_delete_rep	./subversion/libsvn_fs/bdb/reps-table.c	/^svn_fs__bdb_delete_rep (svn_fs_t *fs, const char *key, trail_t *trail)$/;"	f
+svn_fs__bdb_delete_txn	./subversion/libsvn_fs/bdb/txn-table.c	/^svn_fs__bdb_delete_txn (svn_fs_t *fs,$/;"	f
+svn_fs__bdb_get_copy	./subversion/libsvn_fs/bdb/copies-table.c	/^svn_fs__bdb_get_copy (svn_fs__copy_t **copy_p,$/;"	f
+svn_fs__bdb_get_node_revision	./subversion/libsvn_fs/bdb/nodes-table.c	/^svn_fs__bdb_get_node_revision (svn_fs__node_revision_t **noderev_p,$/;"	f
+svn_fs__bdb_get_rev	./subversion/libsvn_fs/bdb/rev-table.c	/^svn_fs__bdb_get_rev (svn_fs__revision_t **revision_p,$/;"	f
+svn_fs__bdb_get_txn	./subversion/libsvn_fs/bdb/txn-table.c	/^svn_fs__bdb_get_txn (svn_fs__transaction_t **txn_p,$/;"	f
+svn_fs__bdb_get_txn_list	./subversion/libsvn_fs/bdb/txn-table.c	/^svn_fs__bdb_get_txn_list (apr_array_header_t **names_p,$/;"	f
+svn_fs__bdb_get_uuid	./subversion/libsvn_fs/bdb/uuids-table.c	/^svn_error_t *svn_fs__bdb_get_uuid (svn_fs_t *fs,$/;"	f
+svn_fs__bdb_new_node_id	./subversion/libsvn_fs/bdb/nodes-table.c	/^svn_fs__bdb_new_node_id (svn_fs_id_t **id_p,$/;"	f
+svn_fs__bdb_new_successor_id	./subversion/libsvn_fs/bdb/nodes-table.c	/^svn_fs__bdb_new_successor_id (svn_fs_id_t **successor_p,$/;"	f
+svn_fs__bdb_open_changes_table	./subversion/libsvn_fs/bdb/changes-table.c	/^svn_fs__bdb_open_changes_table (DB **changes_p,$/;"	f
+svn_fs__bdb_open_copies_table	./subversion/libsvn_fs/bdb/copies-table.c	/^svn_fs__bdb_open_copies_table (DB **copies_p,$/;"	f
+svn_fs__bdb_open_nodes_table	./subversion/libsvn_fs/bdb/nodes-table.c	/^svn_fs__bdb_open_nodes_table (DB **nodes_p,$/;"	f
+svn_fs__bdb_open_reps_table	./subversion/libsvn_fs/bdb/reps-table.c	/^svn_fs__bdb_open_reps_table (DB **reps_p,$/;"	f
+svn_fs__bdb_open_revisions_table	./subversion/libsvn_fs/bdb/rev-table.c	/^int svn_fs__bdb_open_revisions_table (DB **revisions_p,$/;"	f
+svn_fs__bdb_open_strings_table	./subversion/libsvn_fs/bdb/strings-table.c	/^svn_fs__bdb_open_strings_table (DB **strings_p,$/;"	f
+svn_fs__bdb_open_transactions_table	./subversion/libsvn_fs/bdb/txn-table.c	/^svn_fs__bdb_open_transactions_table (DB **transactions_p,$/;"	f
+svn_fs__bdb_open_uuids_table	./subversion/libsvn_fs/bdb/uuids-table.c	/^svn_fs__bdb_open_uuids_table (DB **uuids_p,$/;"	f
+svn_fs__bdb_put_node_revision	./subversion/libsvn_fs/bdb/nodes-table.c	/^svn_fs__bdb_put_node_revision (svn_fs_t *fs,$/;"	f
+svn_fs__bdb_put_rev	./subversion/libsvn_fs/bdb/rev-table.c	/^svn_fs__bdb_put_rev (svn_revnum_t *rev,$/;"	f
+svn_fs__bdb_put_txn	./subversion/libsvn_fs/bdb/txn-table.c	/^svn_fs__bdb_put_txn (svn_fs_t *fs,$/;"	f
+svn_fs__bdb_read_rep	./subversion/libsvn_fs/bdb/reps-table.c	/^svn_fs__bdb_read_rep (svn_fs__representation_t **rep_p,$/;"	f
+svn_fs__bdb_reserve_copy_id	./subversion/libsvn_fs/bdb/copies-table.c	/^svn_fs__bdb_reserve_copy_id (const char **id_p,$/;"	f
+svn_fs__bdb_set_uuid	./subversion/libsvn_fs/bdb/uuids-table.c	/^svn_error_t *svn_fs__bdb_set_uuid (svn_fs_t *fs,$/;"	f
+svn_fs__bdb_string_append	./subversion/libsvn_fs/bdb/strings-table.c	/^svn_fs__bdb_string_append (svn_fs_t *fs,$/;"	f
+svn_fs__bdb_string_clear	./subversion/libsvn_fs/bdb/strings-table.c	/^svn_fs__bdb_string_clear (svn_fs_t *fs,$/;"	f
+svn_fs__bdb_string_copy	./subversion/libsvn_fs/bdb/strings-table.c	/^svn_fs__bdb_string_copy (svn_fs_t *fs,$/;"	f
+svn_fs__bdb_string_delete	./subversion/libsvn_fs/bdb/strings-table.c	/^svn_fs__bdb_string_delete (svn_fs_t *fs,$/;"	f
+svn_fs__bdb_string_read	./subversion/libsvn_fs/bdb/strings-table.c	/^svn_fs__bdb_string_read (svn_fs_t *fs,$/;"	f
+svn_fs__bdb_string_size	./subversion/libsvn_fs/bdb/strings-table.c	/^svn_fs__bdb_string_size (svn_filesize_t *size,$/;"	f
+svn_fs__bdb_wrap_db	./subversion/libsvn_fs/bdb/bdb-err.c	/^svn_fs__bdb_wrap_db (svn_fs_t *fs, const char *operation, int db_err)$/;"	f
+svn_fs__bdb_write_new_rep	./subversion/libsvn_fs/bdb/reps-table.c	/^svn_fs__bdb_write_new_rep (const char **key,$/;"	f
+svn_fs__bdb_write_rep	./subversion/libsvn_fs/bdb/reps-table.c	/^svn_fs__bdb_write_rep (svn_fs_t *fs,$/;"	f
+svn_fs__bdb_youngest_rev	./subversion/libsvn_fs/bdb/rev-table.c	/^svn_fs__bdb_youngest_rev (svn_revnum_t *youngest_p,$/;"	f
+svn_fs__canonicalize_abspath	./subversion/libsvn_fs/fs.c	/^svn_fs__canonicalize_abspath (const char *path, apr_pool_t *pool)$/;"	f
+svn_fs__change_t	./subversion/libsvn_fs/fs.h	/^} svn_fs__change_t;$/;"	t
+svn_fs__check_fs	./subversion/libsvn_fs/err.c	/^svn_fs__check_fs (svn_fs_t *fs)$/;"	f
+svn_fs__clean_logs	./subversion/libsvn_fs/fs.c	/^svn_fs__clean_logs(const char *live_path, $/;"	f	file:
+svn_fs__clear_dbt	./subversion/libsvn_fs/bdb/dbt.c	/^svn_fs__clear_dbt (DBT *dbt)$/;"	f
+svn_fs__compare_dbt	./subversion/libsvn_fs/bdb/dbt.c	/^svn_fs__compare_dbt (const DBT *a, const DBT *b)$/;"	f
+svn_fs__copy_kind_real	./subversion/libsvn_fs/fs.h	/^  svn_fs__copy_kind_real = 1, \/* real copy *\/$/;"	e
+svn_fs__copy_kind_soft	./subversion/libsvn_fs/fs.h	/^  svn_fs__copy_kind_soft      \/* soft copy *\/$/;"	e
+svn_fs__copy_kind_t	./subversion/libsvn_fs/fs.h	/^} svn_fs__copy_kind_t;$/;"	t
+svn_fs__copy_skel	./subversion/libsvn_fs/util/skel.c	/^svn_fs__copy_skel (skel_t *skel, apr_pool_t *pool)$/;"	f
+svn_fs__copy_t	./subversion/libsvn_fs/fs.h	/^} svn_fs__copy_t;$/;"	t
+svn_fs__create_id	./subversion/libsvn_fs/id.c	/^svn_fs__create_id (const char *node_id,$/;"	f
+svn_fs__create_node	./subversion/libsvn_fs/node-rev.c	/^svn_fs__create_node (const svn_fs_id_t **id_p,$/;"	f
+svn_fs__create_successor	./subversion/libsvn_fs/node-rev.c	/^svn_fs__create_successor (const svn_fs_id_t **new_id_p,$/;"	f
+svn_fs__dag_check_mutable	./subversion/libsvn_fs/dag.c	/^svn_boolean_t svn_fs__dag_check_mutable (dag_node_t *node, $/;"	f
+svn_fs__dag_clone_child	./subversion/libsvn_fs/dag.c	/^svn_fs__dag_clone_child (dag_node_t **child_p,$/;"	f
+svn_fs__dag_clone_root	./subversion/libsvn_fs/dag.c	/^svn_fs__dag_clone_root (dag_node_t **root_p,$/;"	f
+svn_fs__dag_commit_txn	./subversion/libsvn_fs/dag.c	/^svn_fs__dag_commit_txn (svn_revnum_t *new_rev,$/;"	f
+svn_fs__dag_copy	./subversion/libsvn_fs/dag.c	/^svn_fs__dag_copy (dag_node_t *to_node,$/;"	f
+svn_fs__dag_delete	./subversion/libsvn_fs/dag.c	/^svn_fs__dag_delete (dag_node_t *parent,$/;"	f
+svn_fs__dag_delete_if_mutable	./subversion/libsvn_fs/dag.c	/^svn_fs__dag_delete_if_mutable (svn_fs_t *fs,$/;"	f
+svn_fs__dag_deltify	./subversion/libsvn_fs/dag.c	/^svn_fs__dag_deltify (dag_node_t *target,$/;"	f
+svn_fs__dag_dir_entries	./subversion/libsvn_fs/dag.c	/^svn_fs__dag_dir_entries (apr_hash_t **entries,$/;"	f
+svn_fs__dag_dup	./subversion/libsvn_fs/dag.c	/^svn_fs__dag_dup (dag_node_t *node,$/;"	f
+svn_fs__dag_file_checksum	./subversion/libsvn_fs/dag.c	/^svn_fs__dag_file_checksum (unsigned char digest[],$/;"	f
+svn_fs__dag_file_length	./subversion/libsvn_fs/dag.c	/^svn_fs__dag_file_length (svn_filesize_t *length,$/;"	f
+svn_fs__dag_finalize_edits	./subversion/libsvn_fs/dag.c	/^svn_fs__dag_finalize_edits (dag_node_t *file,$/;"	f
+svn_fs__dag_get_contents	./subversion/libsvn_fs/dag.c	/^svn_fs__dag_get_contents (svn_stream_t **contents,$/;"	f
+svn_fs__dag_get_created_path	./subversion/libsvn_fs/dag.c	/^svn_fs__dag_get_created_path (dag_node_t *node)$/;"	f
+svn_fs__dag_get_edit_stream	./subversion/libsvn_fs/dag.c	/^svn_fs__dag_get_edit_stream (svn_stream_t **contents,$/;"	f
+svn_fs__dag_get_fs	./subversion/libsvn_fs/dag.c	/^svn_fs__dag_get_fs (dag_node_t *node)$/;"	f
+svn_fs__dag_get_id	./subversion/libsvn_fs/dag.c	/^svn_fs__dag_get_id (dag_node_t *node)$/;"	f
+svn_fs__dag_get_node	./subversion/libsvn_fs/dag.c	/^svn_fs__dag_get_node (dag_node_t **node,$/;"	f
+svn_fs__dag_get_predecessor_count	./subversion/libsvn_fs/dag.c	/^svn_fs__dag_get_predecessor_count (int *count,$/;"	f
+svn_fs__dag_get_predecessor_id	./subversion/libsvn_fs/dag.c	/^svn_fs__dag_get_predecessor_id (const svn_fs_id_t **id_p,$/;"	f
+svn_fs__dag_get_proplist	./subversion/libsvn_fs/dag.c	/^svn_fs__dag_get_proplist (apr_hash_t **proplist_p,$/;"	f
+svn_fs__dag_get_revision	./subversion/libsvn_fs/dag.c	/^svn_fs__dag_get_revision (svn_revnum_t *rev,$/;"	f
+svn_fs__dag_init_fs	./subversion/libsvn_fs/dag.c	/^svn_fs__dag_init_fs (svn_fs_t *fs)$/;"	f
+svn_fs__dag_is_ancestor	./subversion/libsvn_fs/dag.c	/^svn_fs__dag_is_ancestor (svn_boolean_t *is_ancestor,$/;"	f
+svn_fs__dag_is_parent	./subversion/libsvn_fs/dag.c	/^svn_fs__dag_is_parent (svn_boolean_t *is_parent,$/;"	f
+svn_fs__dag_make_dir	./subversion/libsvn_fs/dag.c	/^svn_fs__dag_make_dir (dag_node_t **child_p,$/;"	f
+svn_fs__dag_make_file	./subversion/libsvn_fs/dag.c	/^svn_fs__dag_make_file (dag_node_t **child_p,$/;"	f
+svn_fs__dag_node_kind	./subversion/libsvn_fs/dag.c	/^svn_node_kind_t svn_fs__dag_node_kind (dag_node_t *node)$/;"	f
+svn_fs__dag_open	./subversion/libsvn_fs/dag.c	/^svn_fs__dag_open (dag_node_t **child_p,$/;"	f
+svn_fs__dag_pred_func_t	./subversion/libsvn_fs/dag.h	/^typedef svn_error_t *(*svn_fs__dag_pred_func_t) (void *baton,$/;"	t
+svn_fs__dag_remove_node	./subversion/libsvn_fs/dag.c	/^svn_fs__dag_remove_node (svn_fs_t *fs,$/;"	f
+svn_fs__dag_revision_root	./subversion/libsvn_fs/dag.c	/^svn_fs__dag_revision_root (dag_node_t **node_p,$/;"	f
+svn_fs__dag_set_entry	./subversion/libsvn_fs/dag.c	/^svn_fs__dag_set_entry (dag_node_t *node,$/;"	f
+svn_fs__dag_set_proplist	./subversion/libsvn_fs/dag.c	/^svn_fs__dag_set_proplist (dag_node_t *node,$/;"	f
+svn_fs__dag_txn_base_root	./subversion/libsvn_fs/dag.c	/^svn_fs__dag_txn_base_root (dag_node_t **node_p,$/;"	f
+svn_fs__dag_txn_root	./subversion/libsvn_fs/dag.c	/^svn_fs__dag_txn_root (dag_node_t **node_p,$/;"	f
+svn_fs__dag_walk_predecessors	./subversion/libsvn_fs/dag.c	/^svn_fs__dag_walk_predecessors (dag_node_t *node,$/;"	f
+svn_fs__delete_node_revision	./subversion/libsvn_fs/node-rev.c	/^svn_fs__delete_node_revision (svn_fs_t *fs,$/;"	f
+svn_fs__delete_rep_if_mutable	./subversion/libsvn_fs/reps-strings.c	/^svn_fs__delete_rep_if_mutable (svn_fs_t *fs,$/;"	f
+svn_fs__err_corrupt_clone	./subversion/libsvn_fs/err.c	/^svn_fs__err_corrupt_clone (svn_fs_t *fs,$/;"	f
+svn_fs__err_corrupt_copy	./subversion/libsvn_fs/err.c	/^svn_fs__err_corrupt_copy (svn_fs_t *fs, const char *copy_id)$/;"	f
+svn_fs__err_corrupt_fs_revision	./subversion/libsvn_fs/err.c	/^svn_fs__err_corrupt_fs_revision (svn_fs_t *fs, svn_revnum_t rev)$/;"	f
+svn_fs__err_corrupt_id	./subversion/libsvn_fs/err.c	/^svn_fs__err_corrupt_id (svn_fs_t *fs, const svn_fs_id_t *id)$/;"	f
+svn_fs__err_corrupt_next_id	./subversion/libsvn_fs/err.c	/^svn_fs__err_corrupt_next_id (svn_fs_t *fs, const char *table)$/;"	f
+svn_fs__err_corrupt_node_revision	./subversion/libsvn_fs/err.c	/^svn_fs__err_corrupt_node_revision (svn_fs_t *fs, const svn_fs_id_t *id)$/;"	f
+svn_fs__err_corrupt_nodes_key	./subversion/libsvn_fs/err.c	/^svn_fs__err_corrupt_nodes_key (svn_fs_t *fs)$/;"	f
+svn_fs__err_corrupt_txn	./subversion/libsvn_fs/err.c	/^svn_fs__err_corrupt_txn (svn_fs_t *fs,$/;"	f
+svn_fs__err_dangling_id	./subversion/libsvn_fs/err.c	/^svn_fs__err_dangling_id (svn_fs_t *fs, const svn_fs_id_t *id)$/;"	f
+svn_fs__err_dangling_rev	./subversion/libsvn_fs/err.c	/^svn_fs__err_dangling_rev (svn_fs_t *fs, svn_revnum_t rev)$/;"	f
+svn_fs__err_no_such_copy	./subversion/libsvn_fs/err.c	/^svn_fs__err_no_such_copy (svn_fs_t *fs, const char *copy_id)$/;"	f
+svn_fs__err_no_such_txn	./subversion/libsvn_fs/err.c	/^svn_fs__err_no_such_txn (svn_fs_t *fs, const char *txn)$/;"	f
+svn_fs__err_not_directory	./subversion/libsvn_fs/err.c	/^svn_fs__err_not_directory (svn_fs_t *fs, const char *path)$/;"	f
+svn_fs__err_not_mutable	./subversion/libsvn_fs/err.c	/^svn_fs__err_not_mutable (svn_fs_t *fs, svn_revnum_t rev, const char *path)$/;"	f
+svn_fs__err_path_syntax	./subversion/libsvn_fs/err.c	/^svn_fs__err_path_syntax (svn_fs_t *fs, const char *path)$/;"	f
+svn_fs__err_txn_not_mutable	./subversion/libsvn_fs/err.c	/^svn_fs__err_txn_not_mutable (svn_fs_t *fs, const char *txn)$/;"	f
+svn_fs__get_mutable_rep	./subversion/libsvn_fs/reps-strings.c	/^svn_fs__get_mutable_rep (const char **new_rep_key,$/;"	f
+svn_fs__get_txn_ids	./subversion/libsvn_fs/revs-txns.c	/^svn_fs__get_txn_ids (const svn_fs_id_t **root_id_p,$/;"	f
+svn_fs__getsize	./subversion/libsvn_fs/key-gen.c	/^svn_fs__getsize (const char *data, apr_size_t len,$/;"	f
+svn_fs__id_copy	./subversion/libsvn_fs/id.c	/^svn_fs__id_copy (const svn_fs_id_t *id, apr_pool_t *pool)$/;"	f
+svn_fs__id_copy_id	./subversion/libsvn_fs/id.c	/^svn_fs__id_copy_id (const svn_fs_id_t *id)$/;"	f
+svn_fs__id_eq	./subversion/libsvn_fs/id.c	/^svn_fs__id_eq (const svn_fs_id_t *a, $/;"	f
+svn_fs__id_node_id	./subversion/libsvn_fs/id.c	/^svn_fs__id_node_id (const svn_fs_id_t *id)$/;"	f
+svn_fs__id_to_dbt	./subversion/libsvn_fs/bdb/dbt.c	/^svn_fs__id_to_dbt (DBT *dbt,$/;"	f
+svn_fs__id_txn_id	./subversion/libsvn_fs/id.c	/^svn_fs__id_txn_id (const svn_fs_id_t *id)$/;"	f
+svn_fs__key_compare	./subversion/libsvn_fs/key-gen.c	/^svn_fs__key_compare (const char *a, const char *b)$/;"	f
+svn_fs__list_length	./subversion/libsvn_fs/util/skel.c	/^svn_fs__list_length (skel_t *skel)$/;"	f
+svn_fs__make_empty_list	./subversion/libsvn_fs/util/skel.c	/^svn_fs__make_empty_list (apr_pool_t *pool)$/;"	f
+svn_fs__matches_atom	./subversion/libsvn_fs/util/skel.c	/^svn_fs__matches_atom (skel_t *skel, const char *str)$/;"	f
+svn_fs__mem_atom	./subversion/libsvn_fs/util/skel.c	/^svn_fs__mem_atom (const void *addr, $/;"	f
+svn_fs__next_key	./subversion/libsvn_fs/key-gen.c	/^svn_fs__next_key (const char *this, apr_size_t *len, char *next)$/;"	f
+svn_fs__next_key_key	./subversion/libsvn_fs/key-gen.c	/^const char svn_fs__next_key_key[] = "next-key";$/;"	v
+svn_fs__nodata_dbt	./subversion/libsvn_fs/bdb/dbt.c	/^DBT *svn_fs__nodata_dbt (DBT *dbt)$/;"	f
+svn_fs__node_revision_t	./subversion/libsvn_fs/fs.h	/^} svn_fs__node_revision_t;$/;"	t
+svn_fs__parse_change_skel	./subversion/libsvn_fs/util/fs_skels.c	/^svn_fs__parse_change_skel (svn_fs__change_t **change_p,$/;"	f
+svn_fs__parse_copy_skel	./subversion/libsvn_fs/util/fs_skels.c	/^svn_fs__parse_copy_skel (svn_fs__copy_t **copy_p,$/;"	f
+svn_fs__parse_entries_skel	./subversion/libsvn_fs/util/fs_skels.c	/^svn_fs__parse_entries_skel (apr_hash_t **entries_p,$/;"	f
+svn_fs__parse_node_revision_skel	./subversion/libsvn_fs/util/fs_skels.c	/^svn_fs__parse_node_revision_skel (svn_fs__node_revision_t **noderev_p,$/;"	f
+svn_fs__parse_proplist_skel	./subversion/libsvn_fs/util/fs_skels.c	/^svn_fs__parse_proplist_skel (apr_hash_t **proplist_p,$/;"	f
+svn_fs__parse_representation_skel	./subversion/libsvn_fs/util/fs_skels.c	/^svn_fs__parse_representation_skel (svn_fs__representation_t **rep_p,$/;"	f
+svn_fs__parse_revision_skel	./subversion/libsvn_fs/util/fs_skels.c	/^svn_fs__parse_revision_skel (svn_fs__revision_t **revision_p, $/;"	f
+svn_fs__parse_skel	./subversion/libsvn_fs/util/skel.c	/^svn_fs__parse_skel (const char *data,$/;"	f
+svn_fs__parse_transaction_skel	./subversion/libsvn_fs/util/fs_skels.c	/^svn_fs__parse_transaction_skel (svn_fs__transaction_t **transaction_p, $/;"	f
+svn_fs__prepend	./subversion/libsvn_fs/util/skel.c	/^svn_fs__prepend (skel_t *skel, skel_t *list_skel)$/;"	f
+svn_fs__putsize	./subversion/libsvn_fs/key-gen.c	/^svn_fs__putsize (char *data, apr_size_t len, apr_size_t value)$/;"	f
+svn_fs__recno_dbt	./subversion/libsvn_fs/bdb/dbt.c	/^svn_fs__recno_dbt (DBT *dbt, db_recno_t *recno)$/;"	f
+svn_fs__record_completion	./subversion/libsvn_fs/trail.c	/^svn_fs__record_completion (trail_t *trail,$/;"	f
+svn_fs__record_undo	./subversion/libsvn_fs/trail.c	/^svn_fs__record_undo (trail_t *trail,$/;"	f
+svn_fs__rep_contents	./subversion/libsvn_fs/reps-strings.c	/^svn_fs__rep_contents (svn_string_t *str,$/;"	f
+svn_fs__rep_contents_checksum	./subversion/libsvn_fs/reps-strings.c	/^svn_fs__rep_contents_checksum (unsigned char digest[],$/;"	f
+svn_fs__rep_contents_read_stream	./subversion/libsvn_fs/reps-strings.c	/^svn_fs__rep_contents_read_stream (svn_stream_t **rs_p,$/;"	f
+svn_fs__rep_contents_size	./subversion/libsvn_fs/reps-strings.c	/^svn_fs__rep_contents_size (svn_filesize_t *size_p,$/;"	f
+svn_fs__rep_contents_write_stream	./subversion/libsvn_fs/reps-strings.c	/^svn_fs__rep_contents_write_stream (svn_stream_t **ws_p,$/;"	f
+svn_fs__rep_delta_chunk_t	./subversion/libsvn_fs/fs.h	/^} svn_fs__rep_delta_chunk_t;$/;"	t
+svn_fs__rep_deltify	./subversion/libsvn_fs/reps-strings.c	/^svn_fs__rep_deltify (svn_fs_t *fs,$/;"	f
+svn_fs__rep_kind_delta	./subversion/libsvn_fs/fs.h	/^  svn_fs__rep_kind_delta         \/* delta *\/$/;"	e
+svn_fs__rep_kind_fulltext	./subversion/libsvn_fs/fs.h	/^  svn_fs__rep_kind_fulltext = 1, \/* fulltext *\/$/;"	e
+svn_fs__rep_kind_t	./subversion/libsvn_fs/fs.h	/^} svn_fs__rep_kind_t;$/;"	t
+svn_fs__representation_t	./subversion/libsvn_fs/fs.h	/^} svn_fs__representation_t;$/;"	t
+svn_fs__result_dbt	./subversion/libsvn_fs/bdb/dbt.c	/^svn_fs__result_dbt (DBT *dbt)$/;"	f
+svn_fs__retry	./subversion/libsvn_fs/trail.c	/^svn_fs__retry (svn_fs_t *fs,$/;"	f
+svn_fs__retry_debug	./subversion/libsvn_fs/trail.c	/^svn_fs__retry_debug (svn_fs_t *fs,$/;"	f
+svn_fs__retry_txn	./subversion/libsvn_fs/trail.c	/^svn_fs__retry_txn (svn_fs_t *fs,$/;"	f
+svn_fs__retry_txn	./subversion/libsvn_fs/trail.c	276;"	d	file:
+svn_fs__retry_txn	./subversion/libsvn_fs/trail.h	204;"	d
+svn_fs__rev_get_root	./subversion/libsvn_fs/revs-txns.c	/^svn_fs__rev_get_root (const svn_fs_id_t **root_id_p,$/;"	f
+svn_fs__rev_get_txn_id	./subversion/libsvn_fs/revs-txns.c	/^svn_fs__rev_get_txn_id (const char **txn_id_p,$/;"	f
+svn_fs__revision_t	./subversion/libsvn_fs/fs.h	/^} svn_fs__revision_t;$/;"	t
+svn_fs__same_keys	./subversion/libsvn_fs/key-gen.c	/^svn_fs__same_keys (const char *a, const char *b)$/;"	f
+svn_fs__set_dbt	./subversion/libsvn_fs/bdb/dbt.c	/^svn_fs__set_dbt (DBT *dbt, const void *data, u_int32_t size)$/;"	f
+svn_fs__set_rev_prop	./subversion/libsvn_fs/revs-txns.c	/^svn_fs__set_rev_prop (svn_fs_t *fs,$/;"	f
+svn_fs__set_txn_base	./subversion/libsvn_fs/revs-txns.c	/^svn_fs__set_txn_base (svn_fs_t *fs,$/;"	f
+svn_fs__set_txn_prop	./subversion/libsvn_fs/revs-txns.c	/^svn_fs__set_txn_prop (svn_fs_t *fs,$/;"	f
+svn_fs__set_txn_root	./subversion/libsvn_fs/revs-txns.c	/^svn_fs__set_txn_root (svn_fs_t *fs,$/;"	f
+svn_fs__skel_to_dbt	./subversion/libsvn_fs/bdb/dbt.c	/^svn_fs__skel_to_dbt (DBT *dbt,$/;"	f
+svn_fs__skels_are_equal	./subversion/libsvn_fs/util/skel.c	/^svn_fs__skels_are_equal (skel_t *skel1, skel_t *skel2)$/;"	f
+svn_fs__str_atom	./subversion/libsvn_fs/util/skel.c	/^svn_fs__str_atom (const char *str, apr_pool_t *pool)$/;"	f
+svn_fs__str_to_dbt	./subversion/libsvn_fs/bdb/dbt.c	/^svn_fs__str_to_dbt (DBT *dbt, char *str)$/;"	f
+svn_fs__things_different	./subversion/libsvn_fs/dag.c	/^svn_fs__things_different (svn_boolean_t *props_changed,$/;"	f
+svn_fs__track_dbt	./subversion/libsvn_fs/bdb/dbt.c	/^svn_fs__track_dbt (DBT *dbt, apr_pool_t *pool)$/;"	f
+svn_fs__trail_debug	./subversion/libsvn_fs/trail.c	/^svn_fs__trail_debug (trail_t *trail, const char *table, const char *op)$/;"	f
+svn_fs__trail_debug	./subversion/libsvn_fs/trail.h	265;"	d
+svn_fs__transaction_kind_committed	./subversion/libsvn_fs/fs.h	/^  svn_fs__transaction_kind_committed,   \/* committed *\/$/;"	e
+svn_fs__transaction_kind_dead	./subversion/libsvn_fs/fs.h	/^  svn_fs__transaction_kind_dead         \/* uncommitted and dead *\/$/;"	e
+svn_fs__transaction_kind_normal	./subversion/libsvn_fs/fs.h	/^  svn_fs__transaction_kind_normal = 1,  \/* normal, uncommitted *\/$/;"	e
+svn_fs__transaction_kind_t	./subversion/libsvn_fs/fs.h	/^} svn_fs__transaction_kind_t;$/;"	t
+svn_fs__transaction_t	./subversion/libsvn_fs/fs.h	/^} svn_fs__transaction_t;$/;"	t
+svn_fs__txn_get_revision	./subversion/libsvn_fs/revs-txns.c	/^svn_fs__txn_get_revision (svn_revnum_t *revision,$/;"	f
+svn_fs__txn_make_committed	./subversion/libsvn_fs/revs-txns.c	/^svn_fs__txn_make_committed (svn_fs_t *fs,$/;"	f
+svn_fs__unparse_change_skel	./subversion/libsvn_fs/util/fs_skels.c	/^svn_fs__unparse_change_skel (skel_t **skel_p,$/;"	f
+svn_fs__unparse_copy_skel	./subversion/libsvn_fs/util/fs_skels.c	/^svn_fs__unparse_copy_skel (skel_t **skel_p,$/;"	f
+svn_fs__unparse_entries_skel	./subversion/libsvn_fs/util/fs_skels.c	/^svn_fs__unparse_entries_skel (skel_t **skel_p,$/;"	f
+svn_fs__unparse_node_revision_skel	./subversion/libsvn_fs/util/fs_skels.c	/^svn_fs__unparse_node_revision_skel (skel_t **skel_p,$/;"	f
+svn_fs__unparse_proplist_skel	./subversion/libsvn_fs/util/fs_skels.c	/^svn_fs__unparse_proplist_skel (skel_t **skel_p,$/;"	f
+svn_fs__unparse_representation_skel	./subversion/libsvn_fs/util/fs_skels.c	/^svn_fs__unparse_representation_skel (skel_t **skel_p,$/;"	f
+svn_fs__unparse_revision_skel	./subversion/libsvn_fs/util/fs_skels.c	/^svn_fs__unparse_revision_skel (skel_t **skel_p,$/;"	f
+svn_fs__unparse_skel	./subversion/libsvn_fs/util/skel.c	/^svn_fs__unparse_skel (skel_t *skel, apr_pool_t *pool)$/;"	f
+svn_fs__unparse_transaction_skel	./subversion/libsvn_fs/util/fs_skels.c	/^svn_fs__unparse_transaction_skel (skel_t **skel_p,$/;"	f
+svn_fs_abort_txn	./subversion/libsvn_fs/revs-txns.c	/^svn_fs_abort_txn (svn_fs_txn_t *txn,$/;"	f
+svn_fs_apply_text	./subversion/libsvn_fs/tree.c	/^svn_fs_apply_text (svn_stream_t **contents_p,$/;"	f
+svn_fs_apply_textdelta	./subversion/libsvn_fs/tree.c	/^svn_fs_apply_textdelta (svn_txdelta_window_handler_t *contents_p,$/;"	f
+svn_fs_begin_txn	./subversion/libsvn_fs/revs-txns.c	/^svn_fs_begin_txn (svn_fs_txn_t **txn_p,$/;"	f
+svn_fs_berkeley_logfiles	./subversion/libsvn_fs/fs.c	/^svn_error_t *svn_fs_berkeley_logfiles (apr_array_header_t **logfiles,$/;"	f
+svn_fs_berkeley_path	./subversion/libsvn_fs/fs.c	/^svn_fs_berkeley_path (svn_fs_t *fs, apr_pool_t *pool)$/;"	f
+svn_fs_berkeley_recover	./subversion/libsvn_fs/fs.c	/^svn_fs_berkeley_recover (const char *path,$/;"	f
+svn_fs_change_node_prop	./subversion/libsvn_fs/tree.c	/^svn_fs_change_node_prop (svn_fs_root_t *root,$/;"	f
+svn_fs_change_rev_prop	./subversion/libsvn_fs/revs-txns.c	/^svn_fs_change_rev_prop (svn_fs_t *fs,$/;"	f
+svn_fs_change_txn_prop	./subversion/libsvn_fs/revs-txns.c	/^svn_fs_change_txn_prop (svn_fs_txn_t *txn,$/;"	f
+svn_fs_check_path	./subversion/libsvn_fs/tree.c	/^svn_fs_check_path (svn_node_kind_t *kind_p,$/;"	f
+svn_fs_check_related	./subversion/libsvn_fs/id.c	/^svn_fs_check_related (const svn_fs_id_t *id1,$/;"	f
+svn_fs_close_root	./subversion/libsvn_fs/tree.c	/^svn_fs_close_root (svn_fs_root_t *root)$/;"	f
+svn_fs_commit_txn	./subversion/libsvn_fs/tree.c	/^svn_fs_commit_txn (const char **conflict_p,$/;"	f
+svn_fs_compare_ids	./subversion/libsvn_fs/id.c	/^svn_fs_compare_ids (const svn_fs_id_t *a, $/;"	f
+svn_fs_contents_changed	./subversion/libsvn_fs/tree.c	/^svn_fs_contents_changed (svn_boolean_t *changed_p,$/;"	f
+svn_fs_copied_from	./subversion/libsvn_fs/tree.c	/^svn_fs_copied_from (svn_revnum_t *rev_p,$/;"	f
+svn_fs_copy	./subversion/libsvn_fs/tree.c	/^svn_fs_copy (svn_fs_root_t *from_root,$/;"	f
+svn_fs_create_berkeley	./subversion/libsvn_fs/fs.c	/^svn_fs_create_berkeley (svn_fs_t *fs, const char *path)$/;"	f
+svn_fs_delete	./subversion/libsvn_fs/tree.c	/^svn_fs_delete (svn_fs_root_t *root,$/;"	f
+svn_fs_delete_berkeley	./subversion/libsvn_fs/fs.c	/^svn_fs_delete_berkeley (const char *path,$/;"	f
+svn_fs_deltify_revision	./subversion/libsvn_fs/tree.c	/^svn_fs_deltify_revision (svn_fs_t *fs,$/;"	f
+svn_fs_dir_entries	./subversion/libsvn_fs/tree.c	/^svn_fs_dir_entries (apr_hash_t **table_p,$/;"	f
+svn_fs_dirent_t	./subversion/include/svn_fs.h	/^typedef struct svn_fs_dirent_t$/;"	s
+svn_fs_dirent_t	./subversion/include/svn_fs.h	/^} svn_fs_dirent_t;$/;"	t
+svn_fs_file_contents	./subversion/libsvn_fs/tree.c	/^svn_fs_file_contents (svn_stream_t **contents,$/;"	f
+svn_fs_file_length	./subversion/libsvn_fs/tree.c	/^svn_fs_file_length (svn_filesize_t *length_p,$/;"	f
+svn_fs_file_md5_checksum	./subversion/libsvn_fs/tree.c	/^svn_fs_file_md5_checksum (unsigned char digest[],$/;"	f
+svn_fs_get_file_delta_stream	./subversion/libsvn_fs/tree.c	/^svn_fs_get_file_delta_stream (svn_txdelta_stream_t **stream_p,$/;"	f
+svn_fs_get_uuid	./subversion/libsvn_fs/uuid.c	/^svn_fs_get_uuid (svn_fs_t *fs,$/;"	f
+svn_fs_history_location	./subversion/libsvn_fs/tree.c	/^svn_error_t *svn_fs_history_location (const char **path,$/;"	f
+svn_fs_history_prev	./subversion/libsvn_fs/tree.c	/^svn_error_t *svn_fs_history_prev (svn_fs_history_t **prev_history_p,$/;"	f
+svn_fs_history_t	./subversion/include/svn_fs.h	/^typedef struct svn_fs_history_t svn_fs_history_t;$/;"	t
+svn_fs_history_t	./subversion/libsvn_fs/tree.c	/^struct svn_fs_history_t$/;"	s	file:
+svn_fs_hotcopy_berkeley	./subversion/libsvn_fs/fs.c	/^svn_fs_hotcopy_berkeley (const char *src_path, $/;"	f
+svn_fs_id_t	./subversion/include/svn_fs.h	/^typedef struct svn_fs_id_t svn_fs_id_t;$/;"	t
+svn_fs_id_t	./subversion/libsvn_fs/id.h	/^struct svn_fs_id_t$/;"	s
+svn_fs_is_dir	./subversion/libsvn_fs/tree.c	/^svn_fs_is_dir (svn_boolean_t *is_dir,$/;"	f
+svn_fs_is_file	./subversion/libsvn_fs/tree.c	/^svn_fs_is_file (svn_boolean_t *is_file,$/;"	f
+svn_fs_is_revision_root	./subversion/libsvn_fs/tree.c	/^svn_fs_is_revision_root (svn_fs_root_t *root)$/;"	f
+svn_fs_is_txn_root	./subversion/libsvn_fs/tree.c	/^svn_fs_is_txn_root (svn_fs_root_t *root)$/;"	f
+svn_fs_list_transactions	./subversion/libsvn_fs/revs-txns.c	/^svn_fs_list_transactions (apr_array_header_t **names_p,$/;"	f
+svn_fs_make_dir	./subversion/libsvn_fs/tree.c	/^svn_fs_make_dir (svn_fs_root_t *root,$/;"	f
+svn_fs_make_file	./subversion/libsvn_fs/tree.c	/^svn_fs_make_file (svn_fs_root_t *root,$/;"	f
+svn_fs_merge	./subversion/libsvn_fs/tree.c	/^svn_fs_merge (const char **conflict_p,$/;"	f
+svn_fs_new	./subversion/libsvn_fs/fs.c	/^svn_fs_new (apr_hash_t *fs_config, apr_pool_t *parent_pool)$/;"	f
+svn_fs_node_created_path	./subversion/libsvn_fs/tree.c	/^svn_fs_node_created_path (const char **created_path,$/;"	f
+svn_fs_node_created_rev	./subversion/libsvn_fs/tree.c	/^svn_fs_node_created_rev (svn_revnum_t *revision,$/;"	f
+svn_fs_node_history	./subversion/libsvn_fs/tree.c	/^svn_error_t *svn_fs_node_history (svn_fs_history_t **history_p,$/;"	f
+svn_fs_node_id	./subversion/libsvn_fs/tree.c	/^svn_fs_node_id (const svn_fs_id_t **id_p,$/;"	f
+svn_fs_node_prop	./subversion/libsvn_fs/tree.c	/^svn_fs_node_prop (svn_string_t **value_p,$/;"	f
+svn_fs_node_proplist	./subversion/libsvn_fs/tree.c	/^svn_fs_node_proplist (apr_hash_t **table_p,$/;"	f
+svn_fs_open_berkeley	./subversion/libsvn_fs/fs.c	/^svn_fs_open_berkeley (svn_fs_t *fs, const char *path)$/;"	f
+svn_fs_open_txn	./subversion/libsvn_fs/revs-txns.c	/^svn_fs_open_txn (svn_fs_txn_t **txn_p,$/;"	f
+svn_fs_parse_id	./subversion/libsvn_fs/id.c	/^svn_fs_parse_id (const char *data,$/;"	f
+svn_fs_path_change_add	./subversion/include/svn_fs.h	/^  svn_fs_path_change_add,$/;"	e
+svn_fs_path_change_delete	./subversion/include/svn_fs.h	/^  svn_fs_path_change_delete,$/;"	e
+svn_fs_path_change_kind_t	./subversion/include/svn_fs.h	/^} svn_fs_path_change_kind_t;$/;"	t
+svn_fs_path_change_modify	./subversion/include/svn_fs.h	/^  svn_fs_path_change_modify = 0,$/;"	e
+svn_fs_path_change_replace	./subversion/include/svn_fs.h	/^  svn_fs_path_change_replace,$/;"	e
+svn_fs_path_change_reset	./subversion/include/svn_fs.h	/^  svn_fs_path_change_reset$/;"	e
+svn_fs_path_change_t	./subversion/include/svn_fs.h	/^typedef struct svn_fs_path_change_t$/;"	s
+svn_fs_path_change_t	./subversion/include/svn_fs.h	/^} svn_fs_path_change_t;$/;"	t
+svn_fs_paths_changed	./subversion/libsvn_fs/tree.c	/^svn_fs_paths_changed (apr_hash_t **changed_paths_p,$/;"	f
+svn_fs_props_changed	./subversion/libsvn_fs/tree.c	/^svn_fs_props_changed (svn_boolean_t *changed_p,$/;"	f
+svn_fs_purge_txn	./subversion/libsvn_fs/revs-txns.c	/^svn_fs_purge_txn (svn_fs_t *fs,$/;"	f
+svn_fs_revision_link	./subversion/libsvn_fs/tree.c	/^svn_fs_revision_link (svn_fs_root_t *from_root,$/;"	f
+svn_fs_revision_prop	./subversion/libsvn_fs/revs-txns.c	/^svn_fs_revision_prop (svn_string_t **value_p,$/;"	f
+svn_fs_revision_proplist	./subversion/libsvn_fs/revs-txns.c	/^svn_fs_revision_proplist (apr_hash_t **table_p,$/;"	f
+svn_fs_revision_root	./subversion/libsvn_fs/tree.c	/^svn_fs_revision_root (svn_fs_root_t **root_p,$/;"	f
+svn_fs_revision_root_revision	./subversion/libsvn_fs/tree.c	/^svn_fs_revision_root_revision (svn_fs_root_t *root)$/;"	f
+svn_fs_root_fs	./subversion/libsvn_fs/tree.c	/^svn_fs_root_fs (svn_fs_root_t *root)$/;"	f
+svn_fs_root_t	./subversion/include/svn_fs.h	/^typedef struct svn_fs_root_t svn_fs_root_t;$/;"	t
+svn_fs_root_t	./subversion/libsvn_fs/tree.c	/^struct svn_fs_root_t$/;"	s	file:
+svn_fs_set_berkeley_errcall	./subversion/libsvn_fs/fs.c	/^svn_fs_set_berkeley_errcall (svn_fs_t *fs, $/;"	f
+svn_fs_set_uuid	./subversion/libsvn_fs/uuid.c	/^svn_fs_set_uuid (svn_fs_t *fs,$/;"	f
+svn_fs_set_warning_func	./subversion/libsvn_fs/fs.c	/^svn_fs_set_warning_func (svn_fs_t *fs,$/;"	f
+svn_fs_t	./subversion/include/svn_fs.h	/^typedef struct svn_fs_t svn_fs_t;$/;"	t
+svn_fs_t	./subversion/libsvn_fs/fs.h	/^struct svn_fs_t $/;"	s
+svn_fs_txn_base_revision	./subversion/libsvn_fs/revs-txns.c	/^svn_fs_txn_base_revision (svn_fs_txn_t *txn)$/;"	f
+svn_fs_txn_name	./subversion/libsvn_fs/revs-txns.c	/^svn_fs_txn_name (const char **name_p,$/;"	f
+svn_fs_txn_prop	./subversion/libsvn_fs/revs-txns.c	/^svn_fs_txn_prop (svn_string_t **value_p,$/;"	f
+svn_fs_txn_proplist	./subversion/libsvn_fs/revs-txns.c	/^svn_fs_txn_proplist (apr_hash_t **table_p,$/;"	f
+svn_fs_txn_root	./subversion/libsvn_fs/tree.c	/^svn_fs_txn_root (svn_fs_root_t **root_p,$/;"	f
+svn_fs_txn_root_name	./subversion/libsvn_fs/tree.c	/^svn_fs_txn_root_name (svn_fs_root_t *root,$/;"	f
+svn_fs_txn_t	./subversion/include/svn_fs.h	/^typedef struct svn_fs_txn_t svn_fs_txn_t;$/;"	t
+svn_fs_txn_t	./subversion/libsvn_fs/revs-txns.h	/^struct svn_fs_txn_t$/;"	s
+svn_fs_unparse_id	./subversion/libsvn_fs/id.c	/^svn_fs_unparse_id (const svn_fs_id_t *id,$/;"	f
+svn_fs_warning_callback_t	./subversion/include/svn_fs.h	/^typedef void (*svn_fs_warning_callback_t) (void *baton, svn_error_t *err);$/;"	t
+svn_fs_youngest_rev	./subversion/libsvn_fs/revs-txns.c	/^svn_fs_youngest_rev (svn_revnum_t *youngest_p,$/;"	f
+svn_gssapi_unwrap	./subversion/libsvn_ra_svn/gssapi.c	/^static svn_error_t *svn_gssapi_unwrap(svn_ra_svn_conn_t *conn,$/;"	f	file:
+svn_gssapi_wrap	./subversion/libsvn_ra_svn/gssapi.c	/^static svn_error_t *svn_gssapi_wrap(svn_ra_svn_conn_t *conn,$/;"	f	file:
+svn_handle_error	./subversion/libsvn_subr/error.c	/^svn_handle_error (svn_error_t *err, FILE *stream, svn_boolean_t fatal)$/;"	f
+svn_handle_warning	./subversion/libsvn_subr/error.c	/^svn_handle_warning (FILE *stream, svn_error_t *err)$/;"	f
+svn_hash_diff	./subversion/libsvn_subr/hash.c	/^svn_hash_diff (apr_hash_t *hash_a,$/;"	f
+svn_hash_diff_func_t	./subversion/include/svn_hash.h	/^typedef svn_error_t *(*svn_hash_diff_func_t)$/;"	t
+svn_hash_diff_key_a	./subversion/include/svn_hash.h	/^    svn_hash_diff_key_a,$/;"	e	enum:svn_hash_diff_key_status
+svn_hash_diff_key_b	./subversion/include/svn_hash.h	/^    svn_hash_diff_key_b$/;"	e	enum:svn_hash_diff_key_status
+svn_hash_diff_key_both	./subversion/include/svn_hash.h	/^    svn_hash_diff_key_both,$/;"	e	enum:svn_hash_diff_key_status
+svn_hash_diff_key_status	./subversion/include/svn_hash.h	/^enum svn_hash_diff_key_status$/;"	g
+svn_hash_read	./subversion/libsvn_subr/hash.c	/^svn_hash_read (apr_hash_t *hash, $/;"	f
+svn_hash_write	./subversion/libsvn_subr/hash.c	/^svn_hash_write (apr_hash_t *hash, $/;"	f
+svn_io__file_clear_and_close	./subversion/libsvn_subr/io.c	/^svn_io__file_clear_and_close (void *arg)$/;"	f	file:
+svn_io_append_file	./subversion/libsvn_subr/io.c	/^svn_io_append_file (const char *src, const char *dst, apr_pool_t *pool)$/;"	f
+svn_io_check_path	./subversion/libsvn_subr/io.c	/^svn_io_check_path (const char *path,$/;"	f
+svn_io_check_resolved_path	./subversion/libsvn_subr/io.c	/^svn_io_check_resolved_path (const char *path,$/;"	f
+svn_io_copy_dir_recursively	./subversion/libsvn_subr/io.c	/^svn_error_t *svn_io_copy_dir_recursively (const char *src,$/;"	f
+svn_io_copy_file	./subversion/libsvn_subr/io.c	/^svn_io_copy_file (const char *src,$/;"	f
+svn_io_detect_mimetype	./subversion/libsvn_subr/io.c	/^svn_io_detect_mimetype (const char **mimetype,$/;"	f
+svn_io_dir_empty	./subversion/libsvn_subr/io.c	/^svn_io_dir_empty (svn_boolean_t *is_empty_p,$/;"	f
+svn_io_dir_file_copy	./subversion/libsvn_subr/io.c	/^svn_error_t *svn_io_dir_file_copy (const char *src_path, $/;"	f
+svn_io_dir_make	./subversion/libsvn_subr/io.c	/^svn_io_dir_make (const char *path, apr_fileperms_t perm, apr_pool_t *pool)$/;"	f
+svn_io_dir_make_hidden	./subversion/libsvn_subr/io.c	/^svn_io_dir_make_hidden (const char *path, apr_fileperms_t perm,$/;"	f
+svn_io_dir_open	./subversion/libsvn_subr/io.c	/^svn_io_dir_open (apr_dir_t **new_dir, const char *dirname, apr_pool_t *pool)$/;"	f
+svn_io_dir_read	./subversion/libsvn_subr/io.c	/^svn_io_dir_read (apr_finfo_t *finfo,$/;"	f
+svn_io_dir_remove_nonrecursive	./subversion/libsvn_subr/io.c	/^svn_io_dir_remove_nonrecursive (const char *dirname, apr_pool_t *pool)$/;"	f
+svn_io_dir_walk	./subversion/libsvn_subr/io.c	/^svn_io_dir_walk (const char *dirname,$/;"	f
+svn_io_file_affected_time	./subversion/libsvn_subr/io.c	/^svn_io_file_affected_time (apr_time_t *apr_time,$/;"	f
+svn_io_file_checksum	./subversion/libsvn_subr/io.c	/^svn_io_file_checksum (unsigned char digest[],$/;"	f
+svn_io_file_close	./subversion/libsvn_subr/io.c	/^svn_io_file_close (apr_file_t *file, apr_pool_t *pool)$/;"	f
+svn_io_file_create	./subversion/libsvn_subr/io.c	/^svn_error_t *svn_io_file_create (const char *file,$/;"	f
+svn_io_file_getc	./subversion/libsvn_subr/io.c	/^svn_io_file_getc (char *ch, apr_file_t *file, apr_pool_t *pool)$/;"	f
+svn_io_file_info_get	./subversion/libsvn_subr/io.c	/^svn_io_file_info_get (apr_finfo_t *finfo, apr_int32_t wanted, $/;"	f
+svn_io_file_lock	./subversion/libsvn_subr/io.c	/^svn_error_t *svn_io_file_lock (const char *lock_file,$/;"	f
+svn_io_file_open	./subversion/libsvn_subr/io.c	/^svn_io_file_open (apr_file_t **new_file, const char *fname,$/;"	f
+svn_io_file_read	./subversion/libsvn_subr/io.c	/^svn_io_file_read (apr_file_t *file, void *buf, $/;"	f
+svn_io_file_read_full	./subversion/libsvn_subr/io.c	/^svn_io_file_read_full (apr_file_t *file, void *buf, $/;"	f
+svn_io_file_rename	./subversion/libsvn_subr/io.c	/^svn_io_file_rename (const char *from_path, const char *to_path,$/;"	f
+svn_io_file_seek	./subversion/libsvn_subr/io.c	/^svn_io_file_seek (apr_file_t *file, apr_seek_where_t where, $/;"	f
+svn_io_file_write	./subversion/libsvn_subr/io.c	/^svn_io_file_write (apr_file_t *file, const void *buf, $/;"	f
+svn_io_file_write_full	./subversion/libsvn_subr/io.c	/^svn_io_file_write_full (apr_file_t *file, const void *buf, $/;"	f
+svn_io_files_contents_same_p	./subversion/libsvn_subr/io.c	/^svn_io_files_contents_same_p (svn_boolean_t *same,$/;"	f
+svn_io_filesizes_different_p	./subversion/libsvn_subr/io.c	/^svn_io_filesizes_different_p (svn_boolean_t *different_p,$/;"	f
+svn_io_get_dirents	./subversion/libsvn_subr/io.c	/^svn_io_get_dirents (apr_hash_t **dirents,$/;"	f
+svn_io_is_file_executable	./subversion/libsvn_subr/io.c	/^svn_io_is_file_executable(svn_boolean_t *executable, $/;"	f
+svn_io_make_dir_recursively	./subversion/libsvn_subr/io.c	/^svn_io_make_dir_recursively (const char *path, apr_pool_t *pool)$/;"	f
+svn_io_open_unique_file	./subversion/libsvn_subr/io.c	/^svn_io_open_unique_file (apr_file_t **f,$/;"	f
+svn_io_read_length_line	./subversion/libsvn_subr/io.c	/^svn_io_read_length_line (apr_file_t *file, char *buf, apr_size_t *limit,$/;"	f
+svn_io_read_version_file	./subversion/libsvn_subr/io.c	/^svn_io_read_version_file (int *version,$/;"	f
+svn_io_remove_dir	./subversion/libsvn_subr/io.c	/^svn_io_remove_dir (const char *path, apr_pool_t *pool)$/;"	f
+svn_io_remove_file	./subversion/libsvn_subr/io.c	/^svn_io_remove_file (const char *path, apr_pool_t *pool)$/;"	f
+svn_io_run_cmd	./subversion/libsvn_subr/io.c	/^svn_io_run_cmd (const char *path,$/;"	f
+svn_io_run_diff	./subversion/libsvn_subr/io.c	/^svn_io_run_diff (const char *dir, $/;"	f
+svn_io_run_diff3	./subversion/libsvn_subr/io.c	/^svn_io_run_diff3 (const char *dir,$/;"	f
+svn_io_set_file_affected_time	./subversion/libsvn_subr/io.c	/^svn_io_set_file_affected_time (apr_time_t apr_time,$/;"	f
+svn_io_set_file_executable	./subversion/libsvn_subr/io.c	/^svn_io_set_file_executable (const char *path,$/;"	f
+svn_io_set_file_read_only	./subversion/libsvn_subr/io.c	/^svn_io_set_file_read_only (const char *path,$/;"	f
+svn_io_set_file_read_write	./subversion/libsvn_subr/io.c	/^svn_io_set_file_read_write (const char *path,$/;"	f
+svn_io_stat	./subversion/libsvn_subr/io.c	/^svn_io_stat (apr_finfo_t *finfo, const char *fname,$/;"	f
+svn_io_temp_dir	./subversion/libsvn_subr/io.c	/^svn_io_temp_dir (const char **dir,$/;"	f
+svn_io_walk_func_t	./subversion/include/svn_io.h	/^typedef svn_error_t * (*svn_io_walk_func_t) (void *baton,$/;"	t
+svn_io_write_version_file	./subversion/libsvn_subr/io.c	/^svn_io_write_version_file (const char *path,$/;"	f
+svn_iswhitespace	./subversion/libsvn_ra_svn/marshal.c	41;"	d	file:
+svn_log_changed_path_t	./subversion/include/svn_types.h	/^typedef struct svn_log_changed_path_t$/;"	s
+svn_log_changed_path_t	./subversion/include/svn_types.h	/^} svn_log_changed_path_t;$/;"	t
+svn_log_message_receiver_t	./subversion/include/svn_types.h	/^typedef svn_error_t *(*svn_log_message_receiver_t)$/;"	t
+svn_md5__empty_string_digest	./subversion/libsvn_subr/md5.c	/^static const unsigned char svn_md5__empty_string_digest[] = {$/;"	v	file:
+svn_md5_digest_to_cstring	./subversion/libsvn_subr/md5.c	/^svn_md5_digest_to_cstring (const unsigned char digest[], apr_pool_t *pool)$/;"	f
+svn_md5_digests_match	./subversion/libsvn_subr/md5.c	/^svn_md5_digests_match (unsigned const char d1[], unsigned const char d2[])$/;"	f
+svn_md5_empty_string_digest	./subversion/libsvn_subr/md5.c	/^svn_md5_empty_string_digest (void)$/;"	f
+svn_mime_type_is_binary	./subversion/libsvn_subr/validate.c	/^svn_mime_type_is_binary (const char *mime_type)$/;"	f
+svn_mime_type_validate	./subversion/libsvn_subr/validate.c	/^svn_mime_type_validate (const char *mime_type, apr_pool_t *pool)$/;"	f
+svn_node_action	./subversion/include/svn_repos.h	/^enum svn_node_action$/;"	g
+svn_node_action_add	./subversion/include/svn_repos.h	/^  svn_node_action_add,$/;"	e	enum:svn_node_action
+svn_node_action_change	./subversion/include/svn_repos.h	/^  svn_node_action_change,$/;"	e	enum:svn_node_action
+svn_node_action_delete	./subversion/include/svn_repos.h	/^  svn_node_action_delete,$/;"	e	enum:svn_node_action
+svn_node_action_replace	./subversion/include/svn_repos.h	/^  svn_node_action_replace$/;"	e	enum:svn_node_action
+svn_node_dir	./subversion/include/svn_types.h	/^  svn_node_dir,$/;"	e
+svn_node_file	./subversion/include/svn_types.h	/^  svn_node_file,$/;"	e
+svn_node_kind_t	./subversion/include/svn_types.h	/^} svn_node_kind_t;$/;"	t
+svn_node_none	./subversion/include/svn_types.h	/^  svn_node_none,$/;"	e
+svn_node_unknown	./subversion/include/svn_types.h	/^  svn_node_unknown$/;"	e
+svn_nonrecursive	./subversion/include/svn_types.h	/^  svn_nonrecursive = 1,$/;"	e	enum:svn_recurse_kind
+svn_opt_args_to_target_array	./subversion/libsvn_subr/opt.c	/^svn_opt_args_to_target_array (apr_array_header_t **targets_p, $/;"	f
+svn_opt_format_option	./subversion/libsvn_subr/opt.c	/^svn_opt_format_option (const char **string,$/;"	f
+svn_opt_get_canonical_subcommand	./subversion/libsvn_subr/opt.c	/^svn_opt_get_canonical_subcommand (const svn_opt_subcommand_desc_t *table,$/;"	f
+svn_opt_get_option_from_code	./subversion/libsvn_subr/opt.c	/^svn_opt_get_option_from_code (int code,$/;"	f
+svn_opt_parse_all_args	./subversion/libsvn_subr/opt.c	/^svn_opt_parse_all_args (apr_array_header_t **args_p,$/;"	f
+svn_opt_parse_num_args	./subversion/libsvn_subr/opt.c	/^svn_opt_parse_num_args (apr_array_header_t **args_p,$/;"	f
+svn_opt_parse_revision	./subversion/libsvn_subr/opt.c	/^svn_opt_parse_revision (svn_opt_revision_t *start_revision,$/;"	f
+svn_opt_print_generic_help	./subversion/libsvn_subr/opt.c	/^svn_opt_print_generic_help (const char *header,$/;"	f
+svn_opt_print_help	./subversion/libsvn_subr/opt.c	/^svn_opt_print_help (apr_getopt_t *os,$/;"	f
+svn_opt_push_implicit_dot_target	./subversion/libsvn_subr/opt.c	/^svn_opt_push_implicit_dot_target (apr_array_header_t *targets, $/;"	f
+svn_opt_revision_base	./subversion/include/svn_opt.h	/^  svn_opt_revision_base,$/;"	e	enum:svn_opt_revision_kind
+svn_opt_revision_committed	./subversion/include/svn_opt.h	/^  svn_opt_revision_committed,$/;"	e	enum:svn_opt_revision_kind
+svn_opt_revision_date	./subversion/include/svn_opt.h	/^  svn_opt_revision_date,$/;"	e	enum:svn_opt_revision_kind
+svn_opt_revision_head	./subversion/include/svn_opt.h	/^  svn_opt_revision_head$/;"	e	enum:svn_opt_revision_kind
+svn_opt_revision_kind	./subversion/include/svn_opt.h	/^enum svn_opt_revision_kind {$/;"	g
+svn_opt_revision_number	./subversion/include/svn_opt.h	/^  svn_opt_revision_number,$/;"	e	enum:svn_opt_revision_kind
+svn_opt_revision_previous	./subversion/include/svn_opt.h	/^  svn_opt_revision_previous,$/;"	e	enum:svn_opt_revision_kind
+svn_opt_revision_t	./subversion/include/svn_opt.h	/^typedef struct svn_opt_revision_t$/;"	s
+svn_opt_revision_t	./subversion/include/svn_opt.h	/^} svn_opt_revision_t;$/;"	t
+svn_opt_revision_unspecified	./subversion/include/svn_opt.h	/^  svn_opt_revision_unspecified,$/;"	e	enum:svn_opt_revision_kind
+svn_opt_revision_working	./subversion/include/svn_opt.h	/^  svn_opt_revision_working,$/;"	e	enum:svn_opt_revision_kind
+svn_opt_subcommand_desc_t	./subversion/include/svn_opt.h	/^typedef struct svn_opt_subcommand_desc_t$/;"	s
+svn_opt_subcommand_desc_t	./subversion/include/svn_opt.h	/^} svn_opt_subcommand_desc_t;$/;"	t
+svn_opt_subcommand_help	./subversion/libsvn_subr/opt.c	/^svn_opt_subcommand_help (const char *subcommand,$/;"	f
+svn_opt_subcommand_t	./subversion/include/svn_opt.h	/^typedef svn_error_t *(svn_opt_subcommand_t)$/;"	t
+svn_opt_subcommand_takes_option	./subversion/libsvn_subr/opt.c	/^svn_opt_subcommand_takes_option (const svn_opt_subcommand_desc_t *command,$/;"	f
+svn_os_is_nt	./packages/win32-innosetup/tools/svnpath/main.c	/^svn_os_is_nt()$/;"	f
+svn_parse_date	./subversion/libsvn_subr/date.c	/^svn_parse_date (svn_boolean_t *matched, apr_time_t *result, const char *text,$/;"	f
+svn_path_add_component	./subversion/libsvn_subr/path.c	/^svn_path_add_component (svn_stringbuf_t *path, $/;"	f
+svn_path_basename	./subversion/libsvn_subr/path.c	/^svn_path_basename (const char *path, apr_pool_t *pool)$/;"	f
+svn_path_canonicalize	./subversion/libsvn_subr/path.c	/^svn_path_canonicalize (const char *path, apr_pool_t *pool)$/;"	f
+svn_path_compare_paths	./subversion/libsvn_subr/path.c	/^svn_path_compare_paths (const char *path1,$/;"	f
+svn_path_condense_targets	./subversion/libsvn_subr/target.c	/^svn_path_condense_targets (const char **pcommon,$/;"	f
+svn_path_cstring_from_utf8	./subversion/libsvn_subr/path.c	/^svn_path_cstring_from_utf8 (const char **path_apr,$/;"	f
+svn_path_cstring_to_utf8	./subversion/libsvn_subr/path.c	/^svn_path_cstring_to_utf8 (const char **path_utf8,$/;"	f
+svn_path_decompose	./subversion/libsvn_subr/path.c	/^svn_path_decompose (const char *path,$/;"	f
+svn_path_dirname	./subversion/libsvn_subr/path.c	/^svn_path_dirname (const char *path, apr_pool_t *pool)$/;"	f
+svn_path_get_absolute	./subversion/libsvn_subr/path.c	/^svn_path_get_absolute(const char **pabsolute,$/;"	f
+svn_path_get_longest_ancestor	./subversion/libsvn_subr/path.c	/^svn_path_get_longest_ancestor (const char *path1,$/;"	f
+svn_path_internal_style	./subversion/libsvn_subr/path.c	/^svn_path_internal_style (const char *path, apr_pool_t *pool)$/;"	f
+svn_path_is_child	./subversion/libsvn_subr/path.c	/^svn_path_is_child (const char *path1,$/;"	f
+svn_path_is_empty	./subversion/libsvn_subr/path.c	/^svn_path_is_empty (const char *path)$/;"	f
+svn_path_is_single_path_component	./subversion/libsvn_subr/path.c	/^svn_path_is_single_path_component (const char *name)$/;"	f
+svn_path_is_uri_safe	./subversion/libsvn_subr/path.c	/^svn_path_is_uri_safe (const char *path)$/;"	f
+svn_path_is_url	./subversion/libsvn_subr/path.c	/^svn_path_is_url (const char *path)$/;"	f
+svn_path_join	./subversion/libsvn_subr/path.c	/^char *svn_path_join (const char *base,$/;"	f
+svn_path_join_many	./subversion/libsvn_subr/path.c	/^char *svn_path_join_many (apr_pool_t *pool, const char *base, ...)$/;"	f
+svn_path_local_style	./subversion/libsvn_subr/path.c	/^svn_path_local_style (const char *path, apr_pool_t *pool)$/;"	f
+svn_path_remove_component	./subversion/libsvn_subr/path.c	/^svn_path_remove_component (svn_stringbuf_t *path)$/;"	f
+svn_path_remove_redundancies	./subversion/libsvn_subr/target.c	/^svn_path_remove_redundancies (apr_array_header_t **pcondensed_targets,$/;"	f
+svn_path_split	./subversion/libsvn_subr/path.c	/^svn_path_split (const char *path,$/;"	f
+svn_path_split_if_file	./subversion/libsvn_subr/path.c	/^svn_path_split_if_file(const char *path,$/;"	f
+svn_path_uri_decode	./subversion/libsvn_subr/path.c	/^svn_path_uri_decode (const char *path, apr_pool_t *pool)$/;"	f
+svn_path_uri_encode	./subversion/libsvn_subr/path.c	/^svn_path_uri_encode (const char *path, apr_pool_t *pool)$/;"	f
+svn_path_url_add_component	./subversion/libsvn_subr/path.c	/^svn_path_url_add_component (const char *url,$/;"	f
+svn_pool_clear	./subversion/include/svn_pools.h	76;"	d
+svn_pool_create	./subversion/include/svn_pools.h	70;"	d
+svn_pool_create_ex	./subversion/include/svn_pools.h	62;"	d
+svn_pool_create_ex	./subversion/libsvn_subr/pool.c	/^svn_pool_create_ex (apr_pool_t *parent_pool, apr_allocator_t *allocator)$/;"	f
+svn_pool_create_ex	./subversion/libsvn_subr/pool.c	/^svn_pool_create_ex (apr_pool_t *pool, apr_allocator_t *allocator)$/;"	f
+svn_pool_create_ex	./subversion/libsvn_subr/pool.c	54;"	d	file:
+svn_pool_create_ex_debug	./subversion/libsvn_subr/pool.c	/^svn_pool_create_ex_debug (apr_pool_t *parent_pool, apr_allocator_t *allocator,$/;"	f
+svn_pool_create_ex_debug	./subversion/libsvn_subr/pool.c	/^svn_pool_create_ex_debug (apr_pool_t *pool, apr_allocator_t *allocator,$/;"	f
+svn_pool_destroy	./subversion/include/svn_pools.h	84;"	d
+svn_print_help	./packages/win32-innosetup/tools/svnpath/main.c	/^svn_print_help()$/;"	f
+svn_prop_diffs	./subversion/libsvn_subr/sorts.c	/^svn_prop_diffs (apr_array_header_t **propdiffs,$/;"	f
+svn_prop_entry_kind	./subversion/include/svn_props.h	/^  svn_prop_entry_kind,$/;"	e	enum:svn_prop_kind
+svn_prop_is_svn_prop	./subversion/libsvn_subr/sorts.c	/^svn_prop_is_svn_prop (const char *prop_name)$/;"	f
+svn_prop_kind	./subversion/include/svn_props.h	/^typedef enum svn_prop_kind$/;"	g
+svn_prop_kind_t	./subversion/include/svn_props.h	/^} svn_prop_kind_t;$/;"	t
+svn_prop_needs_translation	./subversion/libsvn_subr/sorts.c	/^svn_prop_needs_translation (const char *propname)$/;"	f
+svn_prop_regular_kind	./subversion/include/svn_props.h	/^  svn_prop_regular_kind $/;"	e	enum:svn_prop_kind
+svn_prop_t	./subversion/include/svn_props.h	/^typedef struct svn_prop_t$/;"	s
+svn_prop_t	./subversion/include/svn_props.h	/^} svn_prop_t;$/;"	t
+svn_prop_wc_kind	./subversion/include/svn_props.h	/^  svn_prop_wc_kind,$/;"	e	enum:svn_prop_kind
+svn_property_kind	./subversion/libsvn_subr/sorts.c	/^svn_property_kind (int *prefix_len,$/;"	f
+svn_quoprint_decode	./subversion/libsvn_subr/quoprint.c	/^svn_quoprint_decode (svn_stream_t *output, apr_pool_t *pool)$/;"	f
+svn_quoprint_decode_string	./subversion/libsvn_subr/quoprint.c	/^svn_quoprint_decode_string (svn_stringbuf_t *str, apr_pool_t *pool)$/;"	f
+svn_quoprint_encode	./subversion/libsvn_subr/quoprint.c	/^svn_quoprint_encode (svn_stream_t *output, apr_pool_t *pool)$/;"	f
+svn_quoprint_encode_string	./subversion/libsvn_subr/quoprint.c	/^svn_quoprint_encode_string (svn_stringbuf_t *str, apr_pool_t *pool)$/;"	f
+svn_ra_callbacks_t	./subversion/include/svn_ra.h	/^typedef struct svn_ra_callbacks_t$/;"	s
+svn_ra_callbacks_t	./subversion/include/svn_ra.h	/^} svn_ra_callbacks_t;$/;"	t
+svn_ra_conn_filter_st	./subversion/libsvn_ra_svn/ra_svn.h	/^struct svn_ra_conn_filter_st {$/;"	s
+svn_ra_dav__change_rev_prop	./subversion/libsvn_ra_dav/fetch.c	/^svn_error_t *svn_ra_dav__change_rev_prop (void *session_baton,$/;"	f
+svn_ra_dav__checked_in_prop	./subversion/libsvn_ra_dav/props.c	/^const ne_propname svn_ra_dav__checked_in_prop = {$/;"	v
+svn_ra_dav__convert_error	./subversion/libsvn_ra_dav/util.c	/^svn_error_t *svn_ra_dav__convert_error(ne_session *sess,$/;"	f
+svn_ra_dav__copy_href	./subversion/libsvn_ra_dav/util.c	/^void svn_ra_dav__copy_href(svn_stringbuf_t *dst, const char *src)$/;"	f
+svn_ra_dav__do_check_path	./subversion/libsvn_ra_dav/props.c	/^svn_ra_dav__do_check_path(void *session_baton,$/;"	f
+svn_ra_dav__do_diff	./subversion/libsvn_ra_dav/fetch.c	/^svn_error_t * svn_ra_dav__do_diff(void *session_baton,$/;"	f
+svn_ra_dav__do_get_uuid	./subversion/libsvn_ra_dav/session.c	/^static svn_error_t *svn_ra_dav__do_get_uuid(void *session_baton,$/;"	f	file:
+svn_ra_dav__do_proppatch	./subversion/libsvn_ra_dav/props.c	/^svn_ra_dav__do_proppatch (svn_ra_session_t *ras,$/;"	f
+svn_ra_dav__do_status	./subversion/libsvn_ra_dav/fetch.c	/^svn_error_t * svn_ra_dav__do_status(void *session_baton,$/;"	f
+svn_ra_dav__do_switch	./subversion/libsvn_ra_dav/fetch.c	/^svn_error_t * svn_ra_dav__do_switch(void *session_baton,$/;"	f
+svn_ra_dav__do_update	./subversion/libsvn_ra_dav/fetch.c	/^svn_error_t * svn_ra_dav__do_update(void *session_baton,$/;"	f
+svn_ra_dav__get_activity_collection	./subversion/libsvn_ra_dav/options.c	/^svn_error_t * svn_ra_dav__get_activity_collection($/;"	f
+svn_ra_dav__get_baseline_info	./subversion/libsvn_ra_dav/props.c	/^svn_error_t *svn_ra_dav__get_baseline_info(svn_boolean_t *is_dir,$/;"	f
+svn_ra_dav__get_baseline_props	./subversion/libsvn_ra_dav/props.c	/^svn_error_t *svn_ra_dav__get_baseline_props(svn_string_t *bc_relative,$/;"	f
+svn_ra_dav__get_commit_editor	./subversion/libsvn_ra_dav/commit.c	/^svn_error_t * svn_ra_dav__get_commit_editor(void *session_baton,$/;"	f
+svn_ra_dav__get_dated_revision	./subversion/libsvn_ra_dav/fetch.c	/^svn_error_t *svn_ra_dav__get_dated_revision (void *session_baton,$/;"	f
+svn_ra_dav__get_dir	./subversion/libsvn_ra_dav/fetch.c	/^svn_error_t *svn_ra_dav__get_dir(void *session_baton,$/;"	f
+svn_ra_dav__get_file	./subversion/libsvn_ra_dav/fetch.c	/^svn_error_t *svn_ra_dav__get_file(void *session_baton,$/;"	f
+svn_ra_dav__get_latest_revnum	./subversion/libsvn_ra_dav/fetch.c	/^svn_error_t *svn_ra_dav__get_latest_revnum(void *session_baton,$/;"	f
+svn_ra_dav__get_log	./subversion/libsvn_ra_dav/log.c	/^svn_error_t * svn_ra_dav__get_log(void *session_baton,$/;"	f
+svn_ra_dav__get_one_prop	./subversion/libsvn_ra_dav/props.c	/^svn_error_t * svn_ra_dav__get_one_prop(const svn_string_t **propval,$/;"	f
+svn_ra_dav__get_props	./subversion/libsvn_ra_dav/props.c	/^svn_error_t * svn_ra_dav__get_props(apr_hash_t **results,$/;"	f
+svn_ra_dav__get_props_resource	./subversion/libsvn_ra_dav/props.c	/^svn_error_t * svn_ra_dav__get_props_resource(svn_ra_dav_resource_t **rsrc,$/;"	f
+svn_ra_dav__get_repos_root	./subversion/libsvn_ra_dav/session.c	/^static svn_error_t *svn_ra_dav__get_repos_root(void *session_baton,$/;"	f	file:
+svn_ra_dav__get_starting_props	./subversion/libsvn_ra_dav/props.c	/^svn_error_t * svn_ra_dav__get_starting_props(svn_ra_dav_resource_t **rsrc,$/;"	f
+svn_ra_dav__get_vcc	./subversion/libsvn_ra_dav/props.c	/^svn_error_t *svn_ra_dav__get_vcc(const char **vcc,$/;"	f
+svn_ra_dav__lookup_xml_elem	./subversion/libsvn_ra_dav/util.c	/^svn_ra_dav__lookup_xml_elem(const svn_ra_dav__xml_elm_t *table,$/;"	f
+svn_ra_dav__maybe_store_auth_info	./subversion/libsvn_ra_dav/util.c	/^svn_ra_dav__maybe_store_auth_info(svn_ra_session_t *ras)$/;"	f
+svn_ra_dav__merge_activity	./subversion/libsvn_ra_dav/merge.c	/^svn_error_t * svn_ra_dav__merge_activity($/;"	f
+svn_ra_dav__open	./subversion/libsvn_ra_dav/session.c	/^svn_ra_dav__open (void **session_baton,$/;"	f	file:
+svn_ra_dav__parsed_request	./subversion/libsvn_ra_dav/util.c	/^svn_ra_dav__parsed_request(ne_session *sess,$/;"	f
+svn_ra_dav__parsed_request_compat	./subversion/libsvn_ra_dav/util.c	/^svn_ra_dav__parsed_request_compat(ne_session *sess,$/;"	f
+svn_ra_dav__request_dispatch	./subversion/libsvn_ra_dav/util.c	/^svn_ra_dav__request_dispatch(int *code_p,$/;"	f
+svn_ra_dav__rev_prop	./subversion/libsvn_ra_dav/fetch.c	/^svn_error_t *svn_ra_dav__rev_prop (void *session_baton,$/;"	f
+svn_ra_dav__rev_proplist	./subversion/libsvn_ra_dav/fetch.c	/^svn_error_t *svn_ra_dav__rev_proplist (void *session_baton,$/;"	f
+svn_ra_dav__search_for_starting_props	./subversion/libsvn_ra_dav/props.c	/^svn_ra_dav__search_for_starting_props(svn_ra_dav_resource_t **rsrc,$/;"	f
+svn_ra_dav__set_neon_body_provider	./subversion/libsvn_ra_dav/util.c	/^svn_error_t *svn_ra_dav__set_neon_body_provider(ne_request *req,$/;"	f
+svn_ra_dav__vcc_prop	./subversion/libsvn_ra_dav/props.c	/^const ne_propname svn_ra_dav__vcc_prop = {$/;"	v
+svn_ra_dav__xml_elm_t	./subversion/libsvn_ra_dav/ra_dav.h	/^} svn_ra_dav__xml_elm_t;$/;"	t
+svn_ra_dav__xml_elmid	./subversion/libsvn_ra_dav/ra_dav.h	/^typedef int svn_ra_dav__xml_elmid;$/;"	t
+svn_ra_dav__xml_endelm_cb	./subversion/libsvn_ra_dav/ra_dav.h	/^typedef int svn_ra_dav__xml_endelm_cb(void *userdata,$/;"	t
+svn_ra_dav__xml_startelm_cb	./subversion/libsvn_ra_dav/ra_dav.h	/^typedef int svn_ra_dav__xml_startelm_cb(void *userdata,$/;"	t
+svn_ra_dav__xml_validate_cb	./subversion/libsvn_ra_dav/ra_dav.h	/^typedef int svn_ra_dav__xml_validate_cb(void *userdata,$/;"	t
+svn_ra_dav_init	./subversion/libsvn_ra_dav/session.c	/^svn_error_t *svn_ra_dav_init(int abi_version,$/;"	f
+svn_ra_dav_resource_t	./subversion/libsvn_ra_dav/ra_dav.h	/^} svn_ra_dav_resource_t;$/;"	t
+svn_ra_get_latest_revnum_func_t	./subversion/include/svn_ra.h	/^typedef svn_error_t *(*svn_ra_get_latest_revnum_func_t) $/;"	t
+svn_ra_get_ra_library	./subversion/libsvn_ra/ra_loader.c	/^svn_ra_get_ra_library (svn_ra_plugin_t **library,$/;"	f
+svn_ra_get_wc_prop_func_t	./subversion/include/svn_ra.h	/^typedef svn_error_t *(*svn_ra_get_wc_prop_func_t) (void *baton,$/;"	t
+svn_ra_init_func_t	./subversion/include/svn_ra.h	/^typedef svn_error_t *(*svn_ra_init_func_t) (int abi_version,$/;"	t
+svn_ra_init_ra_libs	./subversion/libsvn_ra/ra_loader.c	/^svn_ra_init_ra_libs (void **ra_baton,$/;"	f
+svn_ra_invalidate_wc_props_func_t	./subversion/include/svn_ra.h	/^typedef svn_error_t *(*svn_ra_invalidate_wc_props_func_t) (void *baton,$/;"	t
+svn_ra_local__change_rev_prop	./subversion/libsvn_ra_local/ra_plugin.c	/^svn_ra_local__change_rev_prop (void *session_baton,$/;"	f	file:
+svn_ra_local__do_check_path	./subversion/libsvn_ra_local/ra_plugin.c	/^svn_ra_local__do_check_path (void *session_baton,$/;"	f	file:
+svn_ra_local__do_diff	./subversion/libsvn_ra_local/ra_plugin.c	/^svn_ra_local__do_diff (void *session_baton,$/;"	f	file:
+svn_ra_local__do_status	./subversion/libsvn_ra_local/ra_plugin.c	/^svn_ra_local__do_status (void *session_baton,$/;"	f	file:
+svn_ra_local__do_switch	./subversion/libsvn_ra_local/ra_plugin.c	/^svn_ra_local__do_switch (void *session_baton,$/;"	f	file:
+svn_ra_local__do_update	./subversion/libsvn_ra_local/ra_plugin.c	/^svn_ra_local__do_update (void *session_baton,$/;"	f	file:
+svn_ra_local__get_commit_editor	./subversion/libsvn_ra_local/ra_plugin.c	/^svn_ra_local__get_commit_editor (void *session_baton,$/;"	f	file:
+svn_ra_local__get_dated_revision	./subversion/libsvn_ra_local/ra_plugin.c	/^svn_ra_local__get_dated_revision (void *session_baton,$/;"	f	file:
+svn_ra_local__get_dir	./subversion/libsvn_ra_local/ra_plugin.c	/^svn_ra_local__get_dir (void *session_baton,$/;"	f	file:
+svn_ra_local__get_file	./subversion/libsvn_ra_local/ra_plugin.c	/^svn_ra_local__get_file (void *session_baton,$/;"	f	file:
+svn_ra_local__get_latest_revnum	./subversion/libsvn_ra_local/ra_plugin.c	/^svn_ra_local__get_latest_revnum (void *session_baton,$/;"	f	file:
+svn_ra_local__get_log	./subversion/libsvn_ra_local/ra_plugin.c	/^svn_ra_local__get_log (void *session_baton,$/;"	f	file:
+svn_ra_local__get_repos_root	./subversion/libsvn_ra_local/ra_plugin.c	/^svn_ra_local__get_repos_root (void *session_baton,$/;"	f	file:
+svn_ra_local__get_uuid	./subversion/libsvn_ra_local/ra_plugin.c	/^svn_ra_local__get_uuid (void *session_baton,$/;"	f	file:
+svn_ra_local__open	./subversion/libsvn_ra_local/ra_plugin.c	/^svn_ra_local__open (void **session_baton,$/;"	f	file:
+svn_ra_local__rev_prop	./subversion/libsvn_ra_local/ra_plugin.c	/^svn_ra_local__rev_prop (void *session_baton,$/;"	f	file:
+svn_ra_local__rev_proplist	./subversion/libsvn_ra_local/ra_plugin.c	/^svn_ra_local__rev_proplist (void *session_baton,$/;"	f	file:
+svn_ra_local__session_baton_t	./subversion/libsvn_ra_local/ra_local.h	/^typedef struct svn_ra_local__session_baton_t$/;"	s
+svn_ra_local__session_baton_t	./subversion/libsvn_ra_local/ra_local.h	/^} svn_ra_local__session_baton_t;$/;"	t
+svn_ra_local__split_URL	./subversion/libsvn_ra_local/split_url.c	/^svn_ra_local__split_URL (svn_repos_t **repos,$/;"	f
+svn_ra_local_init	./subversion/libsvn_ra_local/ra_plugin.c	/^svn_ra_local_init (int abi_version,$/;"	f
+svn_ra_make_callbacks	./subversion/bindings/swig/swigutil_pl.c	/^svn_error_t *svn_ra_make_callbacks(svn_ra_callbacks_t **cb,$/;"	f
+svn_ra_plugin_t	./subversion/include/svn_ra.h	/^typedef struct svn_ra_plugin_t$/;"	s
+svn_ra_plugin_t	./subversion/include/svn_ra.h	/^} svn_ra_plugin_t;$/;"	t
+svn_ra_print_ra_libraries	./subversion/libsvn_ra/ra_loader.c	/^svn_ra_print_ra_libraries (svn_stringbuf_t **descriptions,$/;"	f
+svn_ra_push_wc_prop_func_t	./subversion/include/svn_ra.h	/^typedef svn_error_t *(*svn_ra_push_wc_prop_func_t) (void *baton,$/;"	t
+svn_ra_reporter_t	./subversion/include/svn_ra.h	/^typedef struct svn_ra_reporter_t$/;"	s
+svn_ra_reporter_t	./subversion/include/svn_ra.h	/^} svn_ra_reporter_t;$/;"	t
+svn_ra_session_t	./subversion/libsvn_ra_dav/ra_dav.h	/^} svn_ra_session_t;$/;"	t
+svn_ra_set_wc_prop_func_t	./subversion/include/svn_ra.h	/^typedef svn_error_t *(*svn_ra_set_wc_prop_func_t) (void *baton,$/;"	t
+svn_ra_svn__conn_set_filter	./subversion/libsvn_ra_svn/marshal.c	/^svn_error_t *svn_ra_svn__conn_set_filter(svn_ra_svn_conn_t *conn,$/;"	f
+svn_ra_svn__cram_client	./subversion/libsvn_ra_svn/cram.c	/^svn_error_t *svn_ra_svn__cram_client(svn_ra_svn_conn_t *conn, apr_pool_t *pool,$/;"	f
+svn_ra_svn__drive_editorp	./subversion/libsvn_ra_svn/editorp.c	/^svn_error_t *svn_ra_svn__drive_editorp(svn_ra_svn_conn_t *conn,$/;"	f
+svn_ra_svn__get_editorp	./subversion/libsvn_ra_svn/editorp.c	/^void svn_ra_svn__get_editorp(const svn_delta_editor_t **editor,$/;"	f
+svn_ra_svn__gssapi_client	./subversion/libsvn_ra_svn/gssapi.c	/^svn_error_t *svn_ra_svn__gssapi_client(svn_ra_svn_conn_t *conn, $/;"	f
+svn_ra_svn__input_waiting	./subversion/libsvn_ra_svn/marshal.c	/^svn_boolean_t svn_ra_svn__input_waiting(svn_ra_svn_conn_t *conn,$/;"	f
+svn_ra_svn__set_block_handler	./subversion/libsvn_ra_svn/marshal.c	/^void svn_ra_svn__set_block_handler(svn_ra_svn_conn_t *conn,$/;"	f
+svn_ra_svn_cmd_entry_t	./subversion/include/svn_ra_svn.h	/^typedef struct svn_ra_svn_cmd_entry_t $/;"	s
+svn_ra_svn_cmd_entry_t	./subversion/include/svn_ra_svn.h	/^} svn_ra_svn_cmd_entry_t;$/;"	t
+svn_ra_svn_command_handler	./subversion/include/svn_ra_svn.h	/^typedef svn_error_t *(*svn_ra_svn_command_handler)(svn_ra_svn_conn_t *conn,$/;"	t
+svn_ra_svn_conn_st	./subversion/libsvn_ra_svn/ra_svn.h	/^struct svn_ra_svn_conn_st {$/;"	s
+svn_ra_svn_conn_t	./subversion/include/svn_ra_svn.h	/^typedef struct svn_ra_svn_conn_st svn_ra_svn_conn_t;$/;"	t
+svn_ra_svn_cram_server	./subversion/libsvn_ra_svn/cram.c	/^svn_error_t *svn_ra_svn_cram_server(svn_ra_svn_conn_t *conn, apr_pool_t *pool,$/;"	f
+svn_ra_svn_create_conn	./subversion/libsvn_ra_svn/marshal.c	/^svn_ra_svn_conn_t *svn_ra_svn_create_conn(apr_socket_t *sock,$/;"	f
+svn_ra_svn_drive_editor	./subversion/libsvn_ra_svn/editor.c	/^svn_error_t *svn_ra_svn_drive_editor(svn_ra_svn_conn_t *conn, apr_pool_t *pool,$/;"	f
+svn_ra_svn_edit_callback	./subversion/include/svn_ra_svn.h	/^typedef svn_error_t *(*svn_ra_svn_edit_callback)(void *baton);$/;"	t
+svn_ra_svn_end_list	./subversion/libsvn_ra_svn/marshal.c	/^svn_error_t *svn_ra_svn_end_list(svn_ra_svn_conn_t *conn, apr_pool_t *pool)$/;"	f
+svn_ra_svn_flush	./subversion/libsvn_ra_svn/marshal.c	/^svn_error_t *svn_ra_svn_flush(svn_ra_svn_conn_t *conn, apr_pool_t *pool)$/;"	f
+svn_ra_svn_get_editor	./subversion/libsvn_ra_svn/editor.c	/^void svn_ra_svn_get_editor(const svn_delta_editor_t **editor,$/;"	f
+svn_ra_svn_gssapi_server	./subversion/libsvn_ra_svn/gssapi.c	/^svn_error_t *svn_ra_svn_gssapi_server(svn_ra_svn_conn_t *conn, apr_pool_t *pool,$/;"	f
+svn_ra_svn_handle_commands	./subversion/libsvn_ra_svn/marshal.c	/^svn_error_t *svn_ra_svn_handle_commands(svn_ra_svn_conn_t *conn,$/;"	f
+svn_ra_svn_has_capability	./subversion/libsvn_ra_svn/marshal.c	/^svn_boolean_t svn_ra_svn_has_capability(svn_ra_svn_conn_t *conn,$/;"	f
+svn_ra_svn_init	./subversion/libsvn_ra_svn/client.c	/^svn_error_t *svn_ra_svn_init(int abi_version, apr_pool_t *pool,$/;"	f
+svn_ra_svn_item_t	./subversion/include/svn_ra_svn.h	/^typedef struct svn_ra_svn_item_t $/;"	s
+svn_ra_svn_item_t	./subversion/include/svn_ra_svn.h	/^} svn_ra_svn_item_t;$/;"	t
+svn_ra_svn_parse_tuple	./subversion/libsvn_ra_svn/marshal.c	/^svn_error_t *svn_ra_svn_parse_tuple(apr_array_header_t *list,$/;"	f
+svn_ra_svn_read_cmd_response	./subversion/libsvn_ra_svn/marshal.c	/^svn_error_t *svn_ra_svn_read_cmd_response(svn_ra_svn_conn_t *conn,$/;"	f
+svn_ra_svn_read_item	./subversion/libsvn_ra_svn/marshal.c	/^svn_error_t *svn_ra_svn_read_item(svn_ra_svn_conn_t *conn, apr_pool_t *pool,$/;"	f
+svn_ra_svn_read_tuple	./subversion/libsvn_ra_svn/marshal.c	/^svn_error_t *svn_ra_svn_read_tuple(svn_ra_svn_conn_t *conn, apr_pool_t *pool,$/;"	f
+svn_ra_svn_set_capabilities	./subversion/libsvn_ra_svn/marshal.c	/^svn_error_t *svn_ra_svn_set_capabilities(svn_ra_svn_conn_t *conn,$/;"	f
+svn_ra_svn_skip_leading_garbage	./subversion/libsvn_ra_svn/marshal.c	/^svn_error_t *svn_ra_svn_skip_leading_garbage(svn_ra_svn_conn_t *conn,$/;"	f
+svn_ra_svn_start_list	./subversion/libsvn_ra_svn/marshal.c	/^svn_error_t *svn_ra_svn_start_list(svn_ra_svn_conn_t *conn, apr_pool_t *pool)$/;"	f
+svn_ra_svn_write_cmd	./subversion/libsvn_ra_svn/marshal.c	/^svn_error_t *svn_ra_svn_write_cmd(svn_ra_svn_conn_t *conn, apr_pool_t *pool,$/;"	f
+svn_ra_svn_write_cmd_failure	./subversion/libsvn_ra_svn/marshal.c	/^svn_error_t *svn_ra_svn_write_cmd_failure(svn_ra_svn_conn_t *conn,$/;"	f
+svn_ra_svn_write_cmd_response	./subversion/libsvn_ra_svn/marshal.c	/^svn_error_t *svn_ra_svn_write_cmd_response(svn_ra_svn_conn_t *conn,$/;"	f
+svn_ra_svn_write_cstring	./subversion/libsvn_ra_svn/marshal.c	/^svn_error_t *svn_ra_svn_write_cstring(svn_ra_svn_conn_t *conn,$/;"	f
+svn_ra_svn_write_number	./subversion/libsvn_ra_svn/marshal.c	/^svn_error_t *svn_ra_svn_write_number(svn_ra_svn_conn_t *conn, apr_pool_t *pool,$/;"	f
+svn_ra_svn_write_string	./subversion/libsvn_ra_svn/marshal.c	/^svn_error_t *svn_ra_svn_write_string(svn_ra_svn_conn_t *conn, apr_pool_t *pool,$/;"	f
+svn_ra_svn_write_tuple	./subversion/libsvn_ra_svn/marshal.c	/^svn_error_t *svn_ra_svn_write_tuple(svn_ra_svn_conn_t *conn, apr_pool_t *pool,$/;"	f
+svn_ra_svn_write_word	./subversion/libsvn_ra_svn/marshal.c	/^svn_error_t *svn_ra_svn_write_word(svn_ra_svn_conn_t *conn, apr_pool_t *pool,$/;"	f
+svn_read_fn_t	./subversion/include/svn_io.h	/^typedef svn_error_t *(*svn_read_fn_t) (void *baton,$/;"	t
+svn_read_regval	./packages/win32-innosetup/tools/svnpath/main.c	/^svn_read_regval (HKEY hKey, char cValue[10], char cKey[BUFSIZE],$/;"	f
+svn_recurse_kind	./subversion/include/svn_types.h	/^enum svn_recurse_kind$/;"	g
+svn_recursive	./subversion/include/svn_types.h	/^  svn_recursive$/;"	e	enum:svn_recurse_kind
+svn_remove9x	./packages/win32-innosetup/tools/svnpath/main.c	/^svn_remove9x (char cPath[255])$/;"	f
+svn_removent	./packages/win32-innosetup/tools/svnpath/main.c	/^svn_removent (char cPathSvn[255])$/;"	f
+svn_repos__fs_change_rev_prop2	./subversion/libsvn_repos/fs-wrap.c	/^svn_repos__fs_change_rev_prop2 (svn_repos_t *repos,$/;"	f
+svn_repos__fs_revision_prop	./subversion/libsvn_repos/fs-wrap.c	/^svn_repos__fs_revision_prop (svn_string_t **value_p,$/;"	f
+svn_repos__fs_revision_proplist	./subversion/libsvn_repos/fs-wrap.c	/^svn_repos__fs_revision_proplist (apr_hash_t **table_p,$/;"	f
+svn_repos__get_logs2	./subversion/libsvn_repos/log.c	/^svn_repos__get_logs2 (svn_repos_t *repos,$/;"	f
+svn_repos__history2	./subversion/libsvn_repos/rev_hunt.c	/^svn_repos__history2 (svn_fs_t *fs,$/;"	f
+svn_repos__hooks_post_commit	./subversion/libsvn_repos/hooks.c	/^svn_repos__hooks_post_commit (svn_repos_t *repos,$/;"	f
+svn_repos__hooks_post_revprop_change	./subversion/libsvn_repos/hooks.c	/^svn_repos__hooks_post_revprop_change (svn_repos_t *repos,$/;"	f
+svn_repos__hooks_pre_commit	./subversion/libsvn_repos/hooks.c	/^svn_repos__hooks_pre_commit (svn_repos_t *repos,$/;"	f
+svn_repos__hooks_pre_revprop_change	./subversion/libsvn_repos/hooks.c	/^svn_repos__hooks_pre_revprop_change (svn_repos_t *repos,$/;"	f
+svn_repos__hooks_start_commit	./subversion/libsvn_repos/hooks.c	/^svn_repos__hooks_start_commit (svn_repos_t *repos,$/;"	f
+svn_repos_abort_report	./subversion/libsvn_repos/reporter.c	/^svn_repos_abort_report (void *report_baton,$/;"	f
+svn_repos_authz_func_t	./subversion/include/svn_repos.h	/^typedef svn_error_t *(*svn_repos_authz_func_t) (svn_boolean_t *allowed,$/;"	t
+svn_repos_begin_report	./subversion/libsvn_repos/reporter.c	/^svn_repos_begin_report (void **report_baton,$/;"	f
+svn_repos_conf_dir	./subversion/libsvn_repos/repos.c	/^svn_repos_conf_dir (svn_repos_t *repos, apr_pool_t *pool)$/;"	f
+svn_repos_create	./subversion/libsvn_repos/repos.c	/^svn_repos_create (svn_repos_t **repos_p,$/;"	f
+svn_repos_dated_revision	./subversion/libsvn_repos/rev_hunt.c	/^svn_repos_dated_revision (svn_revnum_t *revision,$/;"	f
+svn_repos_db_env	./subversion/libsvn_repos/repos.c	/^svn_repos_db_env (svn_repos_t *repos, apr_pool_t *pool)$/;"	f
+svn_repos_db_lockfile	./subversion/libsvn_repos/repos.c	/^svn_repos_db_lockfile (svn_repos_t *repos, apr_pool_t *pool)$/;"	f
+svn_repos_db_logfiles	./subversion/libsvn_repos/repos.c	/^svn_error_t *svn_repos_db_logfiles (apr_array_header_t **logfiles,$/;"	f
+svn_repos_db_logs_lockfile	./subversion/libsvn_repos/repos.c	/^svn_repos_db_logs_lockfile (svn_repos_t *repos, apr_pool_t *pool)$/;"	f
+svn_repos_delete	./subversion/libsvn_repos/repos.c	/^svn_repos_delete (const char *path, $/;"	f
+svn_repos_delete_path	./subversion/libsvn_repos/reporter.c	/^svn_repos_delete_path (void *report_baton,$/;"	f
+svn_repos_dir_delta	./subversion/libsvn_repos/delta.c	/^svn_repos_dir_delta (svn_fs_root_t *src_root,$/;"	f
+svn_repos_dump_fs	./subversion/libsvn_repos/dump.c	/^svn_repos_dump_fs (svn_repos_t *repos,$/;"	f
+svn_repos_find_root_path	./subversion/libsvn_repos/repos.c	/^svn_repos_find_root_path (const char *path,$/;"	f
+svn_repos_finish_report	./subversion/libsvn_repos/reporter.c	/^svn_repos_finish_report (void *report_baton,$/;"	f
+svn_repos_fs	./subversion/libsvn_repos/repos.c	/^svn_repos_fs (svn_repos_t *repos)$/;"	f
+svn_repos_fs_begin_txn_for_commit	./subversion/libsvn_repos/fs-wrap.c	/^svn_repos_fs_begin_txn_for_commit (svn_fs_txn_t **txn_p,$/;"	f
+svn_repos_fs_begin_txn_for_update	./subversion/libsvn_repos/fs-wrap.c	/^svn_repos_fs_begin_txn_for_update (svn_fs_txn_t **txn_p,$/;"	f
+svn_repos_fs_change_node_prop	./subversion/libsvn_repos/fs-wrap.c	/^svn_repos_fs_change_node_prop (svn_fs_root_t *root,$/;"	f
+svn_repos_fs_change_rev_prop	./subversion/libsvn_repos/fs-wrap.c	/^svn_repos_fs_change_rev_prop (svn_repos_t *repos,$/;"	f
+svn_repos_fs_change_txn_prop	./subversion/libsvn_repos/fs-wrap.c	/^svn_repos_fs_change_txn_prop (svn_fs_txn_t *txn,$/;"	f
+svn_repos_fs_commit_txn	./subversion/libsvn_repos/fs-wrap.c	/^svn_repos_fs_commit_txn (const char **conflict_p,$/;"	f
+svn_repos_get_commit_editor	./subversion/libsvn_repos/commit.c	/^svn_repos_get_commit_editor (const svn_delta_editor_t **editor,$/;"	f
+svn_repos_get_committed_info	./subversion/libsvn_repos/rev_hunt.c	/^svn_repos_get_committed_info (svn_revnum_t *committed_rev,$/;"	f
+svn_repos_get_fs_build_parser	./subversion/libsvn_repos/load.c	/^svn_repos_get_fs_build_parser (const svn_repos_parser_fns_t **parser_callbacks,$/;"	f
+svn_repos_get_logs	./subversion/libsvn_repos/log.c	/^svn_repos_get_logs (svn_repos_t *repos,$/;"	f
+svn_repos_history	./subversion/libsvn_repos/rev_hunt.c	/^svn_repos_history (svn_fs_t *fs,$/;"	f
+svn_repos_history_func_t	./subversion/include/svn_repos.h	/^typedef svn_error_t *(*svn_repos_history_func_t) (void *baton,$/;"	t
+svn_repos_hook_dir	./subversion/libsvn_repos/repos.c	/^svn_repos_hook_dir (svn_repos_t *repos, apr_pool_t *pool)$/;"	f
+svn_repos_hotcopy	./subversion/libsvn_repos/repos.c	/^svn_repos_hotcopy (const char *src_path,$/;"	f
+svn_repos_link_path	./subversion/libsvn_repos/reporter.c	/^svn_repos_link_path (void *report_baton,$/;"	f
+svn_repos_load_fs	./subversion/libsvn_repos/load.c	/^svn_repos_load_fs (svn_repos_t *repos,$/;"	f
+svn_repos_load_uuid	./subversion/include/svn_repos.h	/^enum svn_repos_load_uuid$/;"	g
+svn_repos_load_uuid_default	./subversion/include/svn_repos.h	/^  svn_repos_load_uuid_default,$/;"	e	enum:svn_repos_load_uuid
+svn_repos_load_uuid_force	./subversion/include/svn_repos.h	/^  svn_repos_load_uuid_force$/;"	e	enum:svn_repos_load_uuid
+svn_repos_load_uuid_ignore	./subversion/include/svn_repos.h	/^  svn_repos_load_uuid_ignore,$/;"	e	enum:svn_repos_load_uuid
+svn_repos_lock_dir	./subversion/libsvn_repos/repos.c	/^svn_repos_lock_dir (svn_repos_t *repos, apr_pool_t *pool)$/;"	f
+svn_repos_node_editor	./subversion/libsvn_repos/node_tree.c	/^svn_repos_node_editor (const svn_delta_editor_t **editor,$/;"	f
+svn_repos_node_from_baton	./subversion/libsvn_repos/node_tree.c	/^svn_repos_node_from_baton (void *edit_baton)$/;"	f
+svn_repos_node_t	./subversion/include/svn_repos.h	/^typedef struct svn_repos_node_t$/;"	s
+svn_repos_node_t	./subversion/include/svn_repos.h	/^} svn_repos_node_t;$/;"	t
+svn_repos_open	./subversion/libsvn_repos/repos.c	/^svn_repos_open (svn_repos_t **repos_p,$/;"	f
+svn_repos_parse_dumpstream	./subversion/libsvn_repos/load.c	/^svn_repos_parse_dumpstream (svn_stream_t *stream,$/;"	f
+svn_repos_parse_fns_t	./subversion/include/svn_repos.h	/^typedef struct svn_repos_parse_fns_t$/;"	s
+svn_repos_parser_fns_t	./subversion/include/svn_repos.h	/^} svn_repos_parser_fns_t;$/;"	t
+svn_repos_path	./subversion/libsvn_repos/repos.c	/^svn_repos_path (svn_repos_t *repos, apr_pool_t *pool)$/;"	f
+svn_repos_post_commit_hook	./subversion/libsvn_repos/repos.c	/^svn_repos_post_commit_hook (svn_repos_t *repos, apr_pool_t *pool)$/;"	f
+svn_repos_post_revprop_change_hook	./subversion/libsvn_repos/repos.c	/^svn_repos_post_revprop_change_hook (svn_repos_t *repos, apr_pool_t *pool)$/;"	f
+svn_repos_pre_commit_hook	./subversion/libsvn_repos/repos.c	/^svn_repos_pre_commit_hook (svn_repos_t *repos, apr_pool_t *pool)$/;"	f
+svn_repos_pre_revprop_change_hook	./subversion/libsvn_repos/repos.c	/^svn_repos_pre_revprop_change_hook (svn_repos_t *repos, apr_pool_t *pool)$/;"	f
+svn_repos_recover	./subversion/libsvn_repos/repos.c	/^svn_repos_recover (const char *path,$/;"	f
+svn_repos_replay	./subversion/libsvn_repos/replay.c	/^svn_repos_replay (svn_fs_root_t *root,$/;"	f
+svn_repos_set_path	./subversion/libsvn_repos/reporter.c	/^svn_repos_set_path (void *report_baton,$/;"	f
+svn_repos_start_commit_hook	./subversion/libsvn_repos/repos.c	/^svn_repos_start_commit_hook (svn_repos_t *repos, apr_pool_t *pool)$/;"	f
+svn_repos_svnserve_conf	./subversion/libsvn_repos/repos.c	/^svn_repos_svnserve_conf (svn_repos_t *repos, apr_pool_t *pool)$/;"	f
+svn_repos_t	./subversion/include/svn_repos.h	/^typedef struct svn_repos_t svn_repos_t;$/;"	t
+svn_repos_t	./subversion/libsvn_repos/repos.h	/^struct svn_repos_t$/;"	s
+svn_revnum_t	./subversion/include/svn_types.h	/^typedef long int svn_revnum_t;$/;"	t
+svn_run_cmd	./packages/win32-innosetup/tools/svnpath/main.c	/^svn_run_cmd (char cAction[10], char cPath[255])$/;"	f
+svn_set_auexlines	./packages/win32-innosetup/tools/svnpath/main.c	/^svn_set_auexlines (char cPath[255])$/;"	f
+svn_sleep_for_timestamps	./subversion/libsvn_subr/time.c	/^svn_sleep_for_timestamps (void)$/;"	f
+svn_sort__hash	./subversion/libsvn_subr/sorts.c	/^svn_sort__hash (apr_hash_t *ht,$/;"	f
+svn_sort__item_t	./subversion/include/svn_sorts.h	/^typedef struct svn_sort__item_t {$/;"	s
+svn_sort__item_t	./subversion/include/svn_sorts.h	/^} svn_sort__item_t;$/;"	t
+svn_sort_compare_items_as_paths	./subversion/libsvn_subr/sorts.c	/^svn_sort_compare_items_as_paths (const svn_sort__item_t *a,$/;"	f
+svn_sort_compare_revisions	./subversion/libsvn_subr/sorts.c	/^svn_sort_compare_revisions (const void *a, const void *b)$/;"	f
+svn_stream_close	./subversion/libsvn_subr/stream.c	/^svn_stream_close (svn_stream_t *stream)$/;"	f
+svn_stream_compressed	./subversion/libsvn_subr/stream.c	/^svn_stream_compressed (svn_stream_t *stream, apr_pool_t *pool)$/;"	f
+svn_stream_create	./subversion/libsvn_subr/stream.c	/^svn_stream_create (void *baton, apr_pool_t *pool)$/;"	f
+svn_stream_empty	./subversion/libsvn_subr/stream.c	/^svn_stream_empty (apr_pool_t *pool)$/;"	f
+svn_stream_for_stdout	./subversion/libsvn_subr/stream.c	/^svn_stream_for_stdout (svn_stream_t **out, apr_pool_t *pool)$/;"	f
+svn_stream_from_aprfile	./subversion/libsvn_subr/stream.c	/^svn_stream_from_aprfile (apr_file_t *file, apr_pool_t *pool)$/;"	f
+svn_stream_from_stringbuf	./subversion/libsvn_subr/stream.c	/^svn_stream_from_stringbuf (svn_stringbuf_t *str,$/;"	f
+svn_stream_printf	./subversion/libsvn_subr/stream.c	/^svn_stream_printf (svn_stream_t *stream,$/;"	f
+svn_stream_read	./subversion/libsvn_subr/stream.c	/^svn_stream_read (svn_stream_t *stream, char *buffer, apr_size_t *len)$/;"	f
+svn_stream_readline	./subversion/libsvn_subr/stream.c	/^svn_stream_readline (svn_stream_t *stream,$/;"	f
+svn_stream_set_baton	./subversion/libsvn_subr/stream.c	/^svn_stream_set_baton (svn_stream_t *stream, void *baton)$/;"	f
+svn_stream_set_close	./subversion/libsvn_subr/stream.c	/^svn_stream_set_close (svn_stream_t *stream, svn_close_fn_t close_fn)$/;"	f
+svn_stream_set_read	./subversion/libsvn_subr/stream.c	/^svn_stream_set_read (svn_stream_t *stream, svn_read_fn_t read_fn)$/;"	f
+svn_stream_set_write	./subversion/libsvn_subr/stream.c	/^svn_stream_set_write (svn_stream_t *stream, svn_write_fn_t write_fn)$/;"	f
+svn_stream_t	./subversion/include/svn_io.h	/^typedef struct svn_stream_t svn_stream_t;$/;"	t
+svn_stream_t	./subversion/libsvn_subr/stream.c	/^struct svn_stream_t {$/;"	s	file:
+svn_stream_write	./subversion/libsvn_subr/stream.c	/^svn_stream_write (svn_stream_t *stream, const char *data, apr_size_t *len)$/;"	f
+svn_strerror	./subversion/libsvn_subr/error.c	/^svn_strerror (apr_status_t statcode, char *buf, apr_size_t bufsize)$/;"	f
+svn_string_compare	./subversion/libsvn_subr/svn_string.c	/^svn_string_compare (const svn_string_t *str1, const svn_string_t *str2)$/;"	f
+svn_string_compare_stringbuf	./subversion/libsvn_subr/svn_string.c	/^svn_string_compare_stringbuf (const svn_string_t *str1,$/;"	f
+svn_string_create	./subversion/libsvn_subr/svn_string.c	/^svn_string_create (const char *cstring, apr_pool_t *pool)$/;"	f
+svn_string_create_from_buf	./subversion/libsvn_subr/svn_string.c	/^svn_string_create_from_buf (const svn_stringbuf_t *strbuf, apr_pool_t *pool)$/;"	f
+svn_string_createf	./subversion/libsvn_subr/svn_string.c	/^svn_string_createf (apr_pool_t *pool, const char *fmt, ...)$/;"	f
+svn_string_createv	./subversion/libsvn_subr/svn_string.c	/^svn_string_createv (apr_pool_t *pool, const char *fmt, va_list ap)$/;"	f
+svn_string_dup	./subversion/libsvn_subr/svn_string.c	/^svn_string_dup (const svn_string_t *original_string, apr_pool_t *pool)$/;"	f
+svn_string_find_char_backward	./subversion/libsvn_subr/svn_string.c	/^svn_string_find_char_backward (const svn_string_t *str, char ch)$/;"	f
+svn_string_first_non_whitespace	./subversion/libsvn_subr/svn_string.c	/^svn_string_first_non_whitespace (const svn_string_t *str)$/;"	f
+svn_string_isempty	./subversion/libsvn_subr/svn_string.c	/^svn_string_isempty (const svn_string_t *str)$/;"	f
+svn_string_ncreate	./subversion/libsvn_subr/svn_string.c	/^svn_string_ncreate (const char *bytes, apr_size_t size, apr_pool_t *pool)$/;"	f
+svn_string_t	./subversion/include/svn_string.h	/^typedef struct svn_string_t$/;"	s
+svn_string_t	./subversion/include/svn_string.h	/^} svn_string_t;$/;"	t
+svn_stringbuf_appendbytes	./subversion/libsvn_subr/svn_string.c	/^svn_stringbuf_appendbytes (svn_stringbuf_t *str, const char *bytes, $/;"	f
+svn_stringbuf_appendcstr	./subversion/libsvn_subr/svn_string.c	/^svn_stringbuf_appendcstr (svn_stringbuf_t *targetstr, const char *cstr)$/;"	f
+svn_stringbuf_appendstr	./subversion/libsvn_subr/svn_string.c	/^svn_stringbuf_appendstr (svn_stringbuf_t *targetstr, $/;"	f
+svn_stringbuf_chop	./subversion/libsvn_subr/svn_string.c	/^svn_stringbuf_chop (svn_stringbuf_t *str, apr_size_t nbytes)$/;"	f
+svn_stringbuf_compare	./subversion/libsvn_subr/svn_string.c	/^svn_stringbuf_compare (const svn_stringbuf_t *str1, $/;"	f
+svn_stringbuf_create	./subversion/libsvn_subr/svn_string.c	/^svn_stringbuf_create (const char *cstring, apr_pool_t *pool)$/;"	f
+svn_stringbuf_create_from_string	./subversion/libsvn_subr/svn_string.c	/^svn_stringbuf_create_from_string (const svn_string_t *str, apr_pool_t *pool)$/;"	f
+svn_stringbuf_createf	./subversion/libsvn_subr/svn_string.c	/^svn_stringbuf_createf (apr_pool_t *pool, const char *fmt, ...)$/;"	f
+svn_stringbuf_createv	./subversion/libsvn_subr/svn_string.c	/^svn_stringbuf_createv (apr_pool_t *pool, const char *fmt, va_list ap)$/;"	f
+svn_stringbuf_dup	./subversion/libsvn_subr/svn_string.c	/^svn_stringbuf_dup (const svn_stringbuf_t *original_string, apr_pool_t *pool)$/;"	f
+svn_stringbuf_ensure	./subversion/libsvn_subr/svn_string.c	/^svn_stringbuf_ensure (svn_stringbuf_t *str, apr_size_t minimum_size)$/;"	f
+svn_stringbuf_fillchar	./subversion/libsvn_subr/svn_string.c	/^svn_stringbuf_fillchar (svn_stringbuf_t *str, unsigned char c)$/;"	f
+svn_stringbuf_find_char_backward	./subversion/libsvn_subr/svn_string.c	/^svn_stringbuf_find_char_backward (const svn_stringbuf_t *str, char ch)$/;"	f
+svn_stringbuf_first_non_whitespace	./subversion/libsvn_subr/svn_string.c	/^svn_stringbuf_first_non_whitespace (const svn_stringbuf_t *str)$/;"	f
+svn_stringbuf_from_aprfile	./subversion/libsvn_subr/io.c	/^svn_stringbuf_from_aprfile (svn_stringbuf_t **result,$/;"	f
+svn_stringbuf_from_file	./subversion/libsvn_subr/io.c	/^svn_stringbuf_from_file (svn_stringbuf_t **result,$/;"	f
+svn_stringbuf_isempty	./subversion/libsvn_subr/svn_string.c	/^svn_stringbuf_isempty (const svn_stringbuf_t *str)$/;"	f
+svn_stringbuf_ncreate	./subversion/libsvn_subr/svn_string.c	/^svn_stringbuf_ncreate (const char *bytes, apr_size_t size, apr_pool_t *pool)$/;"	f
+svn_stringbuf_set	./subversion/libsvn_subr/svn_string.c	/^svn_stringbuf_set (svn_stringbuf_t *str, const char *value)$/;"	f
+svn_stringbuf_setempty	./subversion/libsvn_subr/svn_string.c	/^svn_stringbuf_setempty (svn_stringbuf_t *str)$/;"	f
+svn_stringbuf_strip_whitespace	./subversion/libsvn_subr/svn_string.c	/^svn_stringbuf_strip_whitespace (svn_stringbuf_t *str)$/;"	f
+svn_stringbuf_t	./subversion/include/svn_string.h	/^typedef struct svn_stringbuf_t$/;"	s
+svn_stringbuf_t	./subversion/include/svn_string.h	/^} svn_stringbuf_t;$/;"	t
+svn_subst_build_keywords	./subversion/libsvn_subr/subst.c	/^svn_subst_build_keywords (svn_subst_keywords_t *kw,$/;"	f
+svn_subst_copy_and_translate	./subversion/libsvn_subr/subst.c	/^svn_subst_copy_and_translate (const char *src,$/;"	f
+svn_subst_detranslate_string	./subversion/libsvn_subr/subst.c	/^svn_subst_detranslate_string (svn_string_t **new_value,$/;"	f
+svn_subst_eol_style	./subversion/include/svn_subst.h	/^typedef enum svn_subst_eol_style$/;"	g
+svn_subst_eol_style_fixed	./subversion/include/svn_subst.h	/^  svn_subst_eol_style_fixed$/;"	e	enum:svn_subst_eol_style
+svn_subst_eol_style_from_value	./subversion/libsvn_subr/subst.c	/^svn_subst_eol_style_from_value (svn_subst_eol_style_t *style,$/;"	f
+svn_subst_eol_style_native	./subversion/include/svn_subst.h	/^  svn_subst_eol_style_native,$/;"	e	enum:svn_subst_eol_style
+svn_subst_eol_style_none	./subversion/include/svn_subst.h	/^  svn_subst_eol_style_none,$/;"	e	enum:svn_subst_eol_style
+svn_subst_eol_style_t	./subversion/include/svn_subst.h	/^} svn_subst_eol_style_t;$/;"	t
+svn_subst_eol_style_unknown	./subversion/include/svn_subst.h	/^  svn_subst_eol_style_unknown,$/;"	e	enum:svn_subst_eol_style
+svn_subst_keywords_differ	./subversion/libsvn_subr/subst.c	/^svn_subst_keywords_differ (const svn_subst_keywords_t *a,$/;"	f
+svn_subst_keywords_t	./subversion/include/svn_subst.h	/^typedef struct svn_subst_keywords_t$/;"	s
+svn_subst_keywords_t	./subversion/include/svn_subst.h	/^} svn_subst_keywords_t;$/;"	t
+svn_subst_translate_cstring	./subversion/libsvn_subr/subst.c	/^svn_subst_translate_cstring (const char *src,$/;"	f
+svn_subst_translate_stream	./subversion/libsvn_subr/subst.c	/^svn_subst_translate_stream (svn_stream_t *s, \/* src stream *\/$/;"	f
+svn_subst_translate_string	./subversion/libsvn_subr/subst.c	/^svn_subst_translate_string (svn_string_t **new_value,$/;"	f
+svn_svn_get_path_revprop	./subversion/mod_dav_svn/liveprops.c	/^static svn_error_t *svn_svn_get_path_revprop(svn_string_t **propval,$/;"	f	file:
+svn_svnpath_exists	./packages/win32-innosetup/tools/svnpath/main.c	/^svn_svnpath_exists (char cPath[255])$/;"	f
+svn_swig_java_add_to_list	./subversion/bindings/swig/swigutil_java.c	/^void svn_swig_java_add_to_list(JNIEnv* jenv, apr_array_header_t *array,$/;"	f
+svn_swig_java_add_to_map	./subversion/bindings/swig/swigutil_java.c	/^void svn_swig_java_add_to_map(JNIEnv* jenv, apr_hash_t *hash, jobject map)$/;"	f
+svn_swig_java_array_to_list	./subversion/bindings/swig/swigutil_java.c	/^jobject svn_swig_java_array_to_list(JNIEnv *jenv,$/;"	f
+svn_swig_java_c_strings_to_list	./subversion/bindings/swig/swigutil_java.c	/^jobject svn_swig_java_c_strings_to_list(JNIEnv *jenv, char **strings)$/;"	f
+svn_swig_java_cancel_func	./subversion/bindings/swig/swigutil_java.c	/^svn_error_t *svn_swig_java_cancel_func(void *cancel_baton)$/;"	f
+svn_swig_java_client_prompt_func	./subversion/bindings/swig/swigutil_java.c	/^svn_error_t *svn_swig_java_client_prompt_func(const char **info,$/;"	f
+svn_swig_java_convert_error	./subversion/bindings/swig/swigutil_java.c	/^jthrowable svn_swig_java_convert_error(JNIEnv *jenv, svn_error_t *error)$/;"	f
+svn_swig_java_convert_hash	./subversion/bindings/swig/swigutil_java.c	/^jobject svn_swig_java_convert_hash(JNIEnv *jenv, apr_hash_t *hash)$/;"	f
+svn_swig_java_get_commit_log_func	./subversion/bindings/swig/swigutil_java.c	/^svn_error_t *svn_swig_java_get_commit_log_func (const char **log_msg,$/;"	f
+svn_swig_java_inputstream_to_stream	./subversion/bindings/swig/swigutil_java.c	/^svn_stream_t *svn_swig_java_inputstream_to_stream(JNIEnv *jenv, $/;"	f
+svn_swig_java_log_message_receiver	./subversion/bindings/swig/swigutil_java.c	/^svn_error_t *svn_swig_java_log_message_receiver(void *baton,$/;"	f
+svn_swig_java_make_callback_baton	./subversion/bindings/swig/swigutil_java.c	/^void *svn_swig_java_make_callback_baton(JNIEnv *jenv,$/;"	f
+svn_swig_java_make_editor	./subversion/bindings/swig/swigutil_java.c	/^void svn_swig_java_make_editor(JNIEnv *jenv,$/;"	f
+svn_swig_java_notify_func	./subversion/bindings/swig/swigutil_java.c	/^void svn_swig_java_notify_func(void *baton,$/;"	f
+svn_swig_java_outputstream_to_stream	./subversion/bindings/swig/swigutil_java.c	/^svn_stream_t *svn_swig_java_outputstream_to_stream(JNIEnv *jenv, $/;"	f
+svn_swig_java_prophash_to_dict	./subversion/bindings/swig/swigutil_java.c	/^jobject svn_swig_java_prophash_to_dict(JNIEnv *jenv, apr_hash_t *hash)$/;"	f
+svn_swig_java_strings_to_array	./subversion/bindings/swig/swigutil_java.c	/^const apr_array_header_t *svn_swig_java_strings_to_array(JNIEnv *jenv,$/;"	f
+svn_swig_pl_array_to_list	./subversion/bindings/swig/swigutil_pl.c	/^SV *svn_swig_pl_array_to_list(const apr_array_header_t *array)$/;"	f
+svn_swig_pl_blame_func	./subversion/bindings/swig/swigutil_pl.c	/^svn_error_t *svn_swig_pl_blame_func (void *baton,$/;"	f
+svn_swig_pl_callback_thunk	./subversion/bindings/swig/swigutil_pl.c	/^svn_error_t *svn_swig_pl_callback_thunk (perl_func_invoker_t caller_func,$/;"	f
+svn_swig_pl_cancel_func	./subversion/bindings/swig/swigutil_pl.c	/^svn_error_t *svn_swig_pl_cancel_func(void *cancel_baton) {$/;"	f
+svn_swig_pl_convert_array	./subversion/bindings/swig/swigutil_pl.c	/^SV *svn_swig_pl_convert_array(const apr_array_header_t *array,$/;"	f
+svn_swig_pl_convert_hash	./subversion/bindings/swig/swigutil_pl.c	/^SV *svn_swig_pl_convert_hash (apr_hash_t *hash, swig_type_info *tinfo)$/;"	f
+svn_swig_pl_from_stream	./subversion/bindings/swig/swigutil_pl.c	/^SV *svn_swig_pl_from_stream (svn_stream_t *stream)$/;"	f
+svn_swig_pl_get_commit_log_func	./subversion/bindings/swig/swigutil_pl.c	/^svn_error_t *svn_swig_pl_get_commit_log_func(const char **log_msg,$/;"	f
+svn_swig_pl_hold_ref_in_pool	./subversion/bindings/swig/swigutil_pl.c	/^void svn_swig_pl_hold_ref_in_pool (apr_pool_t *pool, SV *sv)$/;"	f
+svn_swig_pl_ints_to_list	./subversion/bindings/swig/swigutil_pl.c	/^SV *svn_swig_pl_ints_to_list(const apr_array_header_t *array)$/;"	f
+svn_swig_pl_make_file	./subversion/bindings/swig/swigutil_pl.c	/^apr_file_t *svn_swig_pl_make_file (SV *file, apr_pool_t *pool)$/;"	f
+svn_swig_pl_make_pool	./subversion/bindings/swig/swigutil_pl.c	/^apr_pool_t *svn_swig_pl_make_pool (SV *obj)$/;"	f
+svn_swig_pl_make_stream	./subversion/bindings/swig/swigutil_pl.c	/^svn_error_t *svn_swig_pl_make_stream (svn_stream_t **stream, SV *obj)$/;"	f
+svn_swig_pl_notify_func	./subversion/bindings/swig/swigutil_pl.c	/^void svn_swig_pl_notify_func(void * baton,$/;"	f
+svn_swig_pl_objs_to_array	./subversion/bindings/swig/swigutil_pl.c	/^const apr_array_header_t *svn_swig_pl_objs_to_array(SV *source,$/;"	f
+svn_swig_pl_objs_to_hash	./subversion/bindings/swig/swigutil_pl.c	/^apr_hash_t *svn_swig_pl_objs_to_hash(SV *source, swig_type_info *tinfo,$/;"	f
+svn_swig_pl_objs_to_hash_by_name	./subversion/bindings/swig/swigutil_pl.c	/^apr_hash_t *svn_swig_pl_objs_to_hash_by_name(SV *source,$/;"	f
+svn_swig_pl_prophash_to_hash	./subversion/bindings/swig/swigutil_pl.c	/^SV *svn_swig_pl_prophash_to_hash (apr_hash_t *hash)$/;"	f
+svn_swig_pl_status_func	./subversion/bindings/swig/swigutil_pl.c	/^void svn_swig_pl_status_func(void *baton,$/;"	f
+svn_swig_pl_strings_to_array	./subversion/bindings/swig/swigutil_pl.c	/^const apr_array_header_t *svn_swig_pl_strings_to_array(SV *source,$/;"	f
+svn_swig_pl_strings_to_hash	./subversion/bindings/swig/swigutil_pl.c	/^apr_hash_t *svn_swig_pl_strings_to_hash(SV *source, apr_pool_t *pool)$/;"	f
+svn_swig_pl_thunk_authz_func	./subversion/bindings/swig/swigutil_pl.c	/^svn_error_t *svn_swig_pl_thunk_authz_func (svn_boolean_t *allowed,$/;"	f
+svn_swig_pl_thunk_commit_callback	./subversion/bindings/swig/swigutil_pl.c	/^svn_error_t *svn_swig_pl_thunk_commit_callback(svn_revnum_t new_revision,$/;"	f
+svn_swig_pl_thunk_config_enumerator	./subversion/bindings/swig/swigutil_pl.c	/^svn_boolean_t svn_swig_pl_thunk_config_enumerator (const char *name, const char *value, void *baton)$/;"	f
+svn_swig_pl_thunk_history_func	./subversion/bindings/swig/swigutil_pl.c	/^svn_error_t *svn_swig_pl_thunk_history_func(void *baton,$/;"	f
+svn_swig_pl_thunk_log_receiver	./subversion/bindings/swig/swigutil_pl.c	/^svn_error_t *svn_swig_pl_thunk_log_receiver(void *baton,$/;"	f
+svn_swig_pl_thunk_simple_prompt	./subversion/bindings/swig/swigutil_pl.c	/^svn_error_t *svn_swig_pl_thunk_simple_prompt(svn_auth_cred_simple_t **cred,$/;"	f
+svn_swig_pl_thunk_ssl_client_cert_prompt	./subversion/bindings/swig/swigutil_pl.c	/^svn_error_t *svn_swig_pl_thunk_ssl_client_cert_prompt($/;"	f
+svn_swig_pl_thunk_ssl_client_cert_pw_prompt	./subversion/bindings/swig/swigutil_pl.c	/^svn_error_t *svn_swig_pl_thunk_ssl_client_cert_pw_prompt($/;"	f
+svn_swig_pl_thunk_ssl_server_trust_prompt	./subversion/bindings/swig/swigutil_pl.c	/^svn_error_t *svn_swig_pl_thunk_ssl_server_trust_prompt($/;"	f
+svn_swig_pl_thunk_username_prompt	./subversion/bindings/swig/swigutil_pl.c	/^svn_error_t *svn_swig_pl_thunk_username_prompt(svn_auth_cred_username_t **cred,$/;"	f
+svn_swig_pl_to_array	./subversion/bindings/swig/swigutil_pl.c	/^static const apr_array_header_t *svn_swig_pl_to_array (SV *source,$/;"	f	file:
+svn_swig_pl_to_hash	./subversion/bindings/swig/swigutil_pl.c	/^static apr_hash_t *svn_swig_pl_to_hash(SV *source,$/;"	f	file:
+svn_swig_py_acquire_py_lock	./subversion/bindings/swig/swigutil_py.c	/^void svn_swig_py_acquire_py_lock(void)$/;"	f
+svn_swig_py_array_to_list	./subversion/bindings/swig/swigutil_py.c	/^PyObject *svn_swig_py_array_to_list(const apr_array_header_t *array)$/;"	f
+svn_swig_py_c_strings_to_list	./subversion/bindings/swig/swigutil_py.c	/^PyObject *svn_swig_py_c_strings_to_list(char **strings)$/;"	f
+svn_swig_py_cancel_func	./subversion/bindings/swig/swigutil_py.c	/^svn_error_t *svn_swig_py_cancel_func(void *cancel_baton)$/;"	f
+svn_swig_py_convert_hash	./subversion/bindings/swig/swigutil_py.c	/^PyObject *svn_swig_py_convert_hash(apr_hash_t *hash, swig_type_info *type)$/;"	f
+svn_swig_py_exception_type	./subversion/bindings/swig/swigutil_py.c	/^PyObject *svn_swig_py_exception_type(void)$/;"	f
+svn_swig_py_get_commit_log_func	./subversion/bindings/swig/swigutil_py.c	/^svn_error_t *svn_swig_py_get_commit_log_func(const char **log_msg,$/;"	f
+svn_swig_py_make_editor	./subversion/bindings/swig/swigutil_py.c	/^void svn_swig_py_make_editor(const svn_delta_editor_t **editor,$/;"	f
+svn_swig_py_make_file	./subversion/bindings/swig/swigutil_py.c	/^apr_file_t *svn_swig_py_make_file (PyObject *py_file,$/;"	f
+svn_swig_py_notify_func	./subversion/bindings/swig/swigutil_py.c	/^void svn_swig_py_notify_func(void *baton,$/;"	f
+svn_swig_py_prophash_to_dict	./subversion/bindings/swig/swigutil_py.c	/^PyObject *svn_swig_py_prophash_to_dict(apr_hash_t *hash)$/;"	f
+svn_swig_py_register_exception	./subversion/bindings/swig/swigutil_py.c	/^PyObject *svn_swig_py_register_exception(void)$/;"	f
+svn_swig_py_release_py_lock	./subversion/bindings/swig/swigutil_py.c	/^void svn_swig_py_release_py_lock(void)$/;"	f
+svn_swig_py_repos_history_func	./subversion/bindings/swig/swigutil_py.c	/^svn_error_t *svn_swig_py_repos_history_func(void *baton,$/;"	f
+svn_swig_py_revarray_to_list	./subversion/bindings/swig/swigutil_py.c	/^PyObject *svn_swig_py_revarray_to_list(const apr_array_header_t *array)$/;"	f
+svn_swig_py_status_func	./subversion/bindings/swig/swigutil_py.c	/^void svn_swig_py_status_func(void *baton,$/;"	f
+svn_swig_py_strings_to_array	./subversion/bindings/swig/swigutil_py.c	/^const apr_array_header_t *svn_swig_py_strings_to_array(PyObject *source,$/;"	f
+svn_swig_py_svn_exception	./subversion/bindings/swig/swigutil_py.c	/^void svn_swig_py_svn_exception(svn_error_t *err)$/;"	f
+svn_swig_py_thunk_log_receiver	./subversion/bindings/swig/swigutil_py.c	/^svn_error_t * svn_swig_py_thunk_log_receiver(void *baton,$/;"	f
+svn_swig_py_thunk_repos_authz_func	./subversion/bindings/swig/swigutil_py.c	/^svn_error_t *svn_swig_py_thunk_repos_authz_func(svn_boolean_t *allowed,$/;"	f
+svn_test__check_greek_tree	./subversion/tests/fs-helpers.c	/^svn_test__check_greek_tree (svn_fs_root_t *root,$/;"	f
+svn_test__create_fs	./subversion/tests/fs-helpers.c	/^svn_test__create_fs (svn_fs_t **fs_p,$/;"	f
+svn_test__create_greek_tree	./subversion/tests/fs-helpers.c	/^svn_test__create_greek_tree (svn_fs_root_t *txn_root,$/;"	f
+svn_test__create_repos	./subversion/tests/fs-helpers.c	/^svn_test__create_repos (svn_repos_t **repos_p,$/;"	f
+svn_test__fs_new	./subversion/tests/fs-helpers.c	/^svn_test__fs_new (svn_fs_t **fs_p, apr_pool_t *pool)$/;"	f
+svn_test__get_file_contents	./subversion/tests/fs-helpers.c	/^svn_test__get_file_contents (svn_fs_root_t *root,$/;"	f
+svn_test__set_file_contents	./subversion/tests/fs-helpers.c	/^svn_test__set_file_contents (svn_fs_root_t *root,$/;"	f
+svn_test__stream_to_string	./subversion/tests/fs-helpers.c	/^svn_test__stream_to_string (svn_stringbuf_t **string,$/;"	f
+svn_test__tree_entry_t	./subversion/tests/fs-helpers.h	/^svn_test__tree_entry_t;$/;"	t
+svn_test__tree_entry_t	./subversion/tests/fs-helpers.h	/^typedef struct svn_test__tree_entry_t$/;"	s
+svn_test__tree_t	./subversion/tests/fs-helpers.h	/^svn_test__tree_t;$/;"	t
+svn_test__tree_t	./subversion/tests/fs-helpers.h	/^typedef struct svn_test__tree_t$/;"	s
+svn_test__txn_script_command_t	./subversion/tests/fs-helpers.h	/^svn_test__txn_script_command_t;$/;"	t
+svn_test__txn_script_command_t	./subversion/tests/fs-helpers.h	/^typedef struct svn_test__txn_script_command_t$/;"	s
+svn_test__txn_script_exec	./subversion/tests/fs-helpers.c	/^svn_test__txn_script_exec (svn_fs_root_t *txn_root,$/;"	f
+svn_test__validate_tree	./subversion/tests/fs-helpers.c	/^svn_test__validate_tree (svn_fs_root_t *root,$/;"	f
+svn_test_add_dir_cleanup	./subversion/tests/svn_tests_main.c	/^svn_test_add_dir_cleanup (const char *path)$/;"	f
+svn_test_descriptor_t	./subversion/include/svn_test.h	/^struct svn_test_descriptor_t$/;"	s
+svn_test_driver_t	./subversion/include/svn_test.h	/^typedef svn_error_t* (*svn_test_driver_t) (const char **msg, $/;"	t
+svn_test_get_editor	./subversion/tests/svn_test_editor.c	/^svn_test_get_editor (const svn_delta_editor_t **editor,$/;"	f
+svn_test_rand	./subversion/tests/svn_tests_main.c	/^svn_test_rand (apr_uint32_t *seed)$/;"	f
+svn_time_from_cstring	./subversion/libsvn_subr/time.c	/^svn_time_from_cstring(apr_time_t *when, const char *data, apr_pool_t *pool)$/;"	f
+svn_time_to_cstring	./subversion/libsvn_subr/time.c	/^svn_time_to_cstring (apr_time_t t, apr_pool_t *pool)$/;"	f
+svn_time_to_human_cstring	./subversion/libsvn_subr/time.c	/^svn_time_to_human_cstring (apr_time_t t, apr_pool_t *pool)$/;"	f
+svn_txdelta	./subversion/libsvn_delta/text_delta.c	/^svn_txdelta (svn_txdelta_stream_t **stream,$/;"	f
+svn_txdelta__apply_instructions	./subversion/libsvn_delta/text_delta.c	/^svn_txdelta__apply_instructions (svn_txdelta_window_t *window,$/;"	f
+svn_txdelta__compose_ctx_t	./subversion/libsvn_delta/delta.h	/^typedef struct svn_txdelta__compose_ctx_t$/;"	s
+svn_txdelta__compose_ctx_t	./subversion/libsvn_delta/delta.h	/^} svn_txdelta__compose_ctx_t;$/;"	t
+svn_txdelta__compose_windows	./subversion/libsvn_delta/compose_delta.c	/^svn_txdelta__compose_windows (const svn_txdelta_window_t *window_A,$/;"	f
+svn_txdelta__copy_window	./subversion/libsvn_delta/text_delta.c	/^svn_txdelta__copy_window (const svn_txdelta_window_t *window,$/;"	f
+svn_txdelta__insert_op	./subversion/libsvn_delta/text_delta.c	/^svn_txdelta__insert_op (svn_txdelta__ops_baton_t *build_baton,$/;"	f
+svn_txdelta__make_window	./subversion/libsvn_delta/text_delta.c	/^svn_txdelta__make_window (const svn_txdelta__ops_baton_t *build_baton,$/;"	f
+svn_txdelta__ops_baton_t	./subversion/libsvn_delta/delta.h	/^typedef struct svn_txdelta__ops_baton_t {$/;"	s
+svn_txdelta__ops_baton_t	./subversion/libsvn_delta/delta.h	/^} svn_txdelta__ops_baton_t;$/;"	t
+svn_txdelta__vdelta	./subversion/libsvn_delta/vdelta.c	/^svn_txdelta__vdelta (svn_txdelta__ops_baton_t *build_baton,$/;"	f
+svn_txdelta_apply	./subversion/libsvn_delta/text_delta.c	/^svn_txdelta_apply (svn_stream_t *source,$/;"	f
+svn_txdelta_md5_digest	./subversion/libsvn_delta/text_delta.c	/^svn_txdelta_md5_digest (svn_txdelta_stream_t *stream)$/;"	f
+svn_txdelta_new	./subversion/include/svn_delta.h	/^    svn_txdelta_new$/;"	e	enum:svn_delta_action
+svn_txdelta_next_window	./subversion/libsvn_delta/text_delta.c	/^svn_txdelta_next_window (svn_txdelta_window_t **window,$/;"	f
+svn_txdelta_op_t	./subversion/include/svn_delta.h	/^typedef struct svn_txdelta_op_t$/;"	s
+svn_txdelta_op_t	./subversion/include/svn_delta.h	/^} svn_txdelta_op_t;$/;"	t
+svn_txdelta_parse_svndiff	./subversion/libsvn_delta/svndiff.c	/^svn_txdelta_parse_svndiff (svn_txdelta_window_handler_t handler,$/;"	f
+svn_txdelta_send_stream	./subversion/libsvn_delta/text_delta.c	/^svn_error_t *svn_txdelta_send_stream (svn_stream_t *stream,$/;"	f
+svn_txdelta_send_string	./subversion/libsvn_delta/text_delta.c	/^svn_txdelta_send_string (const svn_string_t *string,$/;"	f
+svn_txdelta_send_txstream	./subversion/libsvn_delta/text_delta.c	/^svn_error_t *svn_txdelta_send_txstream (svn_txdelta_stream_t *txstream,$/;"	f
+svn_txdelta_source	./subversion/include/svn_delta.h	/^    svn_txdelta_source,$/;"	e	enum:svn_delta_action
+svn_txdelta_stream_t	./subversion/include/svn_delta.h	/^typedef struct svn_txdelta_stream_t svn_txdelta_stream_t;$/;"	t
+svn_txdelta_stream_t	./subversion/libsvn_delta/text_delta.c	/^struct svn_txdelta_stream_t {$/;"	s	file:
+svn_txdelta_target	./subversion/include/svn_delta.h	/^    svn_txdelta_target,$/;"	e	enum:svn_delta_action
+svn_txdelta_to_svndiff	./subversion/libsvn_delta/svndiff.c	/^svn_txdelta_to_svndiff (svn_stream_t *output,$/;"	f
+svn_txdelta_window_handler_t	./subversion/include/svn_delta.h	/^typedef svn_error_t * (*svn_txdelta_window_handler_t)$/;"	t
+svn_txdelta_window_t	./subversion/include/svn_delta.h	/^typedef struct svn_txdelta_window_t$/;"	s
+svn_txdelta_window_t	./subversion/include/svn_delta.h	/^} svn_txdelta_window_t;$/;"	t
+svn_utf__cstring_from_utf8_fuzzy	./subversion/libsvn_subr/utf.c	/^svn_utf__cstring_from_utf8_fuzzy (const char *src,$/;"	f
+svn_utf__cstring_is_valid	./subversion/libsvn_subr/utf_validate.c	/^svn_utf__cstring_is_valid(const char *data)$/;"	f
+svn_utf__is_valid	./subversion/libsvn_subr/utf_validate.c	/^svn_utf__is_valid(const char *data, apr_size_t len)$/;"	f
+svn_utf__last_valid	./subversion/libsvn_subr/utf_validate.c	/^svn_utf__last_valid(const char *data, apr_size_t len)$/;"	f
+svn_utf__last_valid2	./subversion/libsvn_subr/utf_validate.c	/^svn_utf__last_valid2(const char *data, apr_size_t len)$/;"	f
+svn_utf_cstring_from_utf8	./subversion/libsvn_subr/utf.c	/^svn_utf_cstring_from_utf8 (const char **dest,$/;"	f
+svn_utf_cstring_from_utf8_ex	./subversion/libsvn_subr/utf.c	/^svn_utf_cstring_from_utf8_ex (const char **dest,$/;"	f
+svn_utf_cstring_from_utf8_fuzzy	./subversion/libsvn_subr/utf.c	/^svn_utf_cstring_from_utf8_fuzzy (const char *src,$/;"	f
+svn_utf_cstring_from_utf8_string	./subversion/libsvn_subr/utf.c	/^svn_utf_cstring_from_utf8_string (const char **dest,$/;"	f
+svn_utf_cstring_from_utf8_stringbuf	./subversion/libsvn_subr/utf.c	/^svn_utf_cstring_from_utf8_stringbuf (const char **dest,$/;"	f
+svn_utf_cstring_to_utf8	./subversion/libsvn_subr/utf.c	/^svn_utf_cstring_to_utf8 (const char **dest,$/;"	f
+svn_utf_cstring_to_utf8_ex	./subversion/libsvn_subr/utf.c	/^svn_utf_cstring_to_utf8_ex (const char **dest,$/;"	f
+svn_utf_string_from_utf8	./subversion/libsvn_subr/utf.c	/^svn_utf_string_from_utf8 (const svn_string_t **dest,$/;"	f
+svn_utf_string_to_utf8	./subversion/libsvn_subr/utf.c	/^svn_utf_string_to_utf8 (const svn_string_t **dest,$/;"	f
+svn_utf_stringbuf_from_utf8	./subversion/libsvn_subr/utf.c	/^svn_utf_stringbuf_from_utf8 (svn_stringbuf_t **dest,$/;"	f
+svn_utf_stringbuf_to_utf8	./subversion/libsvn_subr/utf.c	/^svn_utf_stringbuf_to_utf8 (svn_stringbuf_t **dest,$/;"	f
+svn_wc__adm_access_closed	./subversion/libsvn_wc/lock.c	/^    svn_wc__adm_access_closed$/;"	e	enum:svn_wc_adm_access_t::svn_wc__adm_access_type	file:
+svn_wc__adm_access_entries	./subversion/libsvn_wc/lock.c	/^svn_wc__adm_access_entries (svn_wc_adm_access_t *adm_access,$/;"	f
+svn_wc__adm_access_set_entries	./subversion/libsvn_wc/lock.c	/^svn_wc__adm_access_set_entries (svn_wc_adm_access_t *adm_access,$/;"	f
+svn_wc__adm_access_type	./subversion/libsvn_wc/lock.c	/^  enum svn_wc__adm_access_type {$/;"	g	struct:svn_wc_adm_access_t	file:
+svn_wc__adm_access_unlocked	./subversion/libsvn_wc/lock.c	/^    svn_wc__adm_access_unlocked,$/;"	e	enum:svn_wc_adm_access_t::svn_wc__adm_access_type	file:
+svn_wc__adm_access_write_lock	./subversion/libsvn_wc/lock.c	/^    svn_wc__adm_access_write_lock,$/;"	e	enum:svn_wc_adm_access_t::svn_wc__adm_access_type	file:
+svn_wc__adm_cleanup_tmp_area	./subversion/libsvn_wc/adm_files.c	/^svn_wc__adm_cleanup_tmp_area (svn_wc_adm_access_t *adm_access, $/;"	f
+svn_wc__adm_destroy	./subversion/libsvn_wc/adm_files.c	/^svn_wc__adm_destroy (svn_wc_adm_access_t *adm_access, $/;"	f
+svn_wc__adm_is_cleanup_required	./subversion/libsvn_wc/lock.c	/^svn_wc__adm_is_cleanup_required (svn_boolean_t *cleanup,$/;"	f
+svn_wc__adm_missing	./subversion/libsvn_wc/lock.c	/^svn_wc__adm_missing (svn_wc_adm_access_t *adm_access,$/;"	f
+svn_wc__adm_path	./subversion/libsvn_wc/adm_files.c	/^svn_wc__adm_path (const char *path,$/;"	f
+svn_wc__adm_path_exists	./subversion/libsvn_wc/adm_files.c	/^svn_wc__adm_path_exists (const char *path,$/;"	f
+svn_wc__adm_pre_open	./subversion/libsvn_wc/lock.c	/^svn_wc__adm_pre_open (svn_wc_adm_access_t **adm_access,$/;"	f
+svn_wc__adm_retrieve_internal	./subversion/libsvn_wc/lock.c	/^svn_wc__adm_retrieve_internal (svn_wc_adm_access_t **adm_access,$/;"	f
+svn_wc__adm_steal_write_lock	./subversion/libsvn_wc/lock.c	/^svn_wc__adm_steal_write_lock (svn_wc_adm_access_t **adm_access,$/;"	f
+svn_wc__adm_wc_format	./subversion/libsvn_wc/lock.c	/^svn_wc__adm_wc_format (svn_wc_adm_access_t *adm_access)$/;"	f
+svn_wc__adm_write_check	./subversion/libsvn_wc/lock.c	/^svn_wc__adm_write_check (svn_wc_adm_access_t *adm_access)$/;"	f
+svn_wc__atts_to_entry	./subversion/libsvn_wc/entries.c	/^svn_wc__atts_to_entry (svn_wc_entry_t **new_entry,$/;"	f
+svn_wc__check_format	./subversion/libsvn_wc/questions.c	/^svn_wc__check_format (int wc_format, const char *path, apr_pool_t *pool)$/;"	f
+svn_wc__close_adm_file	./subversion/libsvn_wc/adm_files.c	/^svn_wc__close_adm_file (apr_file_t *fp,$/;"	f
+svn_wc__close_empty_file	./subversion/libsvn_wc/adm_files.c	/^svn_wc__close_empty_file (apr_file_t *fp,$/;"	f
+svn_wc__close_props	./subversion/libsvn_wc/adm_files.c	/^svn_wc__close_props (apr_file_t *fp,$/;"	f
+svn_wc__close_text_base	./subversion/libsvn_wc/adm_files.c	/^svn_wc__close_text_base (apr_file_t *fp,$/;"	f
+svn_wc__conflicting_propchanges_p	./subversion/libsvn_wc/props.c	/^svn_wc__conflicting_propchanges_p (const svn_string_t **description,$/;"	f
+svn_wc__do_update_cleanup	./subversion/libsvn_wc/adm_ops.c	/^svn_wc__do_update_cleanup (const char *path,$/;"	f
+svn_wc__empty_file_path	./subversion/libsvn_wc/adm_files.c	/^svn_wc__empty_file_path (const char *path,$/;"	f
+svn_wc__ensure_directory	./subversion/libsvn_wc/util.c	/^svn_wc__ensure_directory (const char *path, apr_pool_t *pool)$/;"	f
+svn_wc__entries_init	./subversion/libsvn_wc/entries.c	/^svn_wc__entries_init (const char *path,$/;"	f
+svn_wc__entries_write	./subversion/libsvn_wc/entries.c	/^svn_wc__entries_write (apr_hash_t *entries,$/;"	f
+svn_wc__entry_modify	./subversion/libsvn_wc/entries.c	/^svn_wc__entry_modify (svn_wc_adm_access_t *adm_access,$/;"	f
+svn_wc__entry_remove	./subversion/libsvn_wc/entries.c	/^svn_wc__entry_remove (apr_hash_t *entries, const char *name)$/;"	f
+svn_wc__eol_value_from_string	./subversion/libsvn_wc/translate.c	/^svn_wc__eol_value_from_string (const char **value, const char *eol)$/;"	f
+svn_wc__get_eol_style	./subversion/libsvn_wc/translate.c	/^svn_wc__get_eol_style (svn_subst_eol_style_t *style,$/;"	f
+svn_wc__get_existing_prop_reject_file	./subversion/libsvn_wc/props.c	/^svn_wc__get_existing_prop_reject_file (const char **reject_file,$/;"	f
+svn_wc__get_keywords	./subversion/libsvn_wc/translate.c	/^svn_wc__get_keywords (svn_subst_keywords_t **keywords,$/;"	f
+svn_wc__has_props	./subversion/libsvn_wc/props.c	/^svn_wc__has_props (svn_boolean_t *has_props,$/;"	f
+svn_wc__load_prop_file	./subversion/libsvn_wc/props.c	/^svn_wc__load_prop_file (const char *propfile_path,$/;"	f
+svn_wc__make_adm_thing	./subversion/libsvn_wc/adm_files.c	/^svn_wc__make_adm_thing (svn_wc_adm_access_t *adm_access,$/;"	f
+svn_wc__maybe_set_executable	./subversion/libsvn_wc/translate.c	/^svn_wc__maybe_set_executable (svn_boolean_t *did_set,$/;"	f
+svn_wc__merge_prop_diffs	./subversion/libsvn_wc/props.c	/^svn_wc__merge_prop_diffs (svn_wc_notify_state_t *state,$/;"	f
+svn_wc__open_adm_file	./subversion/libsvn_wc/adm_files.c	/^svn_wc__open_adm_file (apr_file_t **handle,$/;"	f
+svn_wc__open_empty_file	./subversion/libsvn_wc/adm_files.c	/^svn_wc__open_empty_file (apr_file_t **handle,$/;"	f
+svn_wc__open_props	./subversion/libsvn_wc/adm_files.c	/^svn_wc__open_props (apr_file_t **handle,$/;"	f
+svn_wc__open_text_base	./subversion/libsvn_wc/adm_files.c	/^svn_wc__open_text_base (apr_file_t **handle,$/;"	f
+svn_wc__prep_file_for_replacement	./subversion/libsvn_wc/adm_files.c	/^svn_wc__prep_file_for_replacement (const char *path,$/;"	f
+svn_wc__prop_base_path	./subversion/libsvn_wc/adm_files.c	/^svn_wc__prop_base_path (const char **prop_path,$/;"	f
+svn_wc__prop_path	./subversion/libsvn_wc/adm_files.c	/^svn_wc__prop_path (const char **prop_path,$/;"	f
+svn_wc__prop_time	./subversion/libsvn_wc/questions.h	/^  svn_wc__prop_time$/;"	e	enum:svn_wc__timestamp_kind
+svn_wc__remove_adm_file	./subversion/libsvn_wc/adm_files.c	/^svn_wc__remove_adm_file (const char *path, apr_pool_t *pool, ...)$/;"	f
+svn_wc__remove_wcprops	./subversion/libsvn_wc/copy.c	/^svn_wc__remove_wcprops (svn_wc_adm_access_t *adm_access,$/;"	f
+svn_wc__run_log	./subversion/libsvn_wc/log.c	/^svn_wc__run_log (svn_wc_adm_access_t *adm_access,$/;"	f
+svn_wc__save_prop_file	./subversion/libsvn_wc/props.c	/^svn_wc__save_prop_file (const char *propfile_path,$/;"	f
+svn_wc__sync_props	./subversion/libsvn_wc/adm_files.c	/^svn_wc__sync_props (const char *path,$/;"	f
+svn_wc__sync_text_base	./subversion/libsvn_wc/adm_files.c	/^svn_wc__sync_text_base (const char *path, apr_pool_t *pool)$/;"	f
+svn_wc__text_base_path	./subversion/libsvn_wc/adm_files.c	/^svn_wc__text_base_path (const char *path,$/;"	f
+svn_wc__text_time	./subversion/libsvn_wc/questions.h	/^  svn_wc__text_time = 1,$/;"	e	enum:svn_wc__timestamp_kind
+svn_wc__timestamp_kind	./subversion/libsvn_wc/questions.h	/^enum svn_wc__timestamp_kind$/;"	g
+svn_wc__timestamps_equal_p	./subversion/libsvn_wc/questions.c	/^svn_wc__timestamps_equal_p (svn_boolean_t *equal_p,$/;"	f
+svn_wc__tweak_entry	./subversion/libsvn_wc/entries.c	/^svn_wc__tweak_entry (apr_hash_t *entries,$/;"	f
+svn_wc__versioned_file_modcheck	./subversion/libsvn_wc/questions.c	/^svn_wc__versioned_file_modcheck (svn_boolean_t *modified_p,$/;"	f
+svn_wc__wcprop_get	./subversion/libsvn_wc/props.c	/^svn_wc__wcprop_get (const svn_string_t **value,$/;"	f
+svn_wc__wcprop_path	./subversion/libsvn_wc/adm_files.c	/^svn_wc__wcprop_path (const char **wcprop_path,$/;"	f
+svn_wc__wcprop_set	./subversion/libsvn_wc/props.c	/^svn_wc__wcprop_set (const char *name,$/;"	f
+svn_wc__xfer_action	./subversion/libsvn_wc/log.c	/^enum svn_wc__xfer_action {$/;"	g	file:
+svn_wc__xfer_append	./subversion/libsvn_wc/log.c	/^  svn_wc__xfer_append,$/;"	e	enum:svn_wc__xfer_action	file:
+svn_wc__xfer_cp	./subversion/libsvn_wc/log.c	/^  svn_wc__xfer_cp,$/;"	e	enum:svn_wc__xfer_action	file:
+svn_wc__xfer_cp_and_detranslate	./subversion/libsvn_wc/log.c	/^  svn_wc__xfer_cp_and_detranslate$/;"	e	enum:svn_wc__xfer_action	file:
+svn_wc__xfer_cp_and_translate	./subversion/libsvn_wc/log.c	/^  svn_wc__xfer_cp_and_translate,$/;"	e	enum:svn_wc__xfer_action	file:
+svn_wc__xfer_mv	./subversion/libsvn_wc/log.c	/^  svn_wc__xfer_mv,$/;"	e	enum:svn_wc__xfer_action	file:
+svn_wc_add	./subversion/libsvn_wc/adm_ops.c	/^svn_wc_add (const char *path,$/;"	f
+svn_wc_add_repos_file	./subversion/libsvn_wc/update_editor.c	/^svn_wc_add_repos_file (const char *dst_path,$/;"	f
+svn_wc_adm_access_path	./subversion/libsvn_wc/lock.c	/^svn_wc_adm_access_path (svn_wc_adm_access_t *adm_access)$/;"	f
+svn_wc_adm_access_pool	./subversion/libsvn_wc/lock.c	/^svn_wc_adm_access_pool (svn_wc_adm_access_t *adm_access)$/;"	f
+svn_wc_adm_access_t	./subversion/include/svn_wc.h	/^typedef struct svn_wc_adm_access_t svn_wc_adm_access_t;$/;"	t
+svn_wc_adm_access_t	./subversion/libsvn_wc/lock.c	/^struct svn_wc_adm_access_t$/;"	s	file:
+svn_wc_adm_close	./subversion/libsvn_wc/lock.c	/^svn_wc_adm_close (svn_wc_adm_access_t *adm_access)$/;"	f
+svn_wc_adm_locked	./subversion/libsvn_wc/lock.c	/^svn_wc_adm_locked (svn_wc_adm_access_t *adm_access)$/;"	f
+svn_wc_adm_open	./subversion/libsvn_wc/lock.c	/^svn_wc_adm_open (svn_wc_adm_access_t **adm_access,$/;"	f
+svn_wc_adm_probe_open	./subversion/libsvn_wc/lock.c	/^svn_wc_adm_probe_open (svn_wc_adm_access_t **adm_access,$/;"	f
+svn_wc_adm_probe_retrieve	./subversion/libsvn_wc/lock.c	/^svn_wc_adm_probe_retrieve (svn_wc_adm_access_t **adm_access,$/;"	f
+svn_wc_adm_probe_try	./subversion/libsvn_wc/lock.c	/^svn_wc_adm_probe_try (svn_wc_adm_access_t **adm_access,$/;"	f
+svn_wc_adm_retrieve	./subversion/libsvn_wc/lock.c	/^svn_wc_adm_retrieve (svn_wc_adm_access_t **adm_access,$/;"	f
+svn_wc_check_wc	./subversion/libsvn_wc/questions.c	/^svn_wc_check_wc (const char *path,$/;"	f
+svn_wc_cleanup	./subversion/libsvn_wc/log.c	/^svn_wc_cleanup (const char *path,$/;"	f
+svn_wc_conflicted_p	./subversion/libsvn_wc/questions.c	/^svn_wc_conflicted_p (svn_boolean_t *text_conflicted_p,$/;"	f
+svn_wc_copy	./subversion/libsvn_wc/copy.c	/^svn_wc_copy (const char *src_path,$/;"	f
+svn_wc_crawl_revisions	./subversion/libsvn_wc/adm_crawler.c	/^svn_wc_crawl_revisions (const char *path,$/;"	f
+svn_wc_create_tmp_file	./subversion/libsvn_wc/adm_files.c	/^svn_wc_create_tmp_file (apr_file_t **fp,$/;"	f
+svn_wc_delete	./subversion/libsvn_wc/adm_ops.c	/^svn_wc_delete (const char *path,$/;"	f
+svn_wc_diff	./subversion/libsvn_wc/diff.c	/^svn_wc_diff (svn_wc_adm_access_t *anchor,$/;"	f
+svn_wc_diff_callbacks_t	./subversion/include/svn_wc.h	/^typedef struct svn_wc_diff_callbacks_t$/;"	s
+svn_wc_diff_callbacks_t	./subversion/include/svn_wc.h	/^} svn_wc_diff_callbacks_t;$/;"	t
+svn_wc_dup_status	./subversion/libsvn_wc/status.c	/^svn_wc_dup_status (svn_wc_status_t *orig_stat,$/;"	f
+svn_wc_edited_externals	./subversion/libsvn_wc/update_editor.c	/^svn_wc_edited_externals (apr_hash_t **externals_old,$/;"	f
+svn_wc_ensure_adm	./subversion/libsvn_wc/adm_files.c	/^svn_wc_ensure_adm (const char *path,$/;"	f
+svn_wc_entries_read	./subversion/libsvn_wc/entries.c	/^svn_wc_entries_read (apr_hash_t **entries,$/;"	f
+svn_wc_entry	./subversion/libsvn_wc/entries.c	/^svn_wc_entry (const svn_wc_entry_t **entry,$/;"	f
+svn_wc_entry_callbacks_t	./subversion/include/svn_wc.h	/^typedef struct svn_wc_entry_callbacks_t$/;"	s
+svn_wc_entry_callbacks_t	./subversion/include/svn_wc.h	/^} svn_wc_entry_callbacks_t;$/;"	t
+svn_wc_entry_dup	./subversion/libsvn_wc/entries.c	/^svn_wc_entry_dup (const svn_wc_entry_t *entry, apr_pool_t *pool)$/;"	f
+svn_wc_entry_t	./subversion/include/svn_wc.h	/^typedef struct svn_wc_entry_t$/;"	s
+svn_wc_entry_t	./subversion/include/svn_wc.h	/^} svn_wc_entry_t;$/;"	t
+svn_wc_external_item_t	./subversion/include/svn_wc.h	/^typedef struct svn_wc_external_item_t$/;"	s
+svn_wc_external_item_t	./subversion/include/svn_wc.h	/^} svn_wc_external_item_t;$/;"	t
+svn_wc_get_actual_target	./subversion/libsvn_wc/update_editor.c	/^svn_wc_get_actual_target (const char *path,$/;"	f
+svn_wc_get_ancestry	./subversion/libsvn_wc/adm_ops.c	/^svn_wc_get_ancestry (char **url,$/;"	f
+svn_wc_get_default_ignores	./subversion/libsvn_wc/status.c	/^svn_wc_get_default_ignores (apr_array_header_t **patterns,$/;"	f
+svn_wc_get_diff_editor	./subversion/libsvn_wc/diff.c	/^svn_wc_get_diff_editor (svn_wc_adm_access_t *anchor,$/;"	f
+svn_wc_get_pristine_copy_path	./subversion/libsvn_wc/adm_ops.c	/^svn_wc_get_pristine_copy_path (const char *path,$/;"	f
+svn_wc_get_prop_diffs	./subversion/libsvn_wc/props.c	/^svn_wc_get_prop_diffs (apr_array_header_t **propchanges,$/;"	f
+svn_wc_get_status_editor	./subversion/libsvn_wc/status.c	/^svn_wc_get_status_editor (const svn_delta_editor_t **editor,$/;"	f
+svn_wc_get_switch_editor	./subversion/libsvn_wc/update_editor.c	/^svn_wc_get_switch_editor (svn_revnum_t *target_revision,$/;"	f
+svn_wc_get_update_editor	./subversion/libsvn_wc/update_editor.c	/^svn_wc_get_update_editor (svn_revnum_t *target_revision,$/;"	f
+svn_wc_has_binary_prop	./subversion/libsvn_wc/questions.c	/^svn_wc_has_binary_prop (svn_boolean_t *has_binary_prop,$/;"	f
+svn_wc_init_traversal_info	./subversion/libsvn_wc/update_editor.c	/^svn_wc_init_traversal_info (apr_pool_t *pool)$/;"	f
+svn_wc_is_entry_prop	./subversion/libsvn_wc/props.c	/^svn_wc_is_entry_prop (const char *name)$/;"	f
+svn_wc_is_normal_prop	./subversion/libsvn_wc/props.c	/^svn_wc_is_normal_prop (const char *name)$/;"	f
+svn_wc_is_wc_prop	./subversion/libsvn_wc/props.c	/^svn_wc_is_wc_prop (const char *name)$/;"	f
+svn_wc_is_wc_root	./subversion/libsvn_wc/update_editor.c	/^svn_wc_is_wc_root (svn_boolean_t *wc_root,$/;"	f
+svn_wc_locked	./subversion/libsvn_wc/lock.c	/^svn_wc_locked (svn_boolean_t *locked, const char *path, apr_pool_t *pool)$/;"	f
+svn_wc_mark_missing_deleted	./subversion/libsvn_wc/entries.c	/^svn_wc_mark_missing_deleted (const char *path,$/;"	f
+svn_wc_merge	./subversion/libsvn_wc/merge.c	/^svn_wc_merge (const char *left,$/;"	f
+svn_wc_merge_conflict	./subversion/include/svn_wc.h	/^   svn_wc_merge_conflict,$/;"	e	enum:svn_wc_merge_outcome_t
+svn_wc_merge_merged	./subversion/include/svn_wc.h	/^   svn_wc_merge_merged,$/;"	e	enum:svn_wc_merge_outcome_t
+svn_wc_merge_no_merge	./subversion/include/svn_wc.h	/^   svn_wc_merge_no_merge$/;"	e	enum:svn_wc_merge_outcome_t
+svn_wc_merge_outcome_t	./subversion/include/svn_wc.h	/^typedef enum svn_wc_merge_outcome_t$/;"	g
+svn_wc_merge_outcome_t	./subversion/include/svn_wc.h	/^} svn_wc_merge_outcome_t;$/;"	t
+svn_wc_merge_prop_diffs	./subversion/libsvn_wc/props.c	/^svn_wc_merge_prop_diffs (svn_wc_notify_state_t *state,$/;"	f
+svn_wc_merge_unchanged	./subversion/include/svn_wc.h	/^   svn_wc_merge_unchanged,$/;"	e	enum:svn_wc_merge_outcome_t
+svn_wc_notify_action_t	./subversion/include/svn_wc.h	/^typedef enum svn_wc_notify_action_t$/;"	g
+svn_wc_notify_action_t	./subversion/include/svn_wc.h	/^} svn_wc_notify_action_t;$/;"	t
+svn_wc_notify_add	./subversion/include/svn_wc.h	/^  svn_wc_notify_add = 0,$/;"	e	enum:svn_wc_notify_action_t
+svn_wc_notify_blame_revision	./subversion/include/svn_wc.h	/^  svn_wc_notify_blame_revision$/;"	e	enum:svn_wc_notify_action_t
+svn_wc_notify_commit_added	./subversion/include/svn_wc.h	/^  svn_wc_notify_commit_added,$/;"	e	enum:svn_wc_notify_action_t
+svn_wc_notify_commit_deleted	./subversion/include/svn_wc.h	/^  svn_wc_notify_commit_deleted,$/;"	e	enum:svn_wc_notify_action_t
+svn_wc_notify_commit_modified	./subversion/include/svn_wc.h	/^  svn_wc_notify_commit_modified,$/;"	e	enum:svn_wc_notify_action_t
+svn_wc_notify_commit_postfix_txdelta	./subversion/include/svn_wc.h	/^  svn_wc_notify_commit_postfix_txdelta,$/;"	e	enum:svn_wc_notify_action_t
+svn_wc_notify_commit_replaced	./subversion/include/svn_wc.h	/^  svn_wc_notify_commit_replaced,$/;"	e	enum:svn_wc_notify_action_t
+svn_wc_notify_copy	./subversion/include/svn_wc.h	/^  svn_wc_notify_copy,$/;"	e	enum:svn_wc_notify_action_t
+svn_wc_notify_delete	./subversion/include/svn_wc.h	/^  svn_wc_notify_delete,$/;"	e	enum:svn_wc_notify_action_t
+svn_wc_notify_failed_revert	./subversion/include/svn_wc.h	/^  svn_wc_notify_failed_revert,$/;"	e	enum:svn_wc_notify_action_t
+svn_wc_notify_func_t	./subversion/include/svn_wc.h	/^typedef void (*svn_wc_notify_func_t) (void *baton,$/;"	t
+svn_wc_notify_resolved	./subversion/include/svn_wc.h	/^  svn_wc_notify_resolved,$/;"	e	enum:svn_wc_notify_action_t
+svn_wc_notify_restore	./subversion/include/svn_wc.h	/^  svn_wc_notify_restore,$/;"	e	enum:svn_wc_notify_action_t
+svn_wc_notify_revert	./subversion/include/svn_wc.h	/^  svn_wc_notify_revert,$/;"	e	enum:svn_wc_notify_action_t
+svn_wc_notify_skip	./subversion/include/svn_wc.h	/^  svn_wc_notify_skip,$/;"	e	enum:svn_wc_notify_action_t
+svn_wc_notify_state_changed	./subversion/include/svn_wc.h	/^  svn_wc_notify_state_changed,$/;"	e	enum:svn_wc_notify_state_t
+svn_wc_notify_state_conflicted	./subversion/include/svn_wc.h	/^  svn_wc_notify_state_conflicted$/;"	e	enum:svn_wc_notify_state_t
+svn_wc_notify_state_inapplicable	./subversion/include/svn_wc.h	/^  svn_wc_notify_state_inapplicable = 0,$/;"	e	enum:svn_wc_notify_state_t
+svn_wc_notify_state_merged	./subversion/include/svn_wc.h	/^  svn_wc_notify_state_merged,$/;"	e	enum:svn_wc_notify_state_t
+svn_wc_notify_state_missing	./subversion/include/svn_wc.h	/^  svn_wc_notify_state_missing,$/;"	e	enum:svn_wc_notify_state_t
+svn_wc_notify_state_obstructed	./subversion/include/svn_wc.h	/^  svn_wc_notify_state_obstructed,$/;"	e	enum:svn_wc_notify_state_t
+svn_wc_notify_state_t	./subversion/include/svn_wc.h	/^typedef enum svn_wc_notify_state_t$/;"	g
+svn_wc_notify_state_t	./subversion/include/svn_wc.h	/^} svn_wc_notify_state_t;$/;"	t
+svn_wc_notify_state_unchanged	./subversion/include/svn_wc.h	/^  svn_wc_notify_state_unchanged,$/;"	e	enum:svn_wc_notify_state_t
+svn_wc_notify_state_unknown	./subversion/include/svn_wc.h	/^  svn_wc_notify_state_unknown,$/;"	e	enum:svn_wc_notify_state_t
+svn_wc_notify_status_completed	./subversion/include/svn_wc.h	/^  svn_wc_notify_status_completed,$/;"	e	enum:svn_wc_notify_action_t
+svn_wc_notify_status_external	./subversion/include/svn_wc.h	/^  svn_wc_notify_status_external,$/;"	e	enum:svn_wc_notify_action_t
+svn_wc_notify_update_add	./subversion/include/svn_wc.h	/^  svn_wc_notify_update_add,$/;"	e	enum:svn_wc_notify_action_t
+svn_wc_notify_update_completed	./subversion/include/svn_wc.h	/^  svn_wc_notify_update_completed,$/;"	e	enum:svn_wc_notify_action_t
+svn_wc_notify_update_delete	./subversion/include/svn_wc.h	/^  svn_wc_notify_update_delete,$/;"	e	enum:svn_wc_notify_action_t
+svn_wc_notify_update_external	./subversion/include/svn_wc.h	/^  svn_wc_notify_update_external,$/;"	e	enum:svn_wc_notify_action_t
+svn_wc_notify_update_update	./subversion/include/svn_wc.h	/^  svn_wc_notify_update_update,$/;"	e	enum:svn_wc_notify_action_t
+svn_wc_parse_externals_description	./subversion/libsvn_wc/props.c	/^svn_wc_parse_externals_description (apr_hash_t **externals_p,$/;"	f
+svn_wc_process_committed	./subversion/libsvn_wc/adm_ops.c	/^svn_wc_process_committed (const char *path,$/;"	f
+svn_wc_prop_get	./subversion/libsvn_wc/props.c	/^svn_wc_prop_get (const svn_string_t **value,$/;"	f
+svn_wc_prop_list	./subversion/libsvn_wc/props.c	/^svn_wc_prop_list (apr_hash_t **props,$/;"	f
+svn_wc_prop_set	./subversion/libsvn_wc/props.c	/^svn_wc_prop_set (const char *name,$/;"	f
+svn_wc_props_modified_p	./subversion/libsvn_wc/props.c	/^svn_wc_props_modified_p (svn_boolean_t *modified_p,$/;"	f
+svn_wc_relocate	./subversion/libsvn_wc/relocate.c	/^svn_wc_relocate (const char *path,$/;"	f
+svn_wc_relocation_validator_t	./subversion/include/svn_wc.h	/^typedef svn_error_t *(*svn_wc_relocation_validator_t) (void *baton,$/;"	t
+svn_wc_remove_from_revision_control	./subversion/libsvn_wc/adm_ops.c	/^svn_wc_remove_from_revision_control (svn_wc_adm_access_t *adm_access,$/;"	f
+svn_wc_resolved_conflict	./subversion/libsvn_wc/adm_ops.c	/^svn_wc_resolved_conflict (const char *path,$/;"	f
+svn_wc_revert	./subversion/libsvn_wc/adm_ops.c	/^svn_wc_revert (const char *path,$/;"	f
+svn_wc_schedule_add	./subversion/include/svn_wc.h	/^  svn_wc_schedule_add,$/;"	e	enum:svn_wc_schedule_t
+svn_wc_schedule_delete	./subversion/include/svn_wc.h	/^  svn_wc_schedule_delete,$/;"	e	enum:svn_wc_schedule_t
+svn_wc_schedule_normal	./subversion/include/svn_wc.h	/^  svn_wc_schedule_normal,$/;"	e	enum:svn_wc_schedule_t
+svn_wc_schedule_replace	./subversion/include/svn_wc.h	/^  svn_wc_schedule_replace$/;"	e	enum:svn_wc_schedule_t
+svn_wc_schedule_t	./subversion/include/svn_wc.h	/^typedef enum svn_wc_schedule_t$/;"	g
+svn_wc_schedule_t	./subversion/include/svn_wc.h	/^} svn_wc_schedule_t;$/;"	t
+svn_wc_status	./subversion/libsvn_wc/status.c	/^svn_wc_status (svn_wc_status_t **status,$/;"	f
+svn_wc_status_added	./subversion/include/svn_wc.h	/^    svn_wc_status_added,$/;"	e	enum:svn_wc_status_kind
+svn_wc_status_conflicted	./subversion/include/svn_wc.h	/^    svn_wc_status_conflicted,$/;"	e	enum:svn_wc_status_kind
+svn_wc_status_deleted	./subversion/include/svn_wc.h	/^    svn_wc_status_deleted,$/;"	e	enum:svn_wc_status_kind
+svn_wc_status_external	./subversion/include/svn_wc.h	/^    svn_wc_status_external,$/;"	e	enum:svn_wc_status_kind
+svn_wc_status_func_t	./subversion/include/svn_wc.h	/^typedef void (*svn_wc_status_func_t) (void *baton,$/;"	t
+svn_wc_status_ignored	./subversion/include/svn_wc.h	/^    svn_wc_status_ignored,$/;"	e	enum:svn_wc_status_kind
+svn_wc_status_incomplete	./subversion/include/svn_wc.h	/^    svn_wc_status_incomplete$/;"	e	enum:svn_wc_status_kind
+svn_wc_status_kind	./subversion/include/svn_wc.h	/^enum svn_wc_status_kind$/;"	g
+svn_wc_status_merged	./subversion/include/svn_wc.h	/^    svn_wc_status_merged,$/;"	e	enum:svn_wc_status_kind
+svn_wc_status_missing	./subversion/include/svn_wc.h	/^    svn_wc_status_missing,$/;"	e	enum:svn_wc_status_kind
+svn_wc_status_modified	./subversion/include/svn_wc.h	/^    svn_wc_status_modified,$/;"	e	enum:svn_wc_status_kind
+svn_wc_status_none	./subversion/include/svn_wc.h	/^    svn_wc_status_none = 1,$/;"	e	enum:svn_wc_status_kind
+svn_wc_status_normal	./subversion/include/svn_wc.h	/^    svn_wc_status_normal,$/;"	e	enum:svn_wc_status_kind
+svn_wc_status_obstructed	./subversion/include/svn_wc.h	/^    svn_wc_status_obstructed,$/;"	e	enum:svn_wc_status_kind
+svn_wc_status_replaced	./subversion/include/svn_wc.h	/^    svn_wc_status_replaced,$/;"	e	enum:svn_wc_status_kind
+svn_wc_status_t	./subversion/include/svn_wc.h	/^typedef struct svn_wc_status_t$/;"	s
+svn_wc_status_t	./subversion/include/svn_wc.h	/^} svn_wc_status_t;$/;"	t
+svn_wc_status_unversioned	./subversion/include/svn_wc.h	/^    svn_wc_status_unversioned,$/;"	e	enum:svn_wc_status_kind
+svn_wc_text_modified_p	./subversion/libsvn_wc/questions.c	/^svn_wc_text_modified_p (svn_boolean_t *modified_p,$/;"	f
+svn_wc_translated_file	./subversion/libsvn_wc/translate.c	/^svn_wc_translated_file (const char **xlated_p,$/;"	f
+svn_wc_transmit_prop_deltas	./subversion/libsvn_wc/adm_crawler.c	/^svn_wc_transmit_prop_deltas (const char *path,$/;"	f
+svn_wc_transmit_text_deltas	./subversion/libsvn_wc/adm_crawler.c	/^svn_wc_transmit_text_deltas (const char *path,$/;"	f
+svn_wc_traversal_info_t	./subversion/include/svn_wc.h	/^typedef struct svn_wc_traversal_info_t svn_wc_traversal_info_t;$/;"	t
+svn_wc_traversal_info_t	./subversion/libsvn_wc/wc.h	/^struct svn_wc_traversal_info_t$/;"	s
+svn_wc_walk_entries	./subversion/libsvn_wc/entries.c	/^svn_wc_walk_entries (const char *path,$/;"	f
+svn_write_fn_t	./subversion/include/svn_io.h	/^typedef svn_error_t *(*svn_write_fn_t) (void *baton,$/;"	t
+svn_xml_ap_to_hash	./subversion/libsvn_subr/xml.c	/^svn_xml_ap_to_hash (va_list ap, apr_pool_t *pool)$/;"	f
+svn_xml_char_data	./subversion/include/svn_xml.h	/^typedef void (*svn_xml_char_data)(void *baton,$/;"	t
+svn_xml_end_elem	./subversion/include/svn_xml.h	/^typedef void (*svn_xml_end_elem)(void *baton, const char *name);$/;"	t
+svn_xml_escape_attr_cstring	./subversion/libsvn_subr/xml.c	/^svn_xml_escape_attr_cstring (svn_stringbuf_t **outstr,$/;"	f
+svn_xml_escape_attr_string	./subversion/libsvn_subr/xml.c	/^svn_xml_escape_attr_string (svn_stringbuf_t **outstr,$/;"	f
+svn_xml_escape_attr_stringbuf	./subversion/libsvn_subr/xml.c	/^svn_xml_escape_attr_stringbuf (svn_stringbuf_t **outstr,$/;"	f
+svn_xml_escape_cdata_cstring	./subversion/libsvn_subr/xml.c	/^svn_xml_escape_cdata_cstring (svn_stringbuf_t **outstr,$/;"	f
+svn_xml_escape_cdata_string	./subversion/libsvn_subr/xml.c	/^svn_xml_escape_cdata_string (svn_stringbuf_t **outstr,$/;"	f
+svn_xml_escape_cdata_stringbuf	./subversion/libsvn_subr/xml.c	/^svn_xml_escape_cdata_stringbuf (svn_stringbuf_t **outstr,$/;"	f
+svn_xml_free_parser	./subversion/libsvn_subr/xml.c	/^svn_xml_free_parser (svn_xml_parser_t *svn_parser)$/;"	f
+svn_xml_get_attr_value	./subversion/libsvn_subr/xml.c	/^svn_xml_get_attr_value (const char *name, const char **atts)$/;"	f
+svn_xml_hash_atts_overlaying	./subversion/libsvn_subr/xml.c	/^svn_xml_hash_atts_overlaying (const char **atts,$/;"	f
+svn_xml_hash_atts_preserving	./subversion/libsvn_subr/xml.c	/^svn_xml_hash_atts_preserving (const char **atts,$/;"	f
+svn_xml_is_xml_safe	./subversion/libsvn_subr/xml.c	/^svn_xml_is_xml_safe (const char *data, apr_size_t len)$/;"	f
+svn_xml_make_att_hash	./subversion/libsvn_subr/xml.c	/^svn_xml_make_att_hash (const char **atts, apr_pool_t *pool)$/;"	f
+svn_xml_make_close_tag	./subversion/libsvn_subr/xml.c	/^void svn_xml_make_close_tag (svn_stringbuf_t **str,$/;"	f
+svn_xml_make_header	./subversion/libsvn_subr/xml.c	/^svn_xml_make_header (svn_stringbuf_t **str, apr_pool_t *pool)$/;"	f
+svn_xml_make_open_tag	./subversion/libsvn_subr/xml.c	/^svn_xml_make_open_tag (svn_stringbuf_t **str,$/;"	f
+svn_xml_make_open_tag_hash	./subversion/libsvn_subr/xml.c	/^svn_xml_make_open_tag_hash (svn_stringbuf_t **str,$/;"	f
+svn_xml_make_open_tag_v	./subversion/libsvn_subr/xml.c	/^svn_xml_make_open_tag_v (svn_stringbuf_t **str,$/;"	f
+svn_xml_make_parser	./subversion/libsvn_subr/xml.c	/^svn_xml_make_parser (void *baton,$/;"	f
+svn_xml_normal	./subversion/include/svn_xml.h	/^  svn_xml_normal = 1,$/;"	e	enum:svn_xml_open_tag_style
+svn_xml_open_tag_style	./subversion/include/svn_xml.h	/^enum svn_xml_open_tag_style {$/;"	g
+svn_xml_parse	./subversion/libsvn_subr/xml.c	/^svn_xml_parse (svn_xml_parser_t *svn_parser,$/;"	f
+svn_xml_parser_t	./subversion/include/svn_xml.h	/^typedef struct svn_xml_parser_t svn_xml_parser_t;$/;"	t
+svn_xml_parser_t	./subversion/libsvn_subr/xml.c	/^struct svn_xml_parser_t$/;"	s	file:
+svn_xml_protect_pcdata	./subversion/include/svn_xml.h	/^  svn_xml_protect_pcdata,$/;"	e	enum:svn_xml_open_tag_style
+svn_xml_self_closing	./subversion/include/svn_xml.h	/^  svn_xml_self_closing$/;"	e	enum:svn_xml_open_tag_style
+svn_xml_signal_bailout	./subversion/libsvn_subr/xml.c	/^void svn_xml_signal_bailout (svn_error_t *error,$/;"	f
+svn_xml_start_elem	./subversion/include/svn_xml.h	/^typedef void (*svn_xml_start_elem)(void *baton,$/;"	t
+svnadmin__bdb_log_keep	./subversion/svnadmin/main.c	/^    svnadmin__bdb_log_keep,$/;"	e	file:
+svnadmin__bdb_txn_nosync	./subversion/svnadmin/main.c	/^    svnadmin__bdb_txn_nosync,$/;"	e	file:
+svnadmin__bypass_hooks	./subversion/svnadmin/main.c	/^    svnadmin__bypass_hooks,$/;"	e	file:
+svnadmin__clean_logs	./subversion/svnadmin/main.c	/^    svnadmin__clean_logs$/;"	e	file:
+svnadmin__config_dir	./subversion/svnadmin/main.c	/^    svnadmin__config_dir,$/;"	e	file:
+svnadmin__force_uuid	./subversion/svnadmin/main.c	/^    svnadmin__force_uuid,$/;"	e	file:
+svnadmin__ignore_uuid	./subversion/svnadmin/main.c	/^    svnadmin__ignore_uuid,$/;"	e	file:
+svnadmin__incremental	./subversion/svnadmin/main.c	/^    svnadmin__incremental,$/;"	e	file:
+svnadmin__parent_dir	./subversion/svnadmin/main.c	/^    svnadmin__parent_dir,$/;"	e	file:
+svnadmin__version	./subversion/svnadmin/main.c	/^    svnadmin__version = SVN_OPT_FIRST_LONGOPT_ID,$/;"	e	file:
+svnadmin_opt_state	./subversion/svnadmin/main.c	/^struct svnadmin_opt_state$/;"	s	file:
+svndiff_decoder	./subversion/libsvn_ra_dav/fetch.c	/^  svn_stream_t *svndiff_decoder;$/;"	m	file:
+svndiff_len	./subversion/libsvn_fs/reps-strings.c	/^  apr_size_t svndiff_len; \/* amount of svndiff data written to the string *\/$/;"	m	struct:window_write_t	file:
+svndumpfilter__drop_empty_revs	./subversion/svndumpfilter/main.c	/^    svndumpfilter__drop_empty_revs = SVN_OPT_FIRST_LONGOPT_ID,$/;"	e	file:
+svndumpfilter__preserve_revprops	./subversion/svndumpfilter/main.c	/^    svndumpfilter__preserve_revprops$/;"	e	file:
+svndumpfilter__renumber_revs	./subversion/svndumpfilter/main.c	/^    svndumpfilter__renumber_revs,$/;"	e	file:
+svndumpfilter_opt_state	./subversion/svndumpfilter/main.c	/^struct svndumpfilter_opt_state$/;"	s	file:
+svnlook__no_diff_deleted	./subversion/svnlook/main.c	/^    svnlook__no_diff_deleted$/;"	e	file:
+svnlook__show_ids	./subversion/svnlook/main.c	/^    svnlook__show_ids,$/;"	e	file:
+svnlook__version	./subversion/svnlook/main.c	/^    svnlook__version = SVN_OPT_FIRST_LONGOPT_ID,$/;"	e	file:
+svnlook_ctxt_t	./subversion/svnlook/main.c	/^typedef struct svnlook_ctxt_t$/;"	s	file:
+svnlook_ctxt_t	./subversion/svnlook/main.c	/^} svnlook_ctxt_t;$/;"	t	file:
+svnlook_opt_state	./subversion/svnlook/main.c	/^struct svnlook_opt_state$/;"	s	file:
+svnserve__options	./subversion/svnserve/main.c	/^static const apr_getopt_option_t svnserve__options[] =$/;"	v	file:
+swig_type_info	./subversion/bindings/swig/swigutil_pl.h	/^typedef struct _unnamed swig_type_info;$/;"	t
+swig_type_info	./subversion/bindings/swig/swigutil_py.h	/^typedef struct _unnamed swig_type_info;$/;"	t
+switch_cmd	./subversion/svnserve/serve.c	/^static svn_error_t *switch_cmd(svn_ra_svn_conn_t *conn, apr_pool_t *pool,$/;"	f	file:
+switch_url	./subversion/libsvn_wc/update_editor.c	/^  const char *switch_url;$/;"	m	struct:edit_baton	file:
+switched	./subversion/include/svn_wc.h	/^  svn_boolean_t switched;$/;"	m	struct:svn_wc_status_t
+switched	./subversion/svnversion/main.c	/^  svn_boolean_t switched; \/* is anything switched? *\/$/;"	m	struct:status_baton	file:
+sync_adm_file	./subversion/libsvn_wc/adm_files.c	/^sync_adm_file (const char *path,$/;"	f	file:
+table	./subversion/libsvn_fs/trail.c	/^  const char *table;$/;"	m	struct:trail_debug_t	file:
+table	./subversion/libsvn_subr/auth.c	/^  provider_set_t *table;        \/* the table being searched *\/$/;"	m	struct:svn_auth_iterstate_t	file:
+table_p	./subversion/libsvn_fs/revs-txns.c	/^  apr_hash_t **table_p;$/;"	m	struct:revision_proplist_args	file:
+table_p	./subversion/libsvn_fs/revs-txns.c	/^  apr_hash_t **table_p;$/;"	m	struct:txn_proplist_args	file:
+table_p	./subversion/libsvn_fs/tree.c	/^  apr_hash_t **table_p;$/;"	m	struct:dir_entries_args	file:
+table_p	./subversion/libsvn_fs/tree.c	/^  apr_hash_t **table_p;$/;"	m	struct:node_proplist_args	file:
+tables	./subversion/libsvn_subr/auth.c	/^  apr_hash_t *tables;$/;"	m	struct:svn_auth_baton_t	file:
+take_from_entry	./subversion/libsvn_wc/entries.c	/^take_from_entry (svn_wc_entry_t *src, svn_wc_entry_t *dst, apr_pool_t *pool)$/;"	f	file:
+target	./subversion/libsvn_client/diff.c	/^  const char *target;                 \/* Working copy target of merge *\/$/;"	m	struct:merge_cmd_baton	file:
+target	./subversion/libsvn_client/repos_diff.c	/^  const char *target;$/;"	m	struct:edit_baton	file:
+target	./subversion/libsvn_delta/text_delta.c	/^  svn_stream_t *target;$/;"	m	struct:apply_baton	file:
+target	./subversion/libsvn_delta/text_delta.c	/^  svn_stream_t *target;$/;"	m	struct:svn_txdelta_stream_t	file:
+target	./subversion/libsvn_ra_dav/fetch.c	/^  const char *target;$/;"	m	file:
+target	./subversion/libsvn_repos/reporter.c	/^  const char *target;$/;"	m	struct:report_baton_t	file:
+target	./subversion/libsvn_wc/diff.c	/^  const char *target;$/;"	m	struct:edit_baton	file:
+target	./subversion/libsvn_wc/status.c	/^  const char *target;$/;"	m	struct:edit_baton	file:
+target	./subversion/libsvn_wc/update_editor.c	/^  const char *target;$/;"	m	struct:edit_baton	file:
+target_deleted	./subversion/libsvn_wc/update_editor.c	/^  svn_boolean_t target_deleted;$/;"	m	struct:edit_baton	file:
+target_dir	./subversion/include/svn_wc.h	/^  const char *target_dir;$/;"	m	struct:svn_wc_external_item_t
+target_offset	./subversion/libsvn_delta/compose_delta.c	/^  apr_size_t target_offset;$/;"	m	struct:range_index_node_t	file:
+target_offset	./subversion/libsvn_delta/compose_delta.c	/^  apr_size_t target_offset;$/;"	m	struct:range_list_node_t	file:
+target_revision	./subversion/libsvn_client/export.c	/^  svn_revnum_t *target_revision;$/;"	m	struct:edit_baton	file:
+target_revision	./subversion/libsvn_client/repos_diff.c	/^  svn_revnum_t target_revision;$/;"	m	struct:edit_baton	file:
+target_revision	./subversion/libsvn_wc/status.c	/^  svn_revnum_t *target_revision;$/;"	m	struct:edit_baton	file:
+target_revision	./subversion/libsvn_wc/update_editor.c	/^  svn_revnum_t *target_revision;$/;"	m	struct:edit_baton	file:
+target_root	./subversion/libsvn_repos/delta.c	/^  svn_fs_root_t *target_root;$/;"	m	struct:context	file:
+target_stream	./subversion/libsvn_fs/tree.c	/^  svn_stream_t *target_stream;$/;"	m	struct:txdelta_baton_t	file:
+target_string	./subversion/libsvn_fs/tree.c	/^  svn_stringbuf_t *target_string;$/;"	m	struct:txdelta_baton_t	file:
+targets	./subversion/clients/cmdline/cl.h	/^  apr_array_header_t *targets;   \/* target list from file *\/ \/* UTF-8! *\/$/;"	m	struct:svn_cl__opt_state_t
+tbuf	./subversion/libsvn_delta/text_delta.c	/^  char *tbuf;                   \/* Target buffer *\/$/;"	m	struct:apply_baton	file:
+tbuf_size	./subversion/libsvn_delta/text_delta.c	/^  apr_size_t tbuf_size;         \/* Allocated target buffer space *\/$/;"	m	struct:apply_baton	file:
+temp_file	./subversion/libsvn_wc/diff.c	/^  apr_file_t *temp_file;$/;"	m	struct:file_baton	file:
+temp_file_child_cleanup_handler	./subversion/libsvn_client/repos_diff.c	/^temp_file_child_cleanup_handler (void *arg)$/;"	f	file:
+temp_file_cleanup_handler	./subversion/libsvn_wc/diff.c	/^temp_file_cleanup_handler (void *arg)$/;"	f	file:
+temp_file_cleanup_handler_remover	./subversion/libsvn_wc/diff.c	/^temp_file_cleanup_handler_remover (void *arg)$/;"	f	file:
+temp_file_cleanup_register	./subversion/libsvn_client/repos_diff.c	/^temp_file_cleanup_register (const char *path,$/;"	f	file:
+temp_file_cleanup_s	./subversion/libsvn_client/repos_diff.c	/^struct temp_file_cleanup_s {$/;"	s	file:
+temp_file_plain_cleanup_handler	./subversion/libsvn_client/repos_diff.c	/^temp_file_plain_cleanup_handler (void *arg)$/;"	f	file:
+tempfiles	./subversion/libsvn_client/commit_util.c	/^  apr_hash_t *tempfiles;               \/* hash of tempfiles created *\/$/;"	m	struct:path_driver_cb_baton	file:
+template_match	./subversion/libsvn_subr/date.c	/^template_match (apr_time_exp_t *expt, svn_boolean_t *localtz,$/;"	f	file:
+terminate	./subversion/include/svn_ra_svn.h	/^  svn_boolean_t terminate;$/;"	m	struct:svn_ra_svn_cmd_entry_t
+test1	./subversion/tests/libsvn_subr/config-test.c	/^test1 (const char **msg, $/;"	f	file:
+test1	./subversion/tests/libsvn_subr/hashdump-test.c	/^test1 (const char **msg, $/;"	f	file:
+test1	./subversion/tests/libsvn_subr/string-test.c	/^test1 (const char **msg, $/;"	f	file:
+test10	./subversion/tests/libsvn_subr/string-test.c	/^test10 (const char **msg, $/;"	f	file:
+test11	./subversion/tests/libsvn_subr/string-test.c	/^test11 (const char **msg, $/;"	f	file:
+test12	./subversion/tests/libsvn_subr/string-test.c	/^test12 (const char **msg, $/;"	f	file:
+test2	./subversion/tests/libsvn_subr/config-test.c	/^test2 (const char **msg, $/;"	f	file:
+test2	./subversion/tests/libsvn_subr/hashdump-test.c	/^test2 (const char **msg, $/;"	f	file:
+test2	./subversion/tests/libsvn_subr/string-test.c	/^test2 (const char **msg, $/;"	f	file:
+test3	./subversion/tests/libsvn_subr/hashdump-test.c	/^test3 (const char **msg, $/;"	f	file:
+test3	./subversion/tests/libsvn_subr/string-test.c	/^test3 (const char **msg, $/;"	f	file:
+test4	./subversion/tests/libsvn_subr/string-test.c	/^test4 (const char **msg, $/;"	f	file:
+test5	./subversion/tests/libsvn_subr/string-test.c	/^test5 (const char **msg, $/;"	f	file:
+test6	./subversion/tests/libsvn_subr/string-test.c	/^test6 (const char **msg, $/;"	f	file:
+test7	./subversion/tests/libsvn_subr/string-test.c	/^test7 (const char **msg, $/;"	f	file:
+test8	./subversion/tests/libsvn_subr/string-test.c	/^test8 (const char **msg, $/;"	f	file:
+test9	./subversion/tests/libsvn_subr/string-test.c	/^test9 (const char **msg, $/;"	f	file:
+test_abort_edit	./subversion/tests/svn_test_editor.c	/^test_abort_edit (void *edit_baton,$/;"	f	file:
+test_absent_directory	./subversion/tests/svn_test_editor.c	/^test_absent_directory (const char *path,$/;"	f	file:
+test_absent_file	./subversion/tests/svn_test_editor.c	/^test_absent_file (const char *path,$/;"	f	file:
+test_add_directory	./subversion/tests/libsvn_repos/dir-delta-editor.c	/^test_add_directory (const char *path,$/;"	f	file:
+test_add_directory	./subversion/tests/svn_test_editor.c	/^test_add_directory (const char *path,$/;"	f	file:
+test_add_file	./subversion/tests/libsvn_repos/dir-delta-editor.c	/^test_add_file (const char *path,$/;"	f	file:
+test_add_file	./subversion/tests/svn_test_editor.c	/^test_add_file (const char *path,$/;"	f	file:
+test_apply_textdelta	./subversion/tests/libsvn_repos/dir-delta-editor.c	/^test_apply_textdelta (void *file_baton,$/;"	f	file:
+test_apply_textdelta	./subversion/tests/svn_test_editor.c	/^test_apply_textdelta (void *file_baton,$/;"	f	file:
+test_argc	./subversion/tests/svn_tests_main.c	/^int test_argc;$/;"	v
+test_argv	./subversion/tests/svn_tests_main.c	/^char **test_argv;$/;"	v
+test_basename	./subversion/tests/libsvn_subr/path-test.c	/^test_basename (const char **msg,$/;"	f	file:
+test_canonicalize	./subversion/tests/libsvn_subr/path-test.c	/^test_canonicalize (const char **msg,$/;"	f	file:
+test_change_dir_prop	./subversion/tests/libsvn_repos/dir-delta-editor.c	/^test_change_dir_prop (void *parent_baton,$/;"	f	file:
+test_change_dir_prop	./subversion/tests/svn_test_editor.c	/^test_change_dir_prop (void *parent_baton,$/;"	f	file:
+test_change_file_prop	./subversion/tests/libsvn_repos/dir-delta-editor.c	/^test_change_file_prop (void *file_baton,$/;"	f	file:
+test_change_file_prop	./subversion/tests/svn_test_editor.c	/^test_change_file_prop (void *file_baton,$/;"	f	file:
+test_close_directory	./subversion/tests/svn_test_editor.c	/^test_close_directory (void *dir_baton,$/;"	f	file:
+test_close_edit	./subversion/tests/svn_test_editor.c	/^test_close_edit (void *edit_baton,$/;"	f	file:
+test_close_file	./subversion/tests/svn_test_editor.c	/^test_close_file (void *file_baton,$/;"	f	file:
+test_commit_txn	./subversion/tests/libsvn_fs/fs-test.c	/^test_commit_txn (svn_revnum_t *new_rev,$/;"	f	file:
+test_decompose	./subversion/tests/libsvn_subr/path-test.c	/^test_decompose (const char **msg,$/;"	f	file:
+test_delete_entry	./subversion/tests/libsvn_repos/dir-delta-editor.c	/^test_delete_entry (const char *path,$/;"	f	file:
+test_delete_entry	./subversion/tests/svn_test_editor.c	/^test_delete_entry (const char *path,$/;"	f	file:
+test_funcs	./subversion/tests/libsvn_delta/random-test.c	/^struct svn_test_descriptor_t test_funcs[] =$/;"	v
+test_funcs	./subversion/tests/libsvn_diff/diff-diff3-test.c	/^struct svn_test_descriptor_t test_funcs[] =$/;"	v
+test_funcs	./subversion/tests/libsvn_fs/changes-test.c	/^struct svn_test_descriptor_t test_funcs[] =$/;"	v
+test_funcs	./subversion/tests/libsvn_fs/fs-test.c	/^struct svn_test_descriptor_t test_funcs[] =$/;"	v
+test_funcs	./subversion/tests/libsvn_fs/key-test.c	/^struct svn_test_descriptor_t test_funcs[] =$/;"	v
+test_funcs	./subversion/tests/libsvn_fs/skel-test.c	/^struct svn_test_descriptor_t test_funcs[] =$/;"	v
+test_funcs	./subversion/tests/libsvn_fs/strings-reps-test.c	/^struct svn_test_descriptor_t test_funcs[] =$/;"	v
+test_funcs	./subversion/tests/libsvn_ra_local/ra-local-test.c	/^struct svn_test_descriptor_t test_funcs[] =$/;"	v
+test_funcs	./subversion/tests/libsvn_repos/repos-test.c	/^struct svn_test_descriptor_t test_funcs[] =$/;"	v
+test_funcs	./subversion/tests/libsvn_subr/config-test.c	/^struct svn_test_descriptor_t test_funcs[] =$/;"	v
+test_funcs	./subversion/tests/libsvn_subr/hashdump-test.c	/^struct svn_test_descriptor_t test_funcs[] =$/;"	v
+test_funcs	./subversion/tests/libsvn_subr/path-test.c	/^struct svn_test_descriptor_t test_funcs[] =$/;"	v
+test_funcs	./subversion/tests/libsvn_subr/stream-test.c	/^struct svn_test_descriptor_t test_funcs[] =$/;"	v
+test_funcs	./subversion/tests/libsvn_subr/string-test.c	/^struct svn_test_descriptor_t test_funcs[] =$/;"	v
+test_funcs	./subversion/tests/libsvn_subr/time-test.c	/^struct svn_test_descriptor_t test_funcs[] =$/;"	v
+test_funcs	./subversion/tests/libsvn_subr/utf-test.c	/^struct svn_test_descriptor_t test_funcs[] =$/;"	v
+test_funcs	./subversion/tests/libsvn_wc/translate-test.c	/^struct svn_test_descriptor_t test_funcs[] =$/;"	v
+test_is_uri_safe	./subversion/tests/libsvn_subr/path-test.c	/^test_is_uri_safe (const char **msg,$/;"	f	file:
+test_is_url	./subversion/tests/libsvn_subr/path-test.c	/^test_is_url (const char **msg,$/;"	f	file:
+test_join	./subversion/tests/libsvn_subr/path-test.c	/^test_join (const char **msg,$/;"	f	file:
+test_node_created_rev	./subversion/tests/libsvn_fs/fs-test.c	/^test_node_created_rev (const char **msg,$/;"	f	file:
+test_old_timestring	./subversion/tests/libsvn_subr/time-test.c	/^const char *test_old_timestring = $/;"	v
+test_open_directory	./subversion/tests/libsvn_repos/dir-delta-editor.c	/^test_open_directory (const char *path,$/;"	f	file:
+test_open_directory	./subversion/tests/svn_test_editor.c	/^test_open_directory (const char *path,$/;"	f	file:
+test_open_file	./subversion/tests/libsvn_repos/dir-delta-editor.c	/^test_open_file (const char *path,$/;"	f	file:
+test_open_file	./subversion/tests/svn_test_editor.c	/^test_open_file (const char *path,$/;"	f	file:
+test_open_root	./subversion/tests/libsvn_repos/dir-delta-editor.c	/^test_open_root (void *edit_baton,$/;"	f	file:
+test_open_root	./subversion/tests/svn_test_editor.c	/^test_open_root (void *edit_baton,$/;"	f	file:
+test_parse_date	./subversion/tests/libsvn_subr/time-test.c	/^test_parse_date (const char **msg,$/;"	f	file:
+test_path_is_child	./subversion/tests/libsvn_subr/path-test.c	/^test_path_is_child (const char **msg,$/;"	f	file:
+test_path_split	./subversion/tests/libsvn_subr/path-test.c	/^test_path_split (const char **msg,$/;"	f	file:
+test_set_target_revision	./subversion/tests/svn_test_editor.c	/^test_set_target_revision (void *edit_baton,$/;"	f	file:
+test_stream_compressed	./subversion/tests/libsvn_subr/stream-test.c	/^test_stream_compressed (const char **msg,$/;"	f	file:
+test_stream_from_string	./subversion/tests/libsvn_subr/stream-test.c	/^test_stream_from_string (const char **msg,$/;"	f	file:
+test_strings	./subversion/tests/libsvn_fs/strings-reps-test.c	/^test_strings (const char **msg, $/;"	f	file:
+test_tempdir	./subversion/libsvn_subr/io.c	/^static int test_tempdir(const char *temp_dir, apr_pool_t *p)$/;"	f	file:
+test_three_way_merge_no_overlap	./subversion/tests/libsvn_diff/diff-diff3-test.c	/^test_three_way_merge_no_overlap (const char **msg,$/;"	f	file:
+test_three_way_merge_with_conflict	./subversion/tests/libsvn_diff/diff-diff3-test.c	/^test_three_way_merge_with_conflict (const char **msg,$/;"	f	file:
+test_three_way_merge_with_overlap	./subversion/tests/libsvn_diff/diff-diff3-test.c	/^test_three_way_merge_with_overlap (const char **msg,$/;"	f	file:
+test_time_from_cstring	./subversion/tests/libsvn_subr/time-test.c	/^test_time_from_cstring (const char **msg,$/;"	f	file:
+test_time_from_cstring_old	./subversion/tests/libsvn_subr/time-test.c	/^test_time_from_cstring_old (const char **msg,$/;"	f	file:
+test_time_invariant	./subversion/tests/libsvn_subr/time-test.c	/^test_time_invariant (const char **msg,$/;"	f	file:
+test_time_to_cstring	./subversion/tests/libsvn_subr/time-test.c	/^test_time_to_cstring (const char **msg,$/;"	f	file:
+test_timestamp	./subversion/tests/libsvn_subr/time-test.c	/^apr_time_t test_timestamp = APR_TIME_C(1021316450966679);$/;"	v
+test_timestring	./subversion/tests/libsvn_subr/time-test.c	/^const char *test_timestring =$/;"	v
+test_tree_node_validation	./subversion/tests/libsvn_fs/fs-test.c	/^test_tree_node_validation (const char **msg,$/;"	f	file:
+test_two_way_unified	./subversion/tests/libsvn_diff/diff-diff3-test.c	/^test_two_way_unified (const char **msg,$/;"	f	file:
+test_two_way_unified_suspect	./subversion/tests/libsvn_diff/diff-diff3-test.c	/^test_two_way_unified_suspect (const char **msg,$/;"	f	file:
+test_uri_encode	./subversion/tests/libsvn_subr/path-test.c	/^test_uri_encode (const char **msg,$/;"	f	file:
+text	./subversion/tests/libsvn_fs/strings-reps-test.c	/^  const char *text;$/;"	m	struct:string_args	file:
+text_baton_t	./subversion/libsvn_fs/tree.c	/^struct text_baton_t$/;"	s	file:
+text_changed	./subversion/libsvn_wc/status.c	/^  svn_boolean_t text_changed;$/;"	m	struct:dir_baton	file:
+text_changed	./subversion/libsvn_wc/status.c	/^  svn_boolean_t text_changed;$/;"	m	struct:file_baton	file:
+text_changed	./subversion/libsvn_wc/update_editor.c	/^  svn_boolean_t text_changed;$/;"	m	struct:file_baton	file:
+text_changed	./subversion/mod_dav_svn/update.c	/^  svn_boolean_t text_changed;        \/* Did the file's contents change? *\/$/;"	m	file:
+text_checksum	./subversion/mod_dav_svn/update.c	/^  const char *text_checksum;   \/* text_checksum (from close_file) *\/$/;"	m	file:
+text_deltas	./subversion/libsvn_repos/delta.c	/^  svn_boolean_t text_deltas;$/;"	m	struct:context	file:
+text_deltas	./subversion/libsvn_repos/reporter.c	/^  svn_boolean_t text_deltas; $/;"	m	struct:report_baton_t	file:
+text_digest	./subversion/libsvn_client/export.c	/^  unsigned char text_digest[APR_MD5_DIGESTSIZE];$/;"	m	struct:file_baton	file:
+text_len	./subversion/libsvn_fs/reps-strings.c	/^  apr_size_t text_len; \/* amount of fulltext data represented by this window *\/$/;"	m	struct:window_write_t	file:
+text_mod	./subversion/include/svn_fs.h	/^  svn_boolean_t text_mod;$/;"	m	struct:svn_fs_path_change_t
+text_mod	./subversion/include/svn_repos.h	/^  svn_boolean_t text_mod;$/;"	m	struct:svn_repos_node_t
+text_mod	./subversion/libsvn_fs/fs.h	/^  svn_boolean_t text_mod;$/;"	m
+text_off	./subversion/libsvn_fs/reps-strings.c	/^  svn_filesize_t text_off; \/* offset of fulltext represented by this window *\/$/;"	m	struct:window_write_t	file:
+text_status	./subversion/bindings/com/SVNStatus.h	/^        EWCStatus text_status;$/;"	m	class:CSVNStatus
+text_status	./subversion/include/svn_wc.h	/^  enum svn_wc_status_kind text_status;$/;"	m	struct:svn_wc_status_t
+text_stream_closer	./subversion/libsvn_fs/tree.c	/^text_stream_closer (void *baton)$/;"	f	file:
+text_stream_writer	./subversion/libsvn_fs/tree.c	/^text_stream_writer (void *baton,$/;"	f	file:
+text_time	./subversion/include/svn_wc.h	/^  apr_time_t text_time;$/;"	m	struct:svn_wc_entry_t
+tgt_id	./subversion/libsvn_fs/tree.c	/^  const svn_fs_id_t *tgt_id;$/;"	m	struct:txn_deltify_args	file:
+tgt_path	./subversion/libsvn_repos/reporter.c	/^  const char *tgt_path;$/;"	m	struct:report_baton_t	file:
+things_changed_args	./subversion/libsvn_fs/tree.c	/^struct things_changed_args$/;"	s	file:
+this_path_item	./subversion/libsvn_ra_dav/log.c	/^  svn_log_changed_path_t *this_path_item;$/;"	m	struct:log_baton	file:
+three_way_merge	./subversion/tests/libsvn_diff/diff-diff3-test.c	/^three_way_merge (const char *filename1,$/;"	f	file:
+thunk_abort_edit	./subversion/bindings/swig/swigutil_java.c	/^static svn_error_t * thunk_abort_edit(void *edit_baton, apr_pool_t *pool)$/;"	f	file:
+thunk_abort_edit	./subversion/bindings/swig/swigutil_pl.c	/^static svn_error_t * thunk_abort_edit(void *edit_baton,$/;"	f	file:
+thunk_abort_edit	./subversion/bindings/swig/swigutil_py.c	/^static svn_error_t * thunk_abort_edit(void *edit_baton,$/;"	f	file:
+thunk_absent_directory	./subversion/bindings/swig/swigutil_pl.c	/^static svn_error_t * thunk_absent_directory(const char *path,$/;"	f	file:
+thunk_absent_file	./subversion/bindings/swig/swigutil_pl.c	/^static svn_error_t * thunk_absent_file(const char *path,$/;"	f	file:
+thunk_add_directory	./subversion/bindings/swig/swigutil_java.c	/^static svn_error_t * thunk_add_directory(const char *path,$/;"	f	file:
+thunk_add_directory	./subversion/bindings/swig/swigutil_pl.c	/^static svn_error_t * thunk_add_directory(const char *path,$/;"	f	file:
+thunk_add_directory	./subversion/bindings/swig/swigutil_py.c	/^static svn_error_t * thunk_add_directory(const char *path,$/;"	f	file:
+thunk_add_file	./subversion/bindings/swig/swigutil_java.c	/^static svn_error_t * thunk_add_file(const char *path,$/;"	f	file:
+thunk_add_file	./subversion/bindings/swig/swigutil_pl.c	/^static svn_error_t * thunk_add_file(const char *path,$/;"	f	file:
+thunk_add_file	./subversion/bindings/swig/swigutil_py.c	/^static svn_error_t * thunk_add_file(const char *path,$/;"	f	file:
+thunk_apply_textdelta	./subversion/bindings/swig/swigutil_java.c	/^static svn_error_t * thunk_apply_textdelta($/;"	f	file:
+thunk_apply_textdelta	./subversion/bindings/swig/swigutil_pl.c	/^thunk_apply_textdelta(void *file_baton, $/;"	f	file:
+thunk_apply_textdelta	./subversion/bindings/swig/swigutil_py.c	/^thunk_apply_textdelta(void *file_baton, $/;"	f	file:
+thunk_change_dir_prop	./subversion/bindings/swig/swigutil_java.c	/^static svn_error_t * thunk_change_dir_prop(void *dir_baton,$/;"	f	file:
+thunk_change_dir_prop	./subversion/bindings/swig/swigutil_pl.c	/^static svn_error_t * thunk_change_dir_prop(void *dir_baton,$/;"	f	file:
+thunk_change_dir_prop	./subversion/bindings/swig/swigutil_py.c	/^static svn_error_t * thunk_change_dir_prop(void *dir_baton,$/;"	f	file:
+thunk_change_file_prop	./subversion/bindings/swig/swigutil_java.c	/^static svn_error_t * thunk_change_file_prop(void *file_baton,$/;"	f	file:
+thunk_change_file_prop	./subversion/bindings/swig/swigutil_pl.c	/^static svn_error_t * thunk_change_file_prop(void *file_baton,$/;"	f	file:
+thunk_change_file_prop	./subversion/bindings/swig/swigutil_py.c	/^static svn_error_t * thunk_change_file_prop(void *file_baton,$/;"	f	file:
+thunk_close_directory	./subversion/bindings/swig/swigutil_java.c	/^static svn_error_t * thunk_close_directory(void *dir_baton, apr_pool_t *pool)$/;"	f	file:
+thunk_close_directory	./subversion/bindings/swig/swigutil_pl.c	/^static svn_error_t * thunk_close_directory(void *dir_baton,$/;"	f	file:
+thunk_close_directory	./subversion/bindings/swig/swigutil_py.c	/^static svn_error_t * thunk_close_directory(void *dir_baton,$/;"	f	file:
+thunk_close_edit	./subversion/bindings/swig/swigutil_java.c	/^static svn_error_t * thunk_close_edit(void *edit_baton, apr_pool_t *pool)$/;"	f	file:
+thunk_close_edit	./subversion/bindings/swig/swigutil_pl.c	/^static svn_error_t * thunk_close_edit(void *edit_baton,$/;"	f	file:
+thunk_close_edit	./subversion/bindings/swig/swigutil_py.c	/^static svn_error_t * thunk_close_edit(void *edit_baton,$/;"	f	file:
+thunk_close_file	./subversion/bindings/swig/swigutil_java.c	/^static svn_error_t * thunk_close_file(void *file_baton, $/;"	f	file:
+thunk_close_file	./subversion/bindings/swig/swigutil_pl.c	/^static svn_error_t * thunk_close_file(void *file_baton,$/;"	f	file:
+thunk_close_file	./subversion/bindings/swig/swigutil_py.c	/^static svn_error_t * thunk_close_file(void *file_baton,$/;"	f	file:
+thunk_delete_entry	./subversion/bindings/swig/swigutil_java.c	/^static svn_error_t * thunk_delete_entry(const char *path,$/;"	f	file:
+thunk_delete_entry	./subversion/bindings/swig/swigutil_pl.c	/^static svn_error_t * thunk_delete_entry(const char *path,$/;"	f	file:
+thunk_delete_entry	./subversion/bindings/swig/swigutil_py.c	/^static svn_error_t * thunk_delete_entry(const char *path,$/;"	f	file:
+thunk_get_wc_prop	./subversion/bindings/swig/swigutil_pl.c	/^svn_error_t *thunk_get_wc_prop (void *baton,$/;"	f
+thunk_open_directory	./subversion/bindings/swig/swigutil_java.c	/^static svn_error_t * thunk_open_directory(const char *path,$/;"	f	file:
+thunk_open_directory	./subversion/bindings/swig/swigutil_pl.c	/^static svn_error_t * thunk_open_directory(const char *path,$/;"	f	file:
+thunk_open_directory	./subversion/bindings/swig/swigutil_py.c	/^static svn_error_t * thunk_open_directory(const char *path,$/;"	f	file:
+thunk_open_file	./subversion/bindings/swig/swigutil_java.c	/^static svn_error_t * thunk_open_file(const char *path,$/;"	f	file:
+thunk_open_file	./subversion/bindings/swig/swigutil_pl.c	/^static svn_error_t * thunk_open_file(const char *path,$/;"	f	file:
+thunk_open_file	./subversion/bindings/swig/swigutil_py.c	/^static svn_error_t * thunk_open_file(const char *path,$/;"	f	file:
+thunk_open_root	./subversion/bindings/swig/swigutil_java.c	/^static svn_error_t * thunk_open_root(void *edit_baton,$/;"	f	file:
+thunk_open_root	./subversion/bindings/swig/swigutil_pl.c	/^static svn_error_t * thunk_open_root(void *edit_baton,$/;"	f	file:
+thunk_open_root	./subversion/bindings/swig/swigutil_py.c	/^static svn_error_t * thunk_open_root(void *edit_baton,$/;"	f	file:
+thunk_open_tmp_file	./subversion/bindings/swig/swigutil_pl.c	/^static svn_error_t * thunk_open_tmp_file(apr_file_t **fp,$/;"	f	file:
+thunk_set_target_revision	./subversion/bindings/swig/swigutil_java.c	/^static svn_error_t * thunk_set_target_revision(void *edit_baton,$/;"	f	file:
+thunk_set_target_revision	./subversion/bindings/swig/swigutil_pl.c	/^static svn_error_t * thunk_set_target_revision(void *edit_baton,$/;"	f	file:
+thunk_set_target_revision	./subversion/bindings/swig/swigutil_py.c	/^static svn_error_t * thunk_set_target_revision(void *edit_baton,$/;"	f	file:
+thunk_window_handler	./subversion/bindings/swig/swigutil_java.c	/^static svn_error_t * thunk_window_handler(svn_txdelta_window_t *window,$/;"	f	file:
+thunk_window_handler	./subversion/bindings/swig/swigutil_pl.c	/^static svn_error_t * thunk_window_handler(svn_txdelta_window_t *window,$/;"	f	file:
+thunk_window_handler	./subversion/bindings/swig/swigutil_py.c	/^static svn_error_t * thunk_window_handler(svn_txdelta_window_t *window,$/;"	f	file:
+time	./subversion/include/svn_types.h	/^  apr_time_t time;$/;"	m	struct:svn_dirent_t
+timestamp_format	./subversion/libsvn_subr/time.c	/^static const char * const timestamp_format =$/;"	v	file:
+timestamp_sleep	./subversion/libsvn_client/externals.c	/^  svn_boolean_t *timestamp_sleep;$/;"	m	struct:handle_external_item_change_baton	file:
+timestamp_sleep	./subversion/libsvn_client/externals.c	/^  svn_boolean_t *timestamp_sleep;$/;"	m	struct:handle_externals_desc_change_baton	file:
+tmp_file	./subversion/libsvn_client/export.c	/^  apr_file_t *tmp_file;$/;"	m	struct:file_baton	file:
+tmp_key	./subversion/libsvn_subr/config_impl.h	/^  svn_stringbuf_t *tmp_key;$/;"	m	struct:svn_config_t
+tmp_value	./subversion/libsvn_subr/config_impl.h	/^  svn_stringbuf_t *tmp_value;$/;"	m	struct:svn_config_t
+tmpfile	./subversion/libsvn_ra_dav/commit.c	/^  apr_file_t *tmpfile;$/;"	m	file:
+tmpfile	./subversion/libsvn_ra_dav/fetch.c	/^  apr_file_t *tmpfile;$/;"	m	file:
+tmpfile_left	./subversion/clients/cmdline/util.c	/^  const char *tmpfile_left; \/* the tmpfile left by an external edit. UTF-8! *\/$/;"	m	struct:log_msg_baton	file:
+tmppath	./subversion/libsvn_client/export.c	/^  const char *tmppath;$/;"	m	struct:file_baton	file:
+tmppath	./subversion/libsvn_client/export.c	/^  const char *tmppath;$/;"	m	struct:handler_baton	file:
+to_path	./subversion/libsvn_fs/tree.c	/^  const char *to_path;$/;"	m	struct:copy_args	file:
+to_root	./subversion/libsvn_fs/tree.c	/^  svn_fs_root_t *to_root;$/;"	m	struct:copy_args	file:
+token	./subversion/libsvn_diff/token.c	/^  void                 *token;$/;"	m	struct:svn_diff__node_t	file:
+token	./subversion/libsvn_ra_svn/editor.c	/^  const char *token;$/;"	m	file:
+token	./subversion/libsvn_ra_svn/editorp.c	/^  const char *token;$/;"	m	file:
+token_compare	./subversion/include/svn_diff.h	/^  svn_error_t *(*token_compare)(void *diff_baton,$/;"	m	struct:svn_diff_fns_t
+token_discard	./subversion/include/svn_diff.h	/^  void (*token_discard)(void *diff_baton,$/;"	m	struct:svn_diff_fns_t
+token_discard_all	./subversion/include/svn_diff.h	/^  void (*token_discard_all)(void *diff_baton);$/;"	m	struct:svn_diff_fns_t
+tokens	./subversion/libsvn_diff/diff_file.c	/^  svn_diff__file_token_t *tokens;$/;"	m	struct:svn_diff__file_baton_t	file:
+tokens	./subversion/libsvn_ra_svn/editor.c	/^  apr_hash_t *tokens;$/;"	m	file:
+tokens	./subversion/libsvn_ra_svn/editorp.c	/^  apr_hash_t *tokens;$/;"	m	file:
+trail	./subversion/libsvn_fs/reps-strings.c	/^  trail_t *trail;$/;"	m	struct:compose_handler_baton	file:
+trail	./subversion/libsvn_fs/reps-strings.c	/^  trail_t *trail;$/;"	m	struct:rep_read_baton	file:
+trail	./subversion/libsvn_fs/reps-strings.c	/^  trail_t *trail;$/;"	m	struct:rep_write_baton	file:
+trail	./subversion/libsvn_fs/reps-strings.c	/^  trail_t *trail;$/;"	m	struct:write_svndiff_strings_baton	file:
+trail_debug	./subversion/libsvn_fs/trail.h	/^  struct trail_debug_t *trail_debug;$/;"	m	struct:trail_t
+trail_debug_t	./subversion/libsvn_fs/trail.c	/^struct trail_debug_t$/;"	s	file:
+trail_t	./subversion/libsvn_fs/trail.h	/^struct trail_t$/;"	s
+trail_t	./subversion/libsvn_fs/trail.h	/^typedef struct trail_t trail_t;$/;"	t
+transaction_props	./subversion/tests/libsvn_fs/fs-test.c	/^transaction_props (const char **msg,$/;"	f	file:
+transaction_root	./subversion/libsvn_fs/tree.c	/^  transaction_root$/;"	e	enum:root_kind_t	file:
+transactions	./subversion/libsvn_fs/fs.h	/^  DB *transactions;$/;"	m	struct:svn_fs_t
+translate_keyword	./subversion/libsvn_subr/subst.c	/^translate_keyword (char *buf,$/;"	f	file:
+translate_keyword_subst	./subversion/libsvn_subr/subst.c	/^translate_keyword_subst (char *buf,$/;"	f	file:
+translate_newline	./subversion/libsvn_subr/subst.c	/^translate_newline (const char *eol_str,$/;"	f	file:
+translate_write	./subversion/libsvn_subr/subst.c	/^translate_write (svn_stream_t *stream,$/;"	f	file:
+traversal_info	./subversion/libsvn_wc/status.c	/^  svn_wc_traversal_info_t *traversal_info;$/;"	m	struct:edit_baton	file:
+traversal_info	./subversion/libsvn_wc/update_editor.c	/^  svn_wc_traversal_info_t *traversal_info;$/;"	m	struct:edit_baton	file:
+tree	./subversion/libsvn_delta/compose_delta.c	/^  range_index_node_t *tree;$/;"	m	struct:range_index_t	file:
+trim_string	./subversion/libsvn_client/add.c	/^trim_string (char **pstr)$/;"	f	file:
+trivial_auth_request	./subversion/svnserve/serve.c	/^static svn_error_t *trivial_auth_request(svn_ra_svn_conn_t *conn,$/;"	f	file:
+trivial_transaction	./subversion/tests/libsvn_fs/fs-test.c	/^trivial_transaction (const char **msg,$/;"	f	file:
+true_keys	./subversion/tests/libsvn_subr/config-test.c	/^static const char *true_keys[] = {"true1", "true2", "true3", "true4",$/;"	v	file:
+truncate_buffer_at_prefix	./subversion/clients/cmdline/util.c	/^truncate_buffer_at_prefix (apr_size_t *new_len,$/;"	f	file:
+try_explicit_length	./subversion/tests/libsvn_fs/skel-test.c	/^try_explicit_length (const char *data, apr_size_t len, apr_size_t check_len,$/;"	f	file:
+try_split_url	./subversion/tests/libsvn_ra_local/ra-local-test.c	/^try_split_url (const char *url)$/;"	f	file:
+tunnel	./subversion/svnserve/serve.c	/^  svn_boolean_t tunnel;    \/* Tunneled through login agent; allow EXTERNAL *\/$/;"	m	file:
+tview_len	./subversion/include/svn_delta.h	/^  apr_size_t tview_len;$/;"	m	struct:svn_txdelta_window_t
+tweak_status	./subversion/libsvn_client/status.c	/^tweak_status (void *baton,$/;"	f	file:
+tweak_statushash	./subversion/libsvn_wc/status.c	/^tweak_statushash (apr_hash_t *statushash,$/;"	f	file:
+two_way_diff	./subversion/tests/libsvn_diff/diff-diff3-test.c	/^two_way_diff (const char *filename1,$/;"	f	file:
+txdelta_baton_t	./subversion/libsvn_fs/tree.c	/^typedef struct txdelta_baton_t$/;"	s	file:
+txdelta_baton_t	./subversion/libsvn_fs/tree.c	/^} txdelta_baton_t;$/;"	t	file:
+txn	./subversion/libsvn_fs/tree.c	/^  const char *txn;$/;"	m	struct:svn_fs_root_t	file:
+txn	./subversion/libsvn_fs/tree.c	/^  svn_fs_txn_t *txn;$/;"	m	struct:commit_args	file:
+txn	./subversion/libsvn_fs/tree.c	/^  svn_fs_txn_t *txn;$/;"	m	struct:merge_args	file:
+txn	./subversion/libsvn_fs/tree.c	/^  svn_fs_txn_t *txn;$/;"	m	struct:txn_root_args	file:
+txn	./subversion/libsvn_repos/commit.c	/^  svn_fs_txn_t *txn;$/;"	m	struct:edit_baton	file:
+txn	./subversion/libsvn_repos/load.c	/^  svn_fs_txn_t *txn;$/;"	m	struct:revision_baton	file:
+txn	./subversion/libsvn_repos/reporter.c	/^  svn_fs_txn_t *txn;$/;"	m	struct:report_baton_t	file:
+txn	./subversion/mod_dav_svn/dav_svn.h	/^  svn_fs_txn_t *txn;$/;"	m
+txn	./subversion/svnlook/main.c	/^  const char *txn;$/;"	m	struct:svnlook_opt_state	file:
+txn	./subversion/svnlook/main.c	/^  svn_fs_txn_t *txn;$/;"	m	struct:svnlook_ctxt_t	file:
+txn	./subversion/tests/libsvn_fs/fs-test.c	/^  svn_fs__transaction_t **txn;$/;"	m	struct:get_txn_args	file:
+txn2	./subversion/libsvn_repos/reporter.c	/^  svn_fs_txn_t *txn2;$/;"	m	struct:report_baton_t	file:
+txn2_root	./subversion/libsvn_repos/reporter.c	/^  svn_fs_root_t *txn2_root;$/;"	m	struct:report_baton_t	file:
+txn_base_rev	./subversion/libsvn_repos/reporter.c	/^  svn_revnum_t txn_base_rev;$/;"	m	struct:report_baton_t	file:
+txn_body_abort_txn	./subversion/libsvn_fs/revs-txns.c	/^txn_body_abort_txn (void *baton, trail_t *trail)$/;"	f	file:
+txn_body_apply_text	./subversion/libsvn_fs/tree.c	/^txn_body_apply_text (void *baton, trail_t *trail)$/;"	f	file:
+txn_body_apply_textdelta	./subversion/libsvn_fs/tree.c	/^txn_body_apply_textdelta (void *baton, trail_t *trail)$/;"	f	file:
+txn_body_begin_txn	./subversion/libsvn_fs/revs-txns.c	/^txn_body_begin_txn (void *baton,$/;"	f	file:
+txn_body_change_node_prop	./subversion/libsvn_fs/tree.c	/^txn_body_change_node_prop (void *baton,$/;"	f	file:
+txn_body_change_rev_prop	./subversion/libsvn_fs/revs-txns.c	/^txn_body_change_rev_prop (void *baton, trail_t *trail)$/;"	f	file:
+txn_body_change_txn_prop	./subversion/libsvn_fs/revs-txns.c	/^txn_body_change_txn_prop (void *baton, trail_t *trail)$/;"	f	file:
+txn_body_changes_add	./subversion/tests/libsvn_fs/changes-test.c	/^txn_body_changes_add (void *baton, trail_t *trail)$/;"	f	file:
+txn_body_changes_delete	./subversion/tests/libsvn_fs/changes-test.c	/^txn_body_changes_delete (void *baton, trail_t *trail)$/;"	f	file:
+txn_body_changes_fetch	./subversion/tests/libsvn_fs/changes-test.c	/^txn_body_changes_fetch (void *baton, trail_t *trail)$/;"	f	file:
+txn_body_changes_fetch_raw	./subversion/tests/libsvn_fs/changes-test.c	/^txn_body_changes_fetch_raw (void *baton, trail_t *trail)$/;"	f	file:
+txn_body_check_id	./subversion/tests/libsvn_fs/fs-test.c	/^txn_body_check_id (void *baton, trail_t *trail)$/;"	f	file:
+txn_body_cleanup_txn	./subversion/libsvn_fs/revs-txns.c	/^txn_body_cleanup_txn (void *baton,$/;"	f	file:
+txn_body_cleanup_txn_changes	./subversion/libsvn_fs/revs-txns.c	/^txn_body_cleanup_txn_changes (void *baton, trail_t *trail)$/;"	f	file:
+txn_body_cleanup_txn_copy	./subversion/libsvn_fs/revs-txns.c	/^txn_body_cleanup_txn_copy (void *baton, trail_t *trail)$/;"	f	file:
+txn_body_commit	./subversion/libsvn_fs/tree.c	/^txn_body_commit (void *baton, trail_t *trail)$/;"	f	file:
+txn_body_contents_changed	./subversion/libsvn_fs/tree.c	/^txn_body_contents_changed (void *baton, trail_t *trail)$/;"	f	file:
+txn_body_copied_from	./subversion/libsvn_fs/tree.c	/^txn_body_copied_from (void *baton, trail_t *trail)$/;"	f	file:
+txn_body_copy	./subversion/libsvn_fs/tree.c	/^txn_body_copy (void *baton,$/;"	f	file:
+txn_body_dag_init_fs	./subversion/libsvn_fs/dag.c	/^txn_body_dag_init_fs (void *baton, trail_t *trail)$/;"	f	file:
+txn_body_delete	./subversion/libsvn_fs/tree.c	/^txn_body_delete (void *baton,$/;"	f	file:
+txn_body_delete_rep	./subversion/tests/libsvn_fs/strings-reps-test.c	/^txn_body_delete_rep (void *baton, trail_t *trail)$/;"	f	file:
+txn_body_delete_txn	./subversion/libsvn_fs/revs-txns.c	/^txn_body_delete_txn (void *baton, trail_t *trail)$/;"	f	file:
+txn_body_dir_entries	./subversion/libsvn_fs/tree.c	/^txn_body_dir_entries (void *baton,$/;"	f	file:
+txn_body_file_checksum	./subversion/libsvn_fs/tree.c	/^txn_body_file_checksum (void *baton,$/;"	f	file:
+txn_body_file_length	./subversion/libsvn_fs/tree.c	/^txn_body_file_length (void *baton,$/;"	f	file:
+txn_body_fulltext_finalize_edits	./subversion/libsvn_fs/tree.c	/^txn_body_fulltext_finalize_edits (void *baton, trail_t *trail)$/;"	f	file:
+txn_body_get_dirents	./subversion/libsvn_fs/revs-txns.c	/^txn_body_get_dirents (void *baton, trail_t *trail)$/;"	f	file:
+txn_body_get_file_contents	./subversion/libsvn_fs/tree.c	/^txn_body_get_file_contents (void *baton, trail_t *trail)$/;"	f	file:
+txn_body_get_root	./subversion/libsvn_fs/tree.c	/^txn_body_get_root (void *baton, trail_t *trail)$/;"	f	file:
+txn_body_get_txn	./subversion/tests/libsvn_fs/fs-test.c	/^txn_body_get_txn (void *baton, trail_t *trail)$/;"	f	file:
+txn_body_get_uuid	./subversion/libsvn_fs/uuid.c	/^txn_body_get_uuid (void *baton, trail_t *trail)$/;"	f	file:
+txn_body_history_prev	./subversion/libsvn_fs/tree.c	/^txn_body_history_prev (void *baton, trail_t *trail)$/;"	f	file:
+txn_body_list_transactions	./subversion/libsvn_fs/revs-txns.c	/^txn_body_list_transactions (void* baton,$/;"	f	file:
+txn_body_make_dir	./subversion/libsvn_fs/tree.c	/^txn_body_make_dir (void *baton,$/;"	f	file:
+txn_body_make_file	./subversion/libsvn_fs/tree.c	/^txn_body_make_file (void *baton,$/;"	f	file:
+txn_body_merge	./subversion/libsvn_fs/tree.c	/^txn_body_merge (void *baton, trail_t *trail)$/;"	f	file:
+txn_body_node_created_path	./subversion/libsvn_fs/tree.c	/^txn_body_node_created_path (void *baton, trail_t *trail)$/;"	f	file:
+txn_body_node_created_rev	./subversion/libsvn_fs/tree.c	/^txn_body_node_created_rev (void *baton, trail_t *trail)$/;"	f	file:
+txn_body_node_id	./subversion/libsvn_fs/tree.c	/^txn_body_node_id (void *baton, trail_t *trail)$/;"	f	file:
+txn_body_node_kind	./subversion/libsvn_fs/tree.c	/^txn_body_node_kind (void *baton, trail_t *trail)$/;"	f	file:
+txn_body_node_prop	./subversion/libsvn_fs/tree.c	/^txn_body_node_prop (void *baton,$/;"	f	file:
+txn_body_node_proplist	./subversion/libsvn_fs/tree.c	/^txn_body_node_proplist (void *baton, trail_t *trail)$/;"	f	file:
+txn_body_open_txn	./subversion/libsvn_fs/revs-txns.c	/^txn_body_open_txn (void *baton,$/;"	f	file:
+txn_body_paths_changed	./subversion/libsvn_fs/tree.c	/^txn_body_paths_changed (void *baton,$/;"	f	file:
+txn_body_pred_count	./subversion/libsvn_fs/tree.c	/^txn_body_pred_count (void *baton, trail_t *trail)$/;"	f	file:
+txn_body_pred_id	./subversion/libsvn_fs/tree.c	/^txn_body_pred_id (void *baton, trail_t *trail)$/;"	f	file:
+txn_body_props_changed	./subversion/libsvn_fs/tree.c	/^txn_body_props_changed (void *baton, trail_t *trail)$/;"	f	file:
+txn_body_read_rep	./subversion/libsvn_fs/reps-strings.c	/^txn_body_read_rep (void *baton, trail_t *trail)$/;"	f	file:
+txn_body_read_rep	./subversion/tests/libsvn_fs/strings-reps-test.c	/^txn_body_read_rep (void *baton, trail_t *trail)$/;"	f	file:
+txn_body_remove_node	./subversion/libsvn_fs/revs-txns.c	/^txn_body_remove_node (void *baton, trail_t *trail)$/;"	f	file:
+txn_body_rev_get_txn_id	./subversion/libsvn_fs/tree.c	/^txn_body_rev_get_txn_id (void *baton, trail_t *trail)$/;"	f	file:
+txn_body_revision_proplist	./subversion/libsvn_fs/revs-txns.c	/^txn_body_revision_proplist (void *baton, trail_t *trail)$/;"	f	file:
+txn_body_revision_root	./subversion/libsvn_fs/tree.c	/^txn_body_revision_root (void *baton,$/;"	f	file:
+txn_body_set_uuid	./subversion/libsvn_fs/uuid.c	/^txn_body_set_uuid (void *baton, trail_t *trail)$/;"	f	file:
+txn_body_string_append	./subversion/tests/libsvn_fs/strings-reps-test.c	/^txn_body_string_append (void *baton, trail_t *trail)$/;"	f	file:
+txn_body_string_append_fail	./subversion/tests/libsvn_fs/strings-reps-test.c	/^txn_body_string_append_fail (void *baton, trail_t *trail)$/;"	f	file:
+txn_body_string_clear	./subversion/tests/libsvn_fs/strings-reps-test.c	/^txn_body_string_clear (void *baton, trail_t *trail)$/;"	f	file:
+txn_body_string_copy	./subversion/tests/libsvn_fs/strings-reps-test.c	/^txn_body_string_copy (void *baton, trail_t *trail)$/;"	f	file:
+txn_body_string_delete	./subversion/tests/libsvn_fs/strings-reps-test.c	/^txn_body_string_delete (void *baton, trail_t *trail)$/;"	f	file:
+txn_body_string_size	./subversion/tests/libsvn_fs/strings-reps-test.c	/^txn_body_string_size (void *baton, trail_t *trail)$/;"	f	file:
+txn_body_txdelta_finalize_edits	./subversion/libsvn_fs/tree.c	/^txn_body_txdelta_finalize_edits (void *baton, trail_t *trail)$/;"	f	file:
+txn_body_txn_deltify	./subversion/libsvn_fs/tree.c	/^txn_body_txn_deltify (void *baton, trail_t *trail)$/;"	f	file:
+txn_body_txn_proplist	./subversion/libsvn_fs/revs-txns.c	/^txn_body_txn_proplist (void *baton, trail_t *trail)$/;"	f	file:
+txn_body_txn_root	./subversion/libsvn_fs/tree.c	/^txn_body_txn_root (void *baton,$/;"	f	file:
+txn_body_verify_string	./subversion/tests/libsvn_fs/strings-reps-test.c	/^txn_body_verify_string (void *baton, trail_t *trail)$/;"	f	file:
+txn_body_write_close_rep	./subversion/libsvn_fs/reps-strings.c	/^txn_body_write_close_rep (void *baton, trail_t *trail)$/;"	f	file:
+txn_body_write_new_rep	./subversion/tests/libsvn_fs/strings-reps-test.c	/^txn_body_write_new_rep (void *baton, trail_t *trail)$/;"	f	file:
+txn_body_write_rep	./subversion/libsvn_fs/reps-strings.c	/^txn_body_write_rep (void *baton, trail_t *trail)$/;"	f	file:
+txn_body_write_rep	./subversion/tests/libsvn_fs/strings-reps-test.c	/^txn_body_write_rep (void *baton, trail_t *trail)$/;"	f	file:
+txn_body_youngest_rev	./subversion/libsvn_fs/revs-txns.c	/^txn_body_youngest_rev (void *baton,$/;"	f	file:
+txn_deltify_args	./subversion/libsvn_fs/tree.c	/^struct txn_deltify_args$/;"	s	file:
+txn_id	./subversion/libsvn_fs/fs.h	/^  const char *txn_id;$/;"	m
+txn_id	./subversion/libsvn_fs/id.h	/^  const char *txn_id;$/;"	m	struct:svn_fs_id_t
+txn_id	./subversion/libsvn_fs/reps-strings.c	/^  const char *txn_id;$/;"	m	struct:rep_write_baton	file:
+txn_id	./subversion/libsvn_fs/revs-txns.c	/^  const char *txn_id;$/;"	m	struct:get_dirents_args	file:
+txn_id	./subversion/libsvn_fs/revs-txns.c	/^  const char *txn_id;$/;"	m	struct:remove_node_args	file:
+txn_id	./subversion/libsvn_fs/tree.c	/^  const char **txn_id;$/;"	m	struct:rev_get_txn_id_args	file:
+txn_id	./subversion/libsvn_fs/tree.c	/^  const char *txn_id; \/* transaction just committed *\/$/;"	m	struct:deltify_committed_args	file:
+txn_name	./subversion/libsvn_repos/commit.c	/^  const char *txn_name;$/;"	m	struct:edit_baton	file:
+txn_name	./subversion/mod_dav_svn/dav_svn.h	/^  const char *txn_name;$/;"	m
+txn_name	./subversion/svnlook/main.c	/^  const char *txn_name \/* UTF-8! *\/;$/;"	m	struct:svnlook_ctxt_t	file:
+txn_name	./subversion/tests/libsvn_fs/fs-test.c	/^  const char *txn_name;$/;"	m	struct:get_txn_args	file:
+txn_p	./subversion/libsvn_fs/revs-txns.c	/^  svn_fs__transaction_t **txn_p;$/;"	m	struct:cleanup_txn_args	file:
+txn_p	./subversion/libsvn_fs/revs-txns.c	/^  svn_fs_txn_t **txn_p;$/;"	m	struct:begin_txn_args	file:
+txn_p	./subversion/libsvn_fs/revs-txns.c	/^  svn_fs_txn_t **txn_p;$/;"	m	struct:open_txn_args	file:
+txn_pred_count_args	./subversion/libsvn_fs/tree.c	/^struct txn_pred_count_args$/;"	s	file:
+txn_pred_id_args	./subversion/libsvn_fs/tree.c	/^struct txn_pred_id_args$/;"	s	file:
+txn_proplist_args	./subversion/libsvn_fs/revs-txns.c	/^struct txn_proplist_args {$/;"	s	file:
+txn_root	./subversion/libsvn_repos/commit.c	/^  svn_fs_root_t *txn_root;$/;"	m	struct:edit_baton	file:
+txn_root	./subversion/libsvn_repos/load.c	/^  svn_fs_root_t *txn_root;$/;"	m	struct:revision_baton	file:
+txn_root	./subversion/libsvn_repos/reporter.c	/^  svn_fs_root_t *txn_root;$/;"	m	struct:report_baton_t	file:
+txn_root	./subversion/tests/libsvn_repos/dir-delta-editor.c	/^  svn_fs_root_t *txn_root;$/;"	m	struct:edit_baton	file:
+txn_root_args	./subversion/libsvn_fs/tree.c	/^struct txn_root_args$/;"	s	file:
+type	./subversion/libsvn_diff/diff.h	/^  svn_diff__type_e type;$/;"	m	struct:svn_diff_t
+type	./subversion/libsvn_wc/lock.c	/^  } type;$/;"	m	struct:svn_wc_adm_access_t	file:
+type	./subversion/mod_dav_svn/repos.c	/^  dav_resource_type type;$/;"	m	struct:res_type_handler	file:
+type	./subversion/tests/libsvn_fs/skel-test.c	/^  int type;$/;"	m	struct:invalid_atoms	file:
+type_digit	./subversion/libsvn_fs/util/skel.c	/^  type_digit = 2,$/;"	e	enum:char_type	file:
+type_digit	./subversion/tests/libsvn_fs/skel-test.c	/^  type_digit = 2,$/;"	e	enum:char_type	file:
+type_name	./subversion/libsvn_fs/util/skel.c	/^  type_name = 4$/;"	e	enum:char_type	file:
+type_name	./subversion/tests/libsvn_fs/skel-test.c	/^  type_name = 4$/;"	e	enum:char_type	file:
+type_nothing	./subversion/libsvn_fs/util/skel.c	/^  type_nothing = 0,$/;"	e	enum:char_type	file:
+type_nothing	./subversion/tests/libsvn_fs/skel-test.c	/^  type_nothing = 0,$/;"	e	enum:char_type	file:
+type_paren	./subversion/libsvn_fs/util/skel.c	/^  type_paren = 3,$/;"	e	enum:char_type	file:
+type_paren	./subversion/tests/libsvn_fs/skel-test.c	/^  type_paren = 3,$/;"	e	enum:char_type	file:
+type_space	./subversion/libsvn_fs/util/skel.c	/^  type_space = 1,$/;"	e	enum:char_type	file:
+type_space	./subversion/tests/libsvn_fs/skel-test.c	/^  type_space = 1,$/;"	e	enum:char_type	file:
+u	./subversion/include/svn_ra_svn.h	/^  } u;$/;"	m	struct:svn_ra_svn_item_t
+uc	./subversion/mod_dav_svn/update.c	/^  update_ctx_t *uc;$/;"	m	file:
+uc	./subversion/mod_dav_svn/update.c	/^  update_ctx_t *uc;$/;"	m	struct:window_handler_baton	file:
+uncache_node_revision	./subversion/libsvn_fs/dag.c	/^uncache_node_revision (void *baton)$/;"	f	file:
+undelete_change	./subversion/libsvn_fs/tree.c	/^undelete_change (svn_fs_t *fs,$/;"	f	file:
+under_string	./subversion/libsvn_client/diff.c	/^static const char under_string[] =$/;"	v	file:
+under_string	./subversion/svnlook/main.c	/^static const char under_string[] =$/;"	v	file:
+undo	./subversion/libsvn_fs/trail.c	/^struct undo {$/;"	s	file:
+undo	./subversion/libsvn_fs/trail.h	/^  struct undo *undo;$/;"	m	struct:trail_t
+undo_on_failure	./subversion/libsvn_fs/trail.c	/^    undo_on_failure = 1,$/;"	e	enum:undo::<anonymous>	file:
+undo_on_success	./subversion/libsvn_fs/trail.c	/^    undo_on_success = 2$/;"	e	enum:undo::<anonymous>	file:
+unexpand_author	./subversion/tests/libsvn_wc/translate-test.c	/^unexpand_author (const char **msg,$/;"	f	file:
+unexpand_author_date	./subversion/tests/libsvn_wc/translate-test.c	/^unexpand_author_date (const char **msg,$/;"	f	file:
+unexpand_author_date_rev_url	./subversion/tests/libsvn_wc/translate-test.c	/^unexpand_author_date_rev_url (const char **msg,$/;"	f	file:
+unexpand_author_rev	./subversion/tests/libsvn_wc/translate-test.c	/^unexpand_author_rev (const char **msg,$/;"	f	file:
+unexpand_date	./subversion/tests/libsvn_wc/translate-test.c	/^unexpand_date (const char **msg,$/;"	f	file:
+unexpand_rev	./subversion/tests/libsvn_wc/translate-test.c	/^unexpand_rev (const char **msg,$/;"	f	file:
+unexpand_rev_url	./subversion/tests/libsvn_wc/translate-test.c	/^unexpand_rev_url (const char **msg,$/;"	f	file:
+unparse	./subversion/libsvn_fs/util/skel.c	/^unparse (skel_t *skel, svn_stringbuf_t *str, apr_pool_t *pool)$/;"	f	file:
+unparse_implicit_length	./subversion/tests/libsvn_fs/skel-test.c	/^unparse_implicit_length (const char **msg, $/;"	f	file:
+unparse_list	./subversion/tests/libsvn_fs/skel-test.c	/^unparse_list (const char **msg, $/;"	f	file:
+unspecified_root	./subversion/libsvn_fs/tree.c	/^  unspecified_root = 0,$/;"	e	enum:root_kind_t	file:
+unsupported_diff_error	./subversion/libsvn_client/diff.c	/^unsupported_diff_error (svn_error_t *child_err)$/;"	f	file:
+unwrap	./subversion/libsvn_ra_svn/ra_svn.h	/^  svn_error_t *(*unwrap)(svn_ra_svn_conn_t *conn,$/;"	m	struct:svn_ra_conn_filter_st
+upd_absent_directory	./subversion/mod_dav_svn/update.c	/^static svn_error_t * upd_absent_directory(const char *path,$/;"	f	file:
+upd_absent_file	./subversion/mod_dav_svn/update.c	/^static svn_error_t * upd_absent_file(const char *path,$/;"	f	file:
+upd_add_directory	./subversion/mod_dav_svn/update.c	/^static svn_error_t * upd_add_directory(const char *path,$/;"	f	file:
+upd_add_file	./subversion/mod_dav_svn/update.c	/^static svn_error_t * upd_add_file(const char *path,$/;"	f	file:
+upd_apply_textdelta	./subversion/mod_dav_svn/update.c	/^static svn_error_t * upd_apply_textdelta(void *file_baton, $/;"	f	file:
+upd_change_xxx_prop	./subversion/mod_dav_svn/update.c	/^static svn_error_t * upd_change_xxx_prop(void *baton,$/;"	f	file:
+upd_close_directory	./subversion/mod_dav_svn/update.c	/^static svn_error_t * upd_close_directory(void *dir_baton,$/;"	f	file:
+upd_close_edit	./subversion/mod_dav_svn/update.c	/^static svn_error_t * upd_close_edit(void *edit_baton,$/;"	f	file:
+upd_close_file	./subversion/mod_dav_svn/update.c	/^static svn_error_t * upd_close_file(void *file_baton,$/;"	f	file:
+upd_delete_entry	./subversion/mod_dav_svn/update.c	/^static svn_error_t * upd_delete_entry(const char *path,$/;"	f	file:
+upd_open_directory	./subversion/mod_dav_svn/update.c	/^static svn_error_t * upd_open_directory(const char *path,$/;"	f	file:
+upd_open_file	./subversion/mod_dav_svn/update.c	/^static svn_error_t * upd_open_file(const char *path,$/;"	f	file:
+upd_open_root	./subversion/mod_dav_svn/update.c	/^static svn_error_t * upd_open_root(void *edit_baton,$/;"	f	file:
+upd_set_target_revision	./subversion/mod_dav_svn/update.c	/^static svn_error_t * upd_set_target_revision(void *edit_baton,$/;"	f	file:
+update	./subversion/clients/cmdline/cl.h	/^  svn_boolean_t update;          \/* contact the server for the full story *\/$/;"	m	struct:svn_cl__opt_state_t
+update	./subversion/svnserve/serve.c	/^static svn_error_t *update(svn_ra_svn_conn_t *conn, apr_pool_t *pool,$/;"	f	file:
+update_ancestry	./subversion/libsvn_fs/tree.c	/^update_ancestry (svn_fs_t *fs,$/;"	f	file:
+update_ctx_t	./subversion/mod_dav_svn/update.c	/^} update_ctx_t;$/;"	t	file:
+update_edit_baton	./subversion/libsvn_repos/reporter.c	/^  void *update_edit_baton; $/;"	m	struct:report_baton_t	file:
+update_editor	./subversion/libsvn_repos/reporter.c	/^  const svn_delta_editor_t *update_editor;$/;"	m	struct:report_baton_t	file:
+update_unchanged	./subversion/libsvn_client/externals.c	/^  svn_boolean_t update_unchanged;$/;"	m	struct:handle_external_item_change_baton	file:
+update_unchanged	./subversion/libsvn_client/externals.c	/^  svn_boolean_t update_unchanged;$/;"	m	struct:handle_externals_desc_change_baton	file:
+uri	./subversion/mod_dav_svn/repos.c	/^  svn_stringbuf_t *uri;            \/* the uri within res *\/$/;"	m	file:
+uri_char_validity	./subversion/libsvn_subr/path.c	/^static const int uri_char_validity[256] = {$/;"	v	file:
+uri_path	./subversion/mod_dav_svn/dav_svn.h	/^  svn_stringbuf_t *uri_path;$/;"	m	struct:dav_resource_private
+url	./subversion/include/svn_client.h	/^  const char *url;$/;"	m	struct:svn_client_commit_item_t
+url	./subversion/include/svn_subst.h	/^  const svn_string_t *url;$/;"	m	struct:svn_subst_keywords_t
+url	./subversion/include/svn_wc.h	/^  const char *url;$/;"	m	struct:svn_wc_entry_t
+url	./subversion/include/svn_wc.h	/^  const char *url;$/;"	m	struct:svn_wc_external_item_t
+url	./subversion/libsvn_client/diff.c	/^  const char *url;                    \/* The second URL in the merge *\/$/;"	m	struct:merge_cmd_baton	file:
+url	./subversion/libsvn_client/export.c	/^  const char *url;$/;"	m	struct:file_baton	file:
+url	./subversion/libsvn_ra_dav/commit.c	/^  const char *url;$/;"	m	file:
+url	./subversion/libsvn_ra_dav/ra_dav.h	/^  const char *url;                      \/* original, unparsed session url *\/$/;"	m
+url	./subversion/libsvn_ra_dav/ra_dav.h	/^  const char *url;$/;"	m
+url_uuids	./subversion/libsvn_client/relocate.c	/^  apr_hash_t *url_uuids;$/;"	m	struct:validator_baton_t	file:
+usage	./subversion/svnserve/main.c	/^static void usage(const char *progname)$/;"	f	file:
+usage	./subversion/svnversion/main.c	/^usage(const apr_getopt_option_t *options)$/;"	f	file:
+use_commit_times	./subversion/libsvn_wc/update_editor.c	/^  svn_boolean_t use_commit_times;$/;"	m	struct:edit_baton	file:
+use_history	./subversion/libsvn_repos/load.c	/^  svn_boolean_t use_history;$/;"	m	struct:parse_baton	file:
+use_implicit	./subversion/libsvn_fs/util/skel.c	/^use_implicit (skel_t *skel)$/;"	f	file:
+use_second	./subversion/libsvn_delta/delta.h	/^  svn_boolean_t use_second;     \/* TRUE if window_B is the composite. *\/$/;"	m	struct:svn_txdelta__compose_ctx_t
+use_text_base	./subversion/libsvn_wc/diff.c	/^  svn_boolean_t use_text_base;$/;"	m	struct:edit_baton	file:
+usec	./subversion/tests/libsvn_subr/time-test.c	/^  apr_int32_t usec;$/;"	m	struct:date_test	file:
+user	./subversion/libsvn_ra_dav/commit.c	/^  const char *user;$/;"	m	file:
+user	./subversion/libsvn_ra_svn/client.c	/^  const char *user;$/;"	m	file:
+user	./subversion/libsvn_repos/commit.c	/^  const char *user;$/;"	m	struct:edit_baton	file:
+user	./subversion/mod_authz_svn/mod_authz_svn.c	/^    const char *user;$/;"	m	struct:parse_authz_baton	file:
+user	./subversion/svnserve/serve.c	/^  const char *user;$/;"	m	file:
+username	./subversion/include/svn_auth.h	/^  const char *username;$/;"	m	struct:svn_auth_cred_simple_t
+username	./subversion/include/svn_auth.h	/^  const char *username;$/;"	m	struct:svn_auth_cred_username_t
+username	./subversion/libsvn_ra_dav/session.c	/^  const char *username;  \/* Cannot be NULL, but "" is okay. *\/$/;"	m	struct:proxy_auth_baton	file:
+username	./subversion/libsvn_ra_local/ra_local.h	/^  const char *username;$/;"	m	struct:svn_ra_local__session_baton_t
+username	./subversion/libsvn_repos/reporter.c	/^  const char *username;$/;"	m	struct:report_baton_t	file:
+username	./subversion/mod_dav_svn/dav_svn.h	/^  const char *username;$/;"	m
+username_first_creds	./subversion/libsvn_client/username_providers.c	/^username_first_creds (void **credentials,$/;"	f	file:
+username_prompt_first_creds	./subversion/libsvn_client/username_providers.c	/^username_prompt_first_creds (void **credentials_p,$/;"	f	file:
+username_prompt_iter_baton_t	./subversion/libsvn_client/username_providers.c	/^} username_prompt_iter_baton_t;$/;"	t	file:
+username_prompt_next_creds	./subversion/libsvn_client/username_providers.c	/^username_prompt_next_creds (void **credentials_p,$/;"	f	file:
+username_prompt_provider	./subversion/libsvn_client/username_providers.c	/^static const svn_auth_provider_t username_prompt_provider = {$/;"	v	file:
+username_prompt_provider_baton_t	./subversion/libsvn_client/username_providers.c	/^} username_prompt_provider_baton_t;$/;"	t	file:
+username_provider	./subversion/libsvn_client/username_providers.c	/^static const svn_auth_provider_t username_provider = {$/;"	v	file:
+username_save_creds	./subversion/libsvn_client/username_providers.c	/^username_save_creds (svn_boolean_t *saved,$/;"	f	file:
+utf8_to_ucs2	./subversion/libsvn_subr/config_win.c	/^utf8_to_ucs2 (WCHAR **ucs2, const char *utf8, apr_pool_t *pool)$/;"	f	file:
+utf_validate	./subversion/tests/libsvn_subr/utf-test.c	/^utf_validate (const char **msg,$/;"	f	file:
+utf_validate2	./subversion/tests/libsvn_subr/utf-test.c	/^utf_validate2 (const char **msg,$/;"	f	file:
+uuid	./subversion/include/svn_wc.h	/^  const char *uuid;$/;"	m	struct:svn_wc_entry_t
+uuid	./subversion/libsvn_fs/fs.h	/^  const char *uuid;$/;"	m	struct:svn_fs_t
+uuid	./subversion/libsvn_fs/uuid.c	/^  const char **uuid;$/;"	m	struct:get_uuid_args	file:
+uuid	./subversion/libsvn_fs/uuid.c	/^  const char *uuid;$/;"	m	struct:set_uuid_args	file:
+uuid	./subversion/libsvn_ra_dav/ra_dav.h	/^  const char *uuid;                     \/* repository UUID *\/$/;"	m
+uuid	./subversion/libsvn_ra_local/ra_local.h	/^  const char *uuid;$/;"	m	struct:svn_ra_local__session_baton_t
+uuid	./subversion/libsvn_ra_svn/ra_svn.h	/^  const char *uuid;$/;"	m	struct:svn_ra_svn_conn_st
+uuid_action	./subversion/libsvn_repos/load.c	/^  enum svn_repos_load_uuid uuid_action;$/;"	m	struct:parse_baton	file:
+uuid_action	./subversion/svnadmin/main.c	/^  enum svn_repos_load_uuid uuid_action;             \/* --ignore-uuid,$/;"	m	struct:svnadmin_opt_state	file:
+uuid_record	./subversion/include/svn_repos.h	/^  svn_error_t *(*uuid_record) (const char *uuid,$/;"	m	struct:svn_repos_parse_fns_t
+uuid_record	./subversion/libsvn_repos/load.c	/^uuid_record (const char *uuid,$/;"	f	file:
+uuid_record	./subversion/svndumpfilter/main.c	/^uuid_record (const char *uuid, void *parse_baton, apr_pool_t *pool)$/;"	f	file:
+uuids	./subversion/libsvn_fs/fs.h	/^  DB *uuids;$/;"	m	struct:svn_fs_t
+v_extend_with_adm_name	./subversion/libsvn_wc/adm_files.c	/^v_extend_with_adm_name (const char *path,$/;"	f	file:
+valid	./subversion/libsvn_subr/date.c	/^  const char *valid;       \/* String of valid chars for this rule *\/$/;"	m	file:
+valid_days_by_month	./subversion/libsvn_subr/date.c	/^valid_days_by_month[] = {$/;"	v	file:
+valid_from	./subversion/include/svn_auth.h	/^  const char *valid_from;$/;"	m	struct:svn_auth_ssl_server_cert_info_t
+valid_options	./subversion/include/svn_opt.h	/^  int valid_options[SVN_OPT_MAX_OPTIONS];$/;"	m	struct:svn_opt_subcommand_desc_t
+valid_targets	./subversion/libsvn_ra_dav/commit.c	/^  apr_hash_t *valid_targets;$/;"	m	file:
+valid_targets	./subversion/libsvn_ra_dav/merge.c	/^  apr_hash_t *valid_targets;$/;"	m	file:
+valid_until	./subversion/include/svn_auth.h	/^  const char *valid_until;$/;"	m	struct:svn_auth_ssl_server_cert_info_t
+validate_cb	./subversion/libsvn_ra_dav/util.c	/^  svn_ra_dav__xml_validate_cb *validate_cb;  \/* old-style validate callback *\/$/;"	m	file:
+validate_element	./subversion/libsvn_ra_dav/fetch.c	/^static int validate_element(void *userdata,$/;"	f	file:
+validate_element	./subversion/libsvn_ra_dav/merge.c	/^static int validate_element(void *userdata, svn_ra_dav__xml_elmid parent,$/;"	f	file:
+validate_element	./subversion/libsvn_ra_dav/options.c	/^static int validate_element(void *userdata, svn_ra_dav__xml_elmid parent,$/;"	f	file:
+validate_element	./subversion/libsvn_ra_dav/props.c	/^static int validate_element(void *userdata, $/;"	f	file:
+validate_eol_prop_against_file	./subversion/libsvn_wc/props.c	/^validate_eol_prop_against_file (const char *path, $/;"	f	file:
+validate_error_elements	./subversion/libsvn_ra_dav/util.c	/^static int validate_error_elements(void *userdata,$/;"	f	file:
+validate_prop	./subversion/libsvn_repos/fs-wrap.c	/^validate_prop (const char *name,$/;"	f	file:
+validate_prop_against_node_kind	./subversion/libsvn_wc/props.c	/^validate_prop_against_node_kind (const char *name,$/;"	f	file:
+validate_revisions	./subversion/tests/libsvn_fs/fs-test.c	/^validate_revisions (svn_fs_t *fs,$/;"	f	file:
+validate_tree_entry	./subversion/tests/fs-helpers.c	/^validate_tree_entry (svn_fs_root_t *root,$/;"	f	file:
+validator_baton_t	./subversion/libsvn_client/relocate.c	/^struct validator_baton_t$/;"	s	file:
+validator_func	./subversion/libsvn_client/relocate.c	/^validator_func (void *baton, $/;"	f	file:
+value	./subversion/include/svn_opt.h	/^  } value;$/;"	m	struct:svn_opt_revision_t
+value	./subversion/include/svn_props.h	/^  const svn_string_t *value;$/;"	m	struct:svn_prop_t
+value	./subversion/include/svn_sorts.h	/^  void *value;$/;"	m	struct:svn_sort__item_t
+value	./subversion/libsvn_fs/revs-txns.c	/^  const svn_string_t *value;$/;"	m	struct:change_rev_prop_args	file:
+value	./subversion/libsvn_fs/revs-txns.c	/^  const svn_string_t *value;$/;"	m	struct:change_txn_prop_args	file:
+value	./subversion/libsvn_fs/tree.c	/^  const svn_string_t *value;$/;"	m	struct:change_node_prop_args	file:
+value	./subversion/libsvn_subr/config.c	/^  const char *value;$/;"	m	struct:cfg_option_t	file:
+value	./subversion/libsvn_subr/config_file.c	/^  svn_stringbuf_t *value;$/;"	m	struct:parse_context_t	file:
+value	./subversion/mod_dav_svn/deadprops.c	/^  svn_string_t value;$/;"	m	struct:dav_deadprop_rollback	file:
+value_p	./subversion/libsvn_fs/tree.c	/^  svn_string_t **value_p;$/;"	m	struct:node_prop_args	file:
+vdelta	./subversion/libsvn_delta/vdelta.c	/^vdelta (svn_txdelta__ops_baton_t *build_baton,$/;"	f	file:
+verbose	./subversion/clients/cmdline/cl.h	/^  svn_boolean_t verbose;         \/* be verbose *\/$/;"	m	struct:svn_cl__opt_state_t
+verbose	./subversion/svnlook/main.c	/^  svn_boolean_t verbose;          \/* --verbose *\/$/;"	m	struct:svnlook_opt_state	file:
+verbose	./subversion/tests/svn_test_editor.c	/^  svn_boolean_t verbose;$/;"	m	struct:edit_baton	file:
+verbose_mode	./subversion/tests/svn_tests_main.c	/^static int verbose_mode = 0;$/;"	v	file:
+verify_checksum	./subversion/tests/libsvn_fs/fs-test.c	/^verify_checksum (const char **msg,$/;"	f	file:
+verify_entry	./subversion/tests/libsvn_fs/fs-test.c	/^verify_entry (apr_hash_t *entries, const char *key)$/;"	f	file:
+verify_expected_record	./subversion/tests/libsvn_fs/strings-reps-test.c	/^verify_expected_record (svn_fs_t *fs, $/;"	f	file:
+verify_path	./subversion/svnlook/main.c	/^verify_path (svn_node_kind_t *kind,$/;"	f	file:
+verify_path_revs	./subversion/tests/libsvn_fs/fs-test.c	/^verify_path_revs (svn_fs_root_t *root,$/;"	f	file:
+verify_txn_list	./subversion/tests/libsvn_fs/fs-test.c	/^verify_txn_list (const char **msg,$/;"	f	file:
+version	./subversion/clients/cmdline/cl.h	/^  svn_boolean_t version;         \/* print version information *\/$/;"	m	struct:svn_cl__opt_state_t
+version	./subversion/libsvn_fs/fs.h	/^  apr_byte_t version;$/;"	m
+version	./subversion/libsvn_fs/reps-strings.c	/^  apr_byte_t version;$/;"	m	struct:write_svndiff_strings_baton	file:
+version	./subversion/svnadmin/main.c	/^  svn_boolean_t version;                            \/* --version *\/$/;"	m	struct:svnadmin_opt_state	file:
+version	./subversion/svnlook/main.c	/^  svn_boolean_t version;          \/* --version *\/$/;"	m	struct:svnlook_opt_state	file:
+version_name	./subversion/mod_dav_svn/dav_svn.h	/^  svn_revnum_t version_name;$/;"	m	struct:dav_resource_private
+vparse_tuple	./subversion/libsvn_ra_svn/marshal.c	/^static svn_error_t *vparse_tuple(apr_array_header_t *list, apr_pool_t *pool,$/;"	f	file:
+vsn_name	./subversion/libsvn_ra_dav/merge.c	/^  svn_stringbuf_t *vsn_name;       \/* DAV:version-name for this resource *\/$/;"	m	file:
+vsn_url	./subversion/libsvn_ra_dav/commit.c	/^  const char *vsn_url;$/;"	m	file:
+vsn_url	./subversion/libsvn_ra_dav/fetch.c	/^  const char *vsn_url;$/;"	m	file:
+vsn_url	./subversion/libsvn_ra_dav/merge.c	/^  svn_stringbuf_t *vsn_url;        \/* DAV:checked-in for this resource *\/$/;"	m	file:
+vtable	./subversion/include/svn_auth.h	/^  const svn_auth_provider_t *vtable;$/;"	m	struct:svn_auth_provider_object_t
+vwrite_tuple	./subversion/libsvn_ra_svn/marshal.c	/^static svn_error_t *vwrite_tuple(svn_ra_svn_conn_t *conn, apr_pool_t *pool,$/;"	f	file:
+wait_for_input	./subversion/clients/cmdline/prompt.c	/^static apr_status_t wait_for_input (apr_file_t *f,$/;"	f	file:
+walk_range_index	./subversion/tests/libsvn_delta/range-index-test.h	/^walk_range_index (range_index_node_t *node, const char **msg)$/;"	f
+walker_helper	./subversion/libsvn_wc/entries.c	/^walker_helper (const char *dirpath,$/;"	f	file:
+warning	./subversion/libsvn_fs/fs.h	/^  svn_fs_warning_callback_t warning;$/;"	m	struct:svn_fs_t
+warning_baton	./subversion/libsvn_fs/fs.h	/^  void *warning_baton;$/;"	m	struct:svn_fs_t
+warning_func	./subversion/svnadmin/main.c	/^warning_func (void *baton, $/;"	f	file:
+warning_func	./subversion/svnlook/main.c	/^warning_func (void *baton, $/;"	f	file:
+was_copied	./subversion/libsvn_repos/commit.c	/^  svn_boolean_t was_copied; \/* was this directory added with history? *\/$/;"	m	struct:dir_baton	file:
+wb	./subversion/libsvn_fs/reps-strings.c	/^  struct rep_write_baton *wb;   \/* Destination.       *\/$/;"	m	struct:write_rep_args	file:
+wc_format	./subversion/libsvn_wc/lock.c	/^  int wc_format;$/;"	m	struct:svn_wc_adm_access_t	file:
+wc_path	./subversion/libsvn_wc/diff.c	/^  const char *wc_path;$/;"	m	struct:file_baton	file:
+wc_path	./subversion/svnversion/main.c	/^  const char *wc_path;    \/* path whose URL we're looking for. *\/$/;"	m	struct:status_baton	file:
+wc_to_repos_copy	./subversion/libsvn_client/copy.c	/^wc_to_repos_copy (svn_client_commit_info_t **commit_info,$/;"	f	file:
+wc_to_wc_copy	./subversion/libsvn_client/copy.c	/^wc_to_wc_copy (const char *src_path,$/;"	f	file:
+wc_url	./subversion/svnversion/main.c	/^  const char *wc_url;     \/* URL for the path whose URL we're looking for. *\/$/;"	m	struct:status_baton	file:
+wcpath	./subversion/libsvn_client/repos_diff.c	/^  const char *wcpath;$/;"	m	struct:dir_baton	file:
+wcpath	./subversion/libsvn_client/repos_diff.c	/^  const char *wcpath;$/;"	m	struct:file_baton	file:
+wcprop_changes	./subversion/include/svn_client.h	/^  apr_array_header_t *wcprop_changes;$/;"	m	struct:svn_client_commit_item_t
+wcprop_list	./subversion/libsvn_wc/props.c	/^wcprop_list (apr_hash_t **props,$/;"	f	file:
+whandler	./subversion/libsvn_ra_dav/fetch.c	/^  svn_txdelta_window_handler_t whandler;$/;"	m	file:
+whandler_baton	./subversion/libsvn_ra_dav/fetch.c	/^  void *whandler_baton;$/;"	m	file:
+when	./subversion/libsvn_fs/trail.c	/^  } when;$/;"	m	struct:undo	file:
+window	./subversion/libsvn_fs/reps-strings.c	/^  svn_txdelta_window_t *window;$/;"	m	struct:compose_handler_baton	file:
+window_consumer	./subversion/libsvn_fs/tree.c	/^window_consumer (svn_txdelta_window_t *window, void *baton)$/;"	f	file:
+window_handler	./subversion/libsvn_client/export.c	/^window_handler (svn_txdelta_window_t *window, void *baton)$/;"	f	file:
+window_handler	./subversion/libsvn_client/repos_diff.c	/^window_handler (svn_txdelta_window_t *window,$/;"	f	file:
+window_handler	./subversion/libsvn_delta/svndiff.c	/^window_handler (svn_txdelta_window_t *window, void *baton)$/;"	f	file:
+window_handler	./subversion/libsvn_wc/diff.c	/^window_handler (svn_txdelta_window_t *window,$/;"	f	file:
+window_handler	./subversion/libsvn_wc/update_editor.c	/^window_handler (svn_txdelta_window_t *window, void *baton)$/;"	f	file:
+window_handler	./subversion/mod_dav_svn/update.c	/^static svn_error_t * window_handler(svn_txdelta_window_t *window, void *baton)$/;"	f	file:
+window_handler_baton	./subversion/mod_dav_svn/update.c	/^struct window_handler_baton$/;"	s	file:
+window_pool	./subversion/libsvn_fs/reps-strings.c	/^  apr_pool_t *window_pool;$/;"	m	struct:compose_handler_baton	file:
+window_write_t	./subversion/libsvn_fs/reps-strings.c	/^typedef struct window_write_t$/;"	s	file:
+window_write_t	./subversion/libsvn_fs/reps-strings.c	/^} window_write_t;$/;"	t	file:
+word	./subversion/include/svn_ra_svn.h	/^    const char *word;$/;"	m	union:svn_ra_svn_item_t::<anonymous>
+work	./subversion/mod_dav_svn/deadprops.c	/^  svn_stringbuf_t *work;$/;"	m	struct:dav_db	file:
+wr_url	./subversion/libsvn_ra_dav/commit.c	/^  const char *wr_url;$/;"	m	file:
+wrap	./subversion/libsvn_ra_svn/ra_svn.h	/^  svn_error_t *(*wrap)(svn_ra_svn_conn_t *conn, $/;"	m	struct:svn_ra_conn_filter_st
+wrapped_dir_baton	./subversion/libsvn_delta/cancel.c	/^  void *wrapped_dir_baton;$/;"	m	struct:dir_baton	file:
+wrapped_edit_baton	./subversion/libsvn_delta/cancel.c	/^  void *wrapped_edit_baton;$/;"	m	struct:edit_baton	file:
+wrapped_editor	./subversion/libsvn_delta/cancel.c	/^  const svn_delta_editor_t *wrapped_editor;$/;"	m	struct:edit_baton	file:
+wrapped_file_baton	./subversion/libsvn_delta/cancel.c	/^  void *wrapped_file_baton;$/;"	m	struct:file_baton	file:
+wres	./subversion/mod_dav_svn/repos.c	/^  dav_walk_resource wres;$/;"	m	file:
+write	./subversion/libsvn_subr/stream.c	/^  svn_write_fn_t write;         \/* substream's write function *\/$/;"	m	struct:zbaton	file:
+write_and_read_file	./subversion/tests/libsvn_fs/fs-test.c	/^write_and_read_file (const char **msg,$/;"	f	file:
+write_buf	./subversion/libsvn_ra_svn/ra_svn.h	/^  char write_buf[4096];$/;"	m	struct:svn_ra_svn_conn_st
+write_entry	./subversion/libsvn_wc/entries.c	/^write_entry (svn_stringbuf_t **output,$/;"	f	file:
+write_fn	./subversion/libsvn_subr/stream.c	/^  svn_write_fn_t write_fn;$/;"	m	struct:svn_stream_t	file:
+write_handler	./subversion/libsvn_delta/svndiff.c	/^write_handler (void *baton,$/;"	f	file:
+write_handler_apr	./subversion/libsvn_subr/stream.c	/^write_handler_apr (void *baton, const char *data, apr_size_t *len)$/;"	f	file:
+write_handler_empty	./subversion/libsvn_subr/stream.c	/^write_handler_empty (void *baton, const char *data, apr_size_t *len)$/;"	f	file:
+write_handler_gz	./subversion/libsvn_subr/stream.c	/^write_handler_gz (void *baton, const char *buffer, apr_size_t *len)$/;"	f	file:
+write_handler_string	./subversion/libsvn_subr/stream.c	/^write_handler_string (void *baton, const char *data, apr_size_t *len)$/;"	f	file:
+write_hash_to_stringbuf	./subversion/libsvn_repos/dump.c	/^write_hash_to_stringbuf (apr_hash_t *hash, $/;"	f	file:
+write_inputstream	./subversion/bindings/swig/swigutil_java.c	/^static svn_error_t *write_inputstream(void *baton,$/;"	f	file:
+write_new_rep	./subversion/tests/libsvn_fs/strings-reps-test.c	/^write_new_rep (const char **msg, $/;"	f	file:
+write_null_string	./subversion/tests/libsvn_fs/strings-reps-test.c	/^write_null_string (const char **msg, $/;"	f	file:
+write_outputstream	./subversion/bindings/swig/swigutil_java.c	/^static svn_error_t *write_outputstream(void *baton,$/;"	f	file:
+write_pos	./subversion/libsvn_ra_svn/ra_svn.h	/^  int write_pos;$/;"	m	struct:svn_ra_svn_conn_st
+write_prop_to_stringbuf	./subversion/svndumpfilter/main.c	/^write_prop_to_stringbuf (svn_stringbuf_t **strbuf,$/;"	f	file:
+write_proplist	./subversion/svnserve/serve.c	/^static svn_error_t *write_proplist(svn_ra_svn_conn_t *conn, apr_pool_t *pool,$/;"	f	file:
+write_rep	./subversion/tests/libsvn_fs/strings-reps-test.c	/^write_rep (const char **msg, $/;"	f	file:
+write_rep_args	./subversion/libsvn_fs/reps-strings.c	/^struct write_rep_args$/;"	s	file:
+write_revision_record	./subversion/libsvn_repos/dump.c	/^write_revision_record (svn_stream_t *stream,$/;"	f	file:
+write_svndiff_strings	./subversion/libsvn_fs/reps-strings.c	/^write_svndiff_strings (void *baton, const char *data, apr_size_t *len)$/;"	f	file:
+write_svndiff_strings_baton	./subversion/libsvn_fs/reps-strings.c	/^struct write_svndiff_strings_baton$/;"	s	file:
+write_to_string	./subversion/libsvn_fs/tree.c	/^write_to_string (void *baton, const char *data, apr_size_t *len)$/;"	f	file:
+write_token	./subversion/libsvn_ra_svn/gssapi.c	/^static svn_error_t *write_token(svn_ra_svn_conn_t *conn, apr_pool_t *pool, $/;"	f	file:
+writebuf_flush	./subversion/libsvn_ra_svn/marshal.c	/^static svn_error_t *writebuf_flush(svn_ra_svn_conn_t *conn, apr_pool_t *pool)$/;"	f	file:
+writebuf_output	./subversion/libsvn_ra_svn/marshal.c	/^static svn_error_t *writebuf_output(svn_ra_svn_conn_t *conn, apr_pool_t *pool,$/;"	f	file:
+writebuf_printf	./subversion/libsvn_ra_svn/marshal.c	/^static svn_error_t *writebuf_printf(svn_ra_svn_conn_t *conn, apr_pool_t *pool,$/;"	f	file:
+writebuf_push	./subversion/libsvn_ra_svn/marshal.c	/^static const char *writebuf_push(svn_ra_svn_conn_t *conn, const char *data,$/;"	f	file:
+writebuf_write	./subversion/libsvn_ra_svn/marshal.c	/^static svn_error_t *writebuf_write(svn_ra_svn_conn_t *conn, apr_pool_t *pool,$/;"	f	file:
+written_out	./subversion/libsvn_repos/dump.c	/^  svn_boolean_t written_out;$/;"	m	struct:dir_baton	file:
+wstream	./subversion/mod_dav_svn/repos.c	/^  svn_stream_t *wstream;$/;"	m	struct:dav_stream	file:
+x_pool	./subversion/libsvn_subr/config_impl.h	/^  apr_pool_t *x_pool;$/;"	m	struct:svn_config_t
+x_value	./subversion/libsvn_subr/config.c	/^  const char *x_value;$/;"	m	struct:cfg_option_t	file:
+x_values	./subversion/libsvn_subr/config_impl.h	/^  svn_boolean_t x_values;$/;"	m	struct:svn_config_t
+xfail	./subversion/include/svn_test.h	/^  int xfail;$/;"	m	struct:svn_test_descriptor_t
+xml	./subversion/clients/cmdline/cl.h	/^  svn_boolean_t xml;             \/* output in xml, e.g., "svn log --xml" *\/$/;"	m	struct:svn_cl__opt_state_t
+xml_char_validity	./subversion/libsvn_subr/xml.c	/^static const int xml_char_validity[256] = {$/;"	v	file:
+xml_escape_attr	./subversion/libsvn_subr/xml.c	/^xml_escape_attr (svn_stringbuf_t **outstr,$/;"	f	file:
+xml_escape_cdata	./subversion/libsvn_subr/xml.c	/^xml_escape_cdata (svn_stringbuf_t **outstr,$/;"	f	file:
+xslt_uri	./subversion/mod_dav_svn/dav_svn.h	/^  const char *xslt_uri;$/;"	m
+xslt_uri	./subversion/mod_dav_svn/mod_dav_svn.c	/^  const char *xslt_uri;         \/* XSL transform URI *\/$/;"	m	file:
+y	./subversion/libsvn_diff/lcs.c	/^    apr_off_t             y;$/;"	m	struct:svn_diff__snake_t	file:
+year	./subversion/tests/libsvn_subr/time-test.c	/^  apr_int32_t year;$/;"	m	struct:date_test	file:
+zalloc	./subversion/libsvn_subr/stream.c	/^zalloc(voidpf opaque, uInt items, uInt size)$/;"	f	file:
+zbaton	./subversion/libsvn_subr/stream.c	/^struct zbaton {$/;"	s	file:
+zerr_to_svn_error	./subversion/libsvn_subr/stream.c	/^zerr_to_svn_error (int zerr, const char *function, z_stream *stream)$/;"	f	file:
+zfree	./subversion/libsvn_subr/stream.c	/^zfree(voidpf opaque, voidpf address)$/;"	f	file:
+~CComDynamicMarshalledUnkArray	./subversion/bindings/com/MarshalArray.h	/^        ~CComDynamicMarshalledUnkArray()$/;"	f	class:CComDynamicMarshalledUnkArray
